      *****************************************************************
       IDENTIFICATION DIVISION.
      *****************************************************************

       PROGRAM-ID.    OPPE6R.

       AUTHOR.        DEBORAH A. WAKEFIELD

       INSTALLATION.  WATKINS MOTOR LINES
                      LAKELAND, FLORIDA.

       DATE-WRITTEN.  JUNE 13, 1995.
      *DATE-COMPILED.

      *REMARKS.       PROCESSING FOR WFMS MAP OPME6R.

      *FUNCTION.      OVERHEAD TRANSFER:(TRAN)
      *               THIS MODULE WILL PROVIDE THE USER WITH THE
      *               ABILITY TO TRANSFER A PRO NUMBER(S) FROM ANOTHER
      *               TERMINAL TO THEIR TERMINAL, TO ANOTHER TERMINAL
      *               FROM THEIR TERMINAL, FROM A TRAILER OR DOCK TO
      *               A TRAILER OR DOCK.  THERE IS ALSO OPTIONS TO
      *               INCLUDE OR EXCLUDE SPECIFIC DESTINATIONS AND
      *               SPECIFIC FREIGHT BILLS. WHEN TRANSFERING PROS
      *               FROM A TRAILER TO A DOCK THE RELAY FREIGHT BILLS
      *               WILL BE PLACED ON THE TRANSFER DOCK AND INBOUND
      *               BILLS WILL BE PLACED ON THE DELIVERY DOCK.  THE
      *               TRANSFER FROM/TO TERMINAL OPTION MUST INDICATE
      *               A PRO NUMBER AND REASON.  TO TRANSFER WITHIN A
      *               TERMINAL FROM TRLR/DOCK TO TRLR/DOCK. THE USER
      *               CAN USE EXCLUSION METHOD OR INDICATE A SPECIFIC
      *
      *               THIS PROGRAM WILL BE STRUCTURED WHERE AS THE
      *               VALIDATION FOR EACH PROCESS WILL TAKE PLACE
      *               IN THE PERFORMING PARAGRAPH (2300-2500)
      *               ALL PROCESSING FOR DETERMINING THE TYPE OF
      *               TRANSFER WILL TAKE PLACE IN THIS AREA.
      *               THE 4000 SERIES
      *               WILL ACTUALLY PROCESS THE TRANSFER TYPE.
      *               THE 6000 SERIES
      *               WILL BE USED FOR VARIOUS SQL CALLS NEEED FOR
      *               PROCESSING.
      *
      *               EDITING WILL BE DONE FOR EACH PRO AND EACH PRO
      *               THAT IS CORRECT WILL BE PROCESSED AND LOCKED ON
      *               THE SCREEN.  ERROR PROS WILL BE RETURNED WITH A
      *               ERROR MESSAGE TO BE REPROCESSED.

      *MAINTENANCE RECORD
      *---------------------------------
      *D A T E   D E S C R I P T I O N |
      *----------------------------------------------------------------
      * CH0001 *DEB WAKEFIELD*  06-13-1995
      *   - INITIAL PROGRAM DEVELOPMENT
      *
      * CH0002  T. GOULET   11/16/95  XXXXX: INCREASED WORKING STORAGE
      *                                      COUNTERS FOR LOADED-WT,
      *                                      HANDLE-WT, BIG-BILL-COUNT,
      *                                      NBR-OF-BILLS, CUBE-PCT TO
      *                                      S9(09) COMP.
      *
      * CH0003  A. BEEN     01/16/96  XXXXX: REASON WAS NOT BEING IN-
      *                                      CLUDED ON THE PRO EVENT
      *
      * CH0004  D. WAKEFIELD 3/20/96  XXXXX: CHANGE EDIT FOR A TERMINAL
      *                                      TRANSFER TO ALLOW THE FROM
      *                                      TERMINAL TO BE EITHER A
      *                                      P&D TERM OR A RELAY POINT
      *
      * CH0005  D. WAKEFIELD 8/07/96  XXXXX: ADD A PRINTED TRANSFER
      *                                      NOTICE TO BE SENT TO THE
      *                                      'TO' TERMINAL ON A TERMINAL
      *                                      TO TERMINAL TRANSFER.  THIS
      *                                      WILL BE FORMATTED SIMILAR T
      *                                      TO THE TRANSFER SCREEN AND
      *                                      WILL LIST THE DOCK THE PRO
      *                                      WAS TRANSFERRED TO.
      *
      *                                      ALSO ADD TF_OWNER = 'C'
      *                                      TO THE WMFMT36A SELECT
      *                                      WHEN DETERMING A VALID
      *                                      P & D TERMINAL.
      *
      * CH0006  B.COLLIER  10/21/96 TOP0194: PROHIBIT THE TRANSFER OF
      *                                      PROS TO THE VOREV DOCK;
      *                                      HOWEVER, ALLOW THE TRANSFER
      *                                      OF PROS FROM THE VOREV
      *                                      DOCK.  ALSO CORRECT PROBLEM
      *                                      OF MAPFAIL ABENDS.
      *
      * CH0007  D.SULLIVAN 10/23/96        - CORRECTED PROBLEM WHERE
      *                                      THE OLDEST DUE DATE ON
      *                                      OP66 WAS NOT BEING SET
      *                                      PROPERLY.
      *                                    - INCREASED WS-DUMMY-HV
      *                                      LENGTH TO ELIMINATE SQL
      *                                      WARNINGS.
      *
      * CH0008  DSS 11/96
      *         - PREVENT PROS W/O 'USA' KEYWORD FROM BEING TRANSFERRED
      *           TO 'AIR' TYPE TRAILER
      *----------------------------------------------------------------
       ENVIRONMENT DIVISION.
      *****************************************************************

       CONFIGURATION SECTION.

       SOURCE-COMPUTER.  IBM-4331.


      ******************************************************************
       DATA DIVISION.
      *****************************************************************

       WORKING-STORAGE SECTION.

           COPY WSRG01.


           COPY WSSTD REPLACING
                   =='??????'== BY =='OPME6R'==
                   =='%%%%%%'== BY =='OPPE6R'==.

       01 WS-OPPE6R-MISC.
          05  PROGRAM-NAME                  PIC X(06)   VALUE 'OPPE6R'.
          05  WS-ERR-MESSAGE                PIC X(15)   VALUE SPACES.
          05  WS-MESSAGE                    PIC X(30)   VALUE SPACES.
          05  WS-REASON                     PIC X(31)   VALUE SPACES.
          05  WS-ENQ                        PIC X(20)   VALUE SPACES.
          05  WS-CHG-TIMESTAMP              PIC X(26)   VALUE SPACES.
          05  WS-CURRENT-TIMESTAMP          PIC X(26)   VALUE SPACES.
          05  WS-DEFAULT-DATE              PIC X(10) VALUE '0001-01-01'.
          05  WS-DB2-DUE-DATE.
              10 WS-DB2-DUE-CC              PIC X(02)   VALUE SPACES.
              10 WS-DB2-DUE-YY              PIC X(02)   VALUE SPACES.
              10 FILLER                     PIC X(01)   VALUE '-'.
              10 WS-DB2-DUE-MM              PIC X(02)   VALUE SPACES.
              10 FILLER                     PIC X(01)   VALUE '-'.
              10 WS-DB2-DUE-DD              PIC X(02)   VALUE SPACES.
          05  WS-BILL-DUE-DT                PIC X(10)   VALUE SPACES.
          05  WS-OLDEST-BILL-DUE-DT         PIC X(10)   VALUE SPACES.
          05  WS-UNIT-NBR                   PIC X(11).
          05  WS-MFST-NBR                   PIC X(12).
          05  WS-MFST-TYPE                  PIC X(01).
          05  WS-HEADLOAD                   PIC X(01).
CH0005    05  WS-DEFAULT-QUEUE              PIC X(02)   VALUE SPACES.
CH0002    05  WS-BIG-BILL-COUNT             PIC S9(09) COMP.
CH0002    05  WS-NBR-BILLS                  PIC S9(09) COMP.
CH0002    05  WS-CUBE-PCT                   PIC S9(09) COMP.
CH0002    05  WS-LOADED-WT                  PIC S9(09) COMP.
CH0002    05  WS-HANDLE-WT                  PIC S9(09) COMP.
          05  WS-TRANS-FROM                 PIC X(11)   VALUE SPACES.
          05  WS-TRANS-TO                   PIC X(11)   VALUE SPACES.
          05  WS-TRANS-FROM-TYPE            PIC X(01)   VALUE SPACES.
          05  WS-TRANS-TO-TYPE              PIC X(01)   VALUE SPACES.
          05  WS-TO-DISP-LOC                PIC X(04)   VALUE SPACES.
          05  WS-TRAN-TERM                  PIC X(04)   VALUE SPACES.
          05  WS-SHIFT-FIELDS               PIC X(13)   VALUE SPACES.
          05  WS-WORK-PRO                   PIC X(13)   VALUE SPACES.
          05  WS-RESPONSE                   PIC X(13)   VALUE SPACES.
          05  WS-PRO-COUNT                  PIC 9(04)   VALUE ZEROS.
          05  WS-PRO-TRAN                   PIC 9(04)   VALUE ZEROS.
          05  WS-RESP-CODE                  PIC S9(08)  VALUE ZEROS.
          05  WS-RESP-DISPLAY               PIC 9(08)   VALUE ZEROS.
          05  WS-HOLD-CURR-LOC              PIC X(04)   VALUE SPACES.
          05  WS-PRO.
              10  WS-PRO-NBR                PIC X(10)   VALUE SPACES.
              10  FILLER                    PIC X(01)   VALUE SPACES.
              10  WS-PRO-SUF                PIC X(02)   VALUE SPACES.
          05  WS-DOCK-ID.
              10  WS-DOCK                   PIC X(02)   VALUE SPACES.
              10  WS-TERM                   PIC X(04)   VALUE SPACES.
          05  WS-MAX-TABLE-LINES            PIC S9(02) COMP-3
                                                        VALUE +9.
          05  WS-MAX-SCRN-LINES             PIC S9(02) COMP-3
                                                        VALUE +9.
CH0005    05  WS-MAX-LINES-PER-PAGE         PIC S9(02) COMP-3
CH0005                                                  VALUE +66.
CH0005    05  WS-PAGE-NO                    PIC S9(02) COMP
CH0005                                                  VALUE +0.
CH0005    05  WS-LINE-CT                    PIC S9(04) COMP
CH0005                                                  VALUE +999.
          05  WS-SCRN                       PIC S9(04) COMP
                                                       VALUE +1.
          05  WS-LNK                        PIC S9(04) COMP
                                                        VALUE +1.
          05  WS-COUNTER                    PIC S9(04) COMP
                                                        VALUE ZEROS.
CH0005    05  WS-REV                        PIC X(01)   VALUE 'N'.
          05  WS-DUMMY-HV                   PIC X(10)   VALUE SPACES.
CH0005    05  WS-CMA-OPEN                   PIC X(01)   VALUE 'N'.
CH0005        88  CMA-OPEN                              VALUE 'Y'.
          05  WS-PRO-ERROR                  PIC X(01)   VALUE 'N'.
              88  PRO-ERROR                             VALUE 'Y'.
          05  WS-UNIT-NOT-FND               PIC X(01)   VALUE 'N'.
              88  UNIT-NOT-FND                          VALUE 'Y'.
          05  WS-PRO-DATA-NOTFND            PIC X(01)   VALUE 'N'.
              88  PRO-DATA-NOTFND                       VALUE 'Y'.
          05  WS-FROMTRLR-ENQUE             PIC X(01)   VALUE 'N'.
              88  FROMTRLR-ENQUE                        VALUE 'Y'.
          05  WS-TOTRLR-ENQUE               PIC X(01)   VALUE 'N'.
              88  TOTRLR-ENQUE                          VALUE 'Y'.
          05  WS-EOF-MFST                   PIC X(01)   VALUE 'N'.
              88  EOF-MFST                              VALUE 'Y'.
          05  WS-EOF-PRO                    PIC X(01)   VALUE 'N'.
              88  EOF-PRO                               VALUE 'Y'.
          05  WS-EOF-PRO-DOCK               PIC X(01)   VALUE 'N'.
              88  EOF-PRO-DOCK                          VALUE 'Y'.
          05  WS-INVLD-DOCK                 PIC X(01)   VALUE 'N'.
              88  INVLD-DOCK                            VALUE 'Y'.
          05  WS-INVLD-TRLR                 PIC X(01)   VALUE 'N'.
              88  INVLD-TRLR                            VALUE 'Y'.
          05  WS-INVLD-UNIT                 PIC X(01)   VALUE 'N'.
              88  INVLD-UNIT                            VALUE 'Y'.
          05  WS-INVLD-PD-TERM              PIC X(01)   VALUE 'N'.
              88  INVLD-PD-TERM                         VALUE 'Y'.
CH0004    05  WS-INVLD-RL-TERM              PIC X(01)   VALUE 'N'.
CH0004        88  INVLD-RL-TERM                         VALUE 'Y'.
          05  WS-HL-FLAG                    PIC X(01)   VALUE 'N'.
              88  HL-FLAG                               VALUE 'Y'.
          05  WS-LAST-HL                    PIC X(01)   VALUE 'N'.
              88  LAST-HL                               VALUE 'Y'.
          05  WS-MISLOAD                    PIC X(01)   VALUE 'N'.
              88  MISLOAD                               VALUE 'Y'.
CH0008    05  WS-USA-FOUND-SW               PIC X(01)   VALUE SPACE.

          05  WS-PROCESS-PRO.
              10  WS-PRO-CO                 PIC X(01).
              10  WS-PRO-PRO-NBR            PIC X(10).
              10  WS-PRO-PRO-SUF            PIC X(02).
              10  WS-PRO-PRO-LOC-CD         PIC X(01).
              10  WS-PRO-UNIT-NBR           PIC X(11).
              10  WS-PRO-DOCK               PIC X(02).
              10  WS-PRO-TRM-ID             PIC X(04).

          05  WS-FROM-OP66-TRLR.
              10  WS-FR-CO                  PIC X(01).
              10  WS-FR-UNIT-NBR            PIC X(11).
              10  WS-FR-UNIT-STATUS         PIC X(04).
              10  WS-FR-UNIT-TYP            PIC X(04).
              10  WS-FR-CURR-LOC            PIC X(04).
              10  WS-FR-MFST-TYP            PIC X(01).
              10  WS-FR-MFST-NBR            PIC X(12).
              10  WS-FR-NBR-BILLS           PIC S9(04) COMP.
              10  WS-FR-LOADED-WT           PIC S9(04) COMP.
              10  WS-FR-HANDLE-WT           PIC S9(04) COMP.
              10  WS-FR-OLDEST-BILL-DUE-DT  PIC X(10).
              10  WS-FR-ORIG-TERM           PIC X(04).
              10  WS-FR-DEST-TERM           PIC X(04).
              10  WS-FR-HEADLOAD            PIC X(01).
              10  WS-FR-MFST-HISTORY        PIC X(01).
              10  WS-FR-BIG-BILL-COUNT      PIC S9(04) COMP.
              10  WS-FR-CHG-TIMESTAMP       PIC X(26).
              10  WS-FR-STATUS-TIMESTAMP    PIC X(26).
              10  WS-FR-TRAP-FLAG           PIC X(01).
              10  WS-FR-SPEC-INST           PIC X(43).
              10  WS-FR-MFST-PRINTED        PIC X(01).
              10  WS-FR-SPEC-FLAG           PIC X(01).
              10  WS-FR-TRACTOR-NBR         PIC X(11).
              10  WS-FR-TRIP-ORIG           PIC X(04).
              10  WS-FR-TRIP-NBR            PIC X(06).
              10  WS-FR-CUBE-PCT            PIC S9(04) COMP.
              10  WS-FR-TFL-TIMESTAMP       PIC X(26).
              10  WS-FR-SEAL-NBR            PIC X(12).
              10  WS-FR-RAIL-NAME           PIC X(11).
              10  WS-FR-DP-RECM-DOOR        PIC X(03).
              10  WS-FR-DP-RECM-TIME        PIC S9(04) COMP.
              10  WS-FR-DP-LOCK             PIC X(01).
              10  WS-FR-ALT-STATUS          PIC X(04).
              10  WS-FR-ALT-STATUS-TS       PIC X(26).
              10  WS-FR-ALT-STATUS-COMM     PIC X(43).
              10  WS-FR-TRIP-DEST           PIC X(04).
              10  WS-FR-RAIL-DEST           PIC X(04).
              10  WS-FR-EXCP-SEAL-NBR       PIC X(12).
              10  WS-FR-EXCP-FLAG           PIC X(01).
              10  WS-FR-TSL-TIMESTAMP       PIC X(26).

          05  WS-FROM-OP68-TRLR.
              10  WS-FR-OP68-CO                  PIC X(01).
              10  WS-FR-OP68-UNIT-NBR            PIC X(11).
              10  WS-FR-OP68-UNIT-STATUS         PIC X(04).
              10  WS-FR-OP68-UNIT-TYP            PIC X(04).
              10  WS-FR-OP68-CURR-LOC            PIC X(04).
              10  WS-FR-OP68-MFST-TYP            PIC X(01).
              10  WS-FR-OP68-MFST-NBR            PIC X(12).
              10  WS-FR-OP68-NBR-BILLS           PIC S9(04) COMP.
              10  WS-FR-OP68-LOADED-WT           PIC S9(04) COMP.
              10  WS-FR-OP68-HANDLE-WT           PIC S9(04) COMP.
              10  WS-FR-OP68-OLDEST-BILL-DUE-DT  PIC X(10).
              10  WS-FR-OP68-ORIG-TERM           PIC X(04).
              10  WS-FR-OP68-DEST-TERM           PIC X(04).
              10  WS-FR-OP68-HEADLOAD            PIC X(01).
              10  WS-FR-OP68-MFST-HISTORY        PIC X(01).
              10  WS-FR-OP68-BIG-BILL-COUNT      PIC S9(04) COMP.
              10  WS-FR-OP68-CHG-TIMESTAMP       PIC X(26).
              10  WS-FR-OP68-STATUS-TIMESTAMP    PIC X(26).
              10  WS-FR-OP68-TRAP-FLAG           PIC X(01).
              10  WS-FR-OP68-SPEC-INST           PIC X(43).
              10  WS-FR-OP68-MFST-PRINTED        PIC X(01).
              10  WS-FR-OP68-SPEC-FLAG           PIC X(01).
              10  WS-FR-OP68-TRACTOR-NBR         PIC X(11).
              10  WS-FR-OP68-TRIP-ORIG           PIC X(04).
              10  WS-FR-OP68-TRIP-NBR            PIC X(06).
              10  WS-FR-OP68-CUBE-PCT            PIC S9(04) COMP.
              10  WS-FR-OP68-TFL-TIMESTAMP       PIC X(26).
              10  WS-FR-OP68-SEAL-NBR            PIC X(12).
              10  WS-FR-OP68-RAIL-NAME           PIC X(11).
              10  WS-FR-OP68-DP-RECM-DOOR        PIC X(03).
              10  WS-FR-OP68-DP-RECM-TIME        PIC S9(04) COMP.
              10  WS-FR-OP68-DP-LOCK             PIC X(01).
              10  WS-FR-OP68-ALT-STATUS          PIC X(04).
              10  WS-FR-OP68-ALT-STATUS-TS       PIC X(26).
              10  WS-FR-OP68-ALT-STATUS-COMM     PIC X(43).
              10  WS-FR-OP68-TRIP-DEST           PIC X(04).
              10  WS-FR-OP68-RAIL-DEST           PIC X(04).
              10  WS-FR-OP68-EXCP-SEAL-NBR       PIC X(12).
              10  WS-FR-OP68-EXCP-FLAG           PIC X(01).
              10  WS-FR-OP68-TSL-TIMESTAMP       PIC X(26).

          05  WS-TO-OP66-TRLR.
              10  WS-TO-CO                  PIC X(01).
              10  WS-TO-UNIT-NBR            PIC X(11).
              10  WS-TO-UNIT-STATUS         PIC X(04).
              10  WS-TO-UNIT-TYP            PIC X(04).
              10  WS-TO-CURR-LOC            PIC X(04).
              10  WS-TO-MFST-TYP            PIC X(01).
              10  WS-TO-MFST-NBR            PIC X(12).
              10  WS-TO-NBR-BILLS           PIC S9(04) COMP.
              10  WS-TO-LOADED-WT           PIC S9(04) COMP.
              10  WS-TO-HANDLE-WT           PIC S9(04) COMP.
              10  WS-TO-OLDEST-BILL-DUE-DT  PIC X(10).
              10  WS-TO-ORIG-TERM           PIC X(04).
              10  WS-TO-DEST-TERM           PIC X(04).
              10  WS-TO-HEADLOAD            PIC X(01).
              10  WS-TO-MFST-HISTORY        PIC X(01).
              10  WS-TO-BIG-BILL-COUNT      PIC S9(04) COMP.
              10  WS-TO-CHG-TIMESTAMP       PIC X(26).
              10  WS-TO-STATUS-TIMESTAMP    PIC X(26).
              10  WS-TO-TRAP-FLAG           PIC X(01).
              10  WS-TO-SPEC-INST           PIC X(43).
              10  WS-TO-MFST-PRINTED        PIC X(01).
              10  WS-TO-SPEC-FLAG           PIC X(01).
              10  WS-TO-TRACTOR-NBR         PIC X(11).
              10  WS-TO-TRIP-ORIG           PIC X(04).
              10  WS-TO-TRIP-NBR            PIC X(06).
              10  WS-TO-CUBE-PCT            PIC S9(04) COMP.
              10  WS-TO-TFL-TIMESTAMP       PIC X(26).
              10  WS-TO-SEAL-NBR            PIC X(12).
              10  WS-TO-RAIL-NAME           PIC X(11).
              10  WS-TO-DP-RECM-DOOR        PIC X(03).
              10  WS-TO-DP-RECM-TIME        PIC S9(04) COMP.
              10  WS-TO-DP-LOCK             PIC X(01).
              10  WS-TO-ALT-STATUS          PIC X(04).
              10  WS-TO-ALT-STATUS-TS       PIC X(26).
              10  WS-TO-ALT-STATUS-COMM     PIC X(43).
              10  WS-TO-TRIP-DEST           PIC X(04).
              10  WS-TO-RAIL-DEST           PIC X(04).
              10  WS-TO-EXCP-SEAL-NBR       PIC X(12).
              10  WS-TO-EXCP-FLAG           PIC X(01).
              10  WS-TO-TSL-TIMESTAMP       PIC X(26).

          05  WS-TO-OP68-TRLR.
              10  WS-TO-OP68-CO                  PIC X(01).
              10  WS-TO-OP68-UNIT-NBR            PIC X(11).
              10  WS-TO-OP68-UNIT-STATUS         PIC X(04).
              10  WS-TO-OP68-UNIT-TYP            PIC X(04).
              10  WS-TO-OP68-CURR-LOC            PIC X(04).
              10  WS-TO-OP68-MFST-TYP            PIC X(01).
              10  WS-TO-OP68-MFST-NBR            PIC X(12).
              10  WS-TO-OP68-NBR-BILLS           PIC S9(04) COMP.
              10  WS-TO-OP68-LOADED-WT           PIC S9(04) COMP.
              10  WS-TO-OP68-HANDLE-WT           PIC S9(04) COMP.
              10  WS-TO-OP68-OLDEST-BILL-DUE-DT  PIC X(10).
              10  WS-TO-OP68-ORIG-TERM           PIC X(04).
              10  WS-TO-OP68-DEST-TERM           PIC X(04).
              10  WS-TO-OP68-HEADLOAD            PIC X(01).
              10  WS-TO-OP68-MFST-HISTORY        PIC X(01).
              10  WS-TO-OP68-BIG-BILL-COUNT      PIC S9(04) COMP.
              10  WS-TO-OP68-CHG-TIMESTAMP       PIC X(26).
              10  WS-TO-OP68-STATUS-TIMESTAMP    PIC X(26).
              10  WS-TO-OP68-TRAP-FLAG           PIC X(01).
              10  WS-TO-OP68-SPEC-INST           PIC X(43).
              10  WS-TO-OP68-MFST-PRINTED        PIC X(01).
              10  WS-TO-OP68-SPEC-FLAG           PIC X(01).
              10  WS-TO-OP68-TRACTOR-NBR         PIC X(11).
              10  WS-TO-OP68-TRIP-ORIG           PIC X(04).
              10  WS-TO-OP68-TRIP-NBR            PIC X(06).
              10  WS-TO-OP68-CUBE-PCT            PIC S9(04) COMP.
              10  WS-TO-OP68-TFL-TIMESTAMP       PIC X(26).
              10  WS-TO-OP68-SEAL-NBR            PIC X(12).
              10  WS-TO-OP68-RAIL-NAME           PIC X(11).
              10  WS-TO-OP68-DP-RECM-DOOR        PIC X(03).
              10  WS-TO-OP68-DP-RECM-TIME        PIC S9(04) COMP.
              10  WS-TO-OP68-DP-LOCK             PIC X(01).
              10  WS-TO-OP68-ALT-STATUS          PIC X(04).
              10  WS-TO-OP68-ALT-STATUS-TS       PIC X(26).
              10  WS-TO-OP68-ALT-STATUS-COMM     PIC X(43).
              10  WS-TO-OP68-TRIP-DEST           PIC X(04).
              10  WS-TO-OP68-RAIL-DEST           PIC X(04).
              10  WS-TO-OP68-EXCP-SEAL-NBR       PIC X(12).
              10  WS-TO-OP68-EXCP-FLAG           PIC X(01).
              10  WS-TO-OP68-TSL-TIMESTAMP       PIC X(26).



       01 WS-PRO-COUNT-MESSAGE.
          05 WS-NBR-OF-PROS                     PIC ZZZ9.
          05 FILLER                             PIC X(27)  VALUE
               ' PROS HAVE BEEN TRANSFERRED'.

       01 WS-ERROR-MESSAGE.
          05  WS-ER-INVLD-UNIT       PIC X(15)  VALUE
                   'INVALID UNIT'.
          05  WS-ER-INVLD-DOCK       PIC X(15)  VALUE
                   'INVALID DOCK'.
          05  WS-ER-INVLD-PD-TERM    PIC X(15)  VALUE
                   'INVALID PD TERM'.
          05  WS-ER-INVLD-PRO        PIC X(15)  VALUE
                   'INVALID PRO  '.
          05  WS-ER-REASON           PIC X(15)  VALUE
                   'ENTER REASON '.
          05  WS-ER-TRLR-ST          PIC X(15)  VALUE
                   'INVALID TLR STA'.
          05  WS-ER-PRO-UNIT         PIC X(15)  VALUE
                   'INVALID TRLR '.
          05  WS-ER-PRO-NOT-TLR      PIC X(15)  VALUE
                   'PRO NOT ON TRL'.
          05  WS-ER-PRO-NOT-DCK      PIC X(15)  VALUE
                   'PRO NOT ON DCK'.
          05  WS-ER-PRO-LOC.
              10 FILLER              PIC X(10)  VALUE
                   'PRO LOC = '.
              10 WS-ER-LOC          PIC X(05).
CH0008    05  WS-ER-PRO-NOT-USA     PIC X(15)   VALUE
CH0008             'AIR TRLR-NO USA'.


CH0005 01 WS-REPORT-LINES.
CH0005    05  WS-HEADING-LINE-1.
CH0005        10  FILLER             PIC X(06)  VALUE
CH0005               'PAGE: '.
CH0005        10  WS-HL1-PAGE-NO     PIC Z99.
CH0005        10  FILLER             PIC X(22)  VALUE SPACES.
CH0005        10  FILLER             PIC X(17)  VALUE
CH0005               'OVERHEAD TRANSFER'.
CH0005        10  FILLER             PIC X(17)  VALUE SPACES.
CH0005        10  FILLER             PIC X(06)  VALUE
CH0005               'DATE: '.
CH0005        10  WS-HL1-DATE        PIC X(08)  VALUE SPACES.
CH0005    05  WS-HEADING-LINE-2.
CH0005        10  FILLER             PIC X(27)  VALUE SPACES.
CH0005        10  FILLER             PIC X(09)  VALUE
CH0005               'COMPANY: '.
CH0005        10  WS-HL2-CMPNY       PIC X(01)  VALUE SPACES.
CH0005        10  FILLER             PIC X(04)  VALUE SPACES.
CH0005        10  FILLER             PIC X(10)  VALUE
CH0005               'TERMINAL: '.
CH0005        10  WS-HL2-TERM        PIC X(03)  VALUE SPACES.
CH0005        10  FILLER             PIC X(11)  VALUE SPACES.
CH0005        10  FILLER             PIC X(06)  VALUE
CH0005               'TIME: '.
CH0005        10  WS-HL2-TIME        PIC X(08)  VALUE SPACES.
CH0005    05  WS-HEADING-LINE-3.
CH0005        10  FILLER             PIC X(18)  VALUE SPACES.
CH0005        10  FILLER             PIC X(20)  VALUE
CH0005               'TRANSFER FROM TERM: '.
CH0005        10  WS-HL3-FROM-TERM   PIC X(03)  VALUE SPACES.
CH0005        10  FILLER             PIC X(06)  VALUE SPACES.
CH0005        10  FILLER             PIC X(09)  VALUE
CH0005               'TO TERM: '.
CH0005        10  WS-HL3-TO-TERM     PIC X(03)  VALUE SPACES.
CH0005        10  FILLER             PIC X(19)  VALUE SPACES.
CH0005    05  WS-HEADING-LINE-4.
CH0005        10  FILLER             PIC X(06)  VALUE SPACES.
CH0005        10  FILLER             PIC X(13)  VALUE
CH0005               'PRO-NUMBER   '.
CH0005        10  FILLER             PIC X(03)  VALUE SPACES.
CH0005        10  FILLER             PIC X(30)  VALUE
CH0005               'REASON                        '.
CH0005        10  FILLER             PIC X(03)  VALUE SPACES.
CH0005        10  FILLER             PIC X(04)  VALUE
CH0005               'DOCK'.
CH0005        10  FILLER             PIC X(23)  VALUE SPACES.
CH0005    05  WS-DETAIL-LINE-1.
CH0005        10  FILLER             PIC X(06)  VALUE SPACES.
CH0005        10  WS-DL1-PRO-NBR     PIC X(13)  VALUE SPACES.
CH0005        10  FILLER             PIC X(03)  VALUE SPACES.
CH0005        10  WS-DL1-REASON      PIC X(30)  VALUE SPACES.
CH0005        10  FILLER             PIC X(03)  VALUE SPACES.
CH0005        10  WS-DL1-DOCK        PIC X(04)  VALUE SPACES.
CH0005        10  FILLER             PIC X(23)  VALUE SPACES.

********************************************************************
********USED BY 10000-FIND-LOADPLAN
********************************************************************
           EXEC SQL INCLUDE OPCLDPLW  END-EXEC.

********************************************************************
********USED BY 10000-FIND-LOADPLAN
********************************************************************
       01 DTPM-DATE-PARAMETERS.
           EXEC SQL INCLUDE WSDTPARM END-EXEC.
CH0005
CH0005     COPY CMAWOPEN.
CH0005
CH0005     COPY CMAWWRIT.
CH0005
CH0005     COPY CMAWCLOS.
CH0005
CH0005     COPY CMAWSTAT.

           COPY WSSQLERR.

           COPY DFHBMSCA.

           COPY DFHAID.

           EXEC SQL INCLUDE SQLCA    END-EXEC.

           EXEC SQL INCLUDE WMOPT66A END-EXEC.

           EXEC SQL INCLUDE WMOPT68A END-EXEC.

           EXEC SQL INCLUDE WMOPT77A END-EXEC.

           EXEC SQL INCLUDE WMOPT12A END-EXEC.

           EXEC SQL INCLUDE WMOPT14A END-EXEC.

           EXEC SQL INCLUDE WMOPT22A END-EXEC.

           EXEC SQL INCLUDE WMOPT51A END-EXEC.

           EXEC SQL INCLUDE WMOPT52A END-EXEC.

           EXEC SQL INCLUDE WMOPT84A END-EXEC.

           EXEC SQL INCLUDE WMRTT05A END-EXEC.

           EXEC SQL INCLUDE WMBIT11A END-EXEC.

CH0008     EXEC SQL INCLUDE WMBIT13A END-EXEC.

           EXEC SQL INCLUDE WMCUT02A END-EXEC.

           EXEC SQL INCLUDE WMFMT10A END-EXEC.

           EXEC SQL INCLUDE WMFMT11A END-EXEC.

           EXEC SQL INCLUDE WMFMT24A END-EXEC.

           EXEC SQL INCLUDE WMFMT27A END-EXEC.

           EXEC SQL INCLUDE WMFMT36A END-EXEC.

           EXEC SQL INCLUDE WMFMT40A END-EXEC.

           EXEC SQL INCLUDE WMFMT41A END-EXEC.

           EXEC SQL INCLUDE WMFMT48A END-EXEC.

       LINKAGE SECTION.
      *================
       01  DFHCOMMAREA.
           COPY LKCMAREA.

           05  ACA-WORK-AREA-1 REDEFINES ACA-WORK-AREA.
             07 LK-SCREEN-AREA.
                10  LK-FROMTRM       PIC X(04).
                10  LK-TOTRM         PIC X(04).
                10  LK-FROMTRLR      PIC X(13).
                10  LK-FROMDOCK      PIC X(02).
                10  LK-TOTRLR        PIC X(13).
                10  LK-TODOCK        PIC X(02).
                10  LK-ALL           PIC X(01).
                10  LK-XPRO          PIC X(01).
                10  LK-DST           PIC X(04).
                10  LK-XDST          PIC X(04).
                10  LK-ORG           PIC X(04).
                10  LK-XORG          PIC X(04).
                10  LK-PRO-LINES OCCURS 9 TIMES.
                    15  LK-PRO       PIC X(13).
                    15  LK-REASON    PIC X(31).
                    15  LK-ERROR     PIC X(15).
                10  LK-ATTR1         PIC X(1).
                10  LK-ATTR2         PIC X(1).
CH0008          10  LK-PRO-COUNT     PIC 9(04).


           COPY OPCE6R.


       01  FILLER REDEFINES DCMASKI.
             10 FILLER                PIC X(228).
             10 PANEL-ENTRIES OCCURS 9.
               15  PNL-PROL           PIC S9(04) COMP.
               15  PNL-PROA           PIC X(01).
               15  FILLER             PIC X(04).
               15  PNL-PROI           PIC X(13).
               15  PNL-PROO  REDEFINES PNL-PROI    PIC X(13).
               15  PNL-REASONL        PIC S9(04) COMP.
               15  PNL-REASONA        PIC X(01).
               15  FILLER             PIC X(04).
               15  PNL-REASONI        PIC X(31).
               15  PNL-REASONO REDEFINES PNL-REASONI  PIC X(31).
               15  PNL-ERRORL         PIC S9(04) COMP.
               15  PNL-ERRORA         PIC X(01).
               15  FILLER             PIC X(04).
               15  PNL-ERRORI         PIC X(15).
               15  PNL-ERRORO REDEFINES PNL-ERRORI  PIC X(15).

           COPY LKVERR1.

       PROCEDURE DIVISION.
      *===================

           PERFORM 1000-INITIALIZE THRU 1000-EXIT.

           PERFORM 2000-MAIN THRU 2000-EXIT.

           PERFORM 3000-TERMINATE THRU 3000-EXIT.

           GOBACK.

       1000-INITIALIZE.
      *-----------------
      ***
      ***   INITIALIZE VARIABLES
      ***
           COPY FMCINIT.

           COPY FMCENV.

           MOVE ATTR-UADM TO NXTSCRNA.

CH0006     MOVE ATTR-PADM TO MSKDATEA.

           INITIALIZE  OP66-WMOPT66A
                       OP68-WMOPT68A
                       OP77-WMOPT77A
                       OP12-WMOPT12A
                       OP14-WMOPT14A
                       OP51-WMOPT51A
                       OP52-WMOPT52A
                       OP84-WMOPT84A
                       WMOPT22A
                       WMRTT05A
                       WMBIT11A
                       WMCUT02A
                       WMFMT10A
                       WMFMT11A
                       WMFMT24A
                       WMFMT27A
                       WMFMT36A
                       WMFMT40A
                       WMFMT41A
                       WMFMT48A.

           MOVE TFMSACA-CMPNY TO OP66-CMPNY
                                 OP68-CMPNY
                                 OP77-CMPNY
                                 OP12-CMPNY
                                 OP14-CMPNY
                                 OP51-CMPNY
                                 OP52-CMPNY
                                 OP84-CMPNY
                                 TF-CMPNY OF WMOPT22A
                                 TF-CMPNY OF WMRTT05A
                                 TF-CMPNY OF WMBIT11A
                                 TF-CMPNY OF WMFMT27A
                                 TF-CMPNY OF WMFMT36A.


       1000-EXIT.  EXIT.

       2000-MAIN.
      *-----------
      ***
      ***  MAIN DRIVING LOGIC OF PROGRAM
      ***

           MOVE '2000-MAIN      ' TO WS-MESSAGE.

           IF SCA-CURRENT-PROGRAM NOT = WS-PROG-ID
              PERFORM 2100-PROCESS-FIRST-TIME THRU 2100-EXIT
              GO TO 2000-EXIT
           END-IF.

           PERFORM 7100-RECEIVE-SCREEN THRU 7100-EXIT.

           INSPECT DCMASKI REPLACING ALL '_'   BY SPACES.

           PERFORM 3500-CHECK-FASTPATH THRU 3500-EXIT.

           IF ACA-WSMSG-CODE = SPACES
              IF NXTSCRNI = SPACES OR LOW-VALUES
                 MOVE ALL '_'   TO NXTSCRNO
                 MOVE ATTR-UADM TO NXTSCRNA
              END-IF
           END-IF.

      *************************************************************
      ***     VALIDATE TERMINAL INTERUPT (KEY JUST PRESSED)
      ***       PF1   - HELP
      ***       PF3   - RETURN TO PREVIOUS MENU
      ***       PF4   - TRANSFER TO OPPE6L (LOADING)
      ***       PF9   - TRANSFER TO OPPESE (CITY MANIFEST ENTRY)
      ***       PF12  - CLEAR
      ***       ENTER - PROCESS
      *************************************************************

           IF NOT WX-ERROR-MODE
              IF EIBAID = DFHPF1 OR
                          DFHPF3 OR
                          DFHPF4 OR
                          DFHPF9 OR
                          DFHPF12 OR
                          DFHENTER
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 MOVE '2' TO WS-SEND-SCREEN-FLAG
                 IF ACA-WSMSG-CODE = SPACES
                    MOVE 'S00003'  TO ACA-WSMSG-CODE
                    MOVE -1        TO NXTSCRNL
                    MOVE ATTR-UABM TO NXTSCRNA
                 END-IF
              END-IF
           END-IF.

           IF EIBAID = DFHPF4 OR
              EIBAID = DFHPF9
               PERFORM 2700-DETERMINE-FLOW-OF-CONTROL THRU 2700-EXIT
           END-IF.

           IF EIBAID = DFHPF12
               PERFORM 2100-PROCESS-FIRST-TIME THRU 2100-EXIT
               GO TO 2000-EXIT
           END-IF.

           IF EIBAID = DFHENTER
               PERFORM 2200-PROCESS-MAP  THRU 2200-EXIT
           END-IF.

           IF ACA-WSMSG-CODE NOT = SPACES
               PERFORM 9200-TRANSLATE-MSG-CODE THRU 9200-EXIT
           ELSE
               MOVE '3' TO WS-SEND-SCREEN-FLAG
               IF WS-PRO-TRAN > ZERO
                  MOVE WS-PRO-TRAN TO WS-NBR-OF-PROS
                  MOVE WS-PRO-COUNT-MESSAGE TO ERRLINEO
               ELSE
                  MOVE 'S00001'  TO ACA-WSMSG-CODE
CH0008            MOVE ZEROS     TO LK-PRO-COUNT
               END-IF
               MOVE -1        TO NXTSCRNL
               MOVE ATTR-UABM TO NXTSCRNA
           END-IF.

           EVALUATE TRUE
               WHEN WX-FIRST-TIME
                  MOVE '1' TO WS-SEND-SCREEN-FLAG
               WHEN WX-ERROR-MODE
                  MOVE '2' TO WS-SEND-SCREEN-FLAG
               WHEN OTHER
                  MOVE '3' TO WS-SEND-SCREEN-FLAG
           END-EVALUATE.

       2000-EXIT.  EXIT.

       2100-PROCESS-FIRST-TIME.
      *-----------

           MOVE '2100-PROCESS-FIRST-TIME' TO WS-MESSAGE.

           INITIALIZE ACA-WORK-AREA-1.

           PERFORM 8990-DETERMINE-SECURITY   THRU 8990-EXIT.

           MOVE WX-ATTR1 TO LK-ATTR1.
           MOVE WX-ATTR2 TO LK-ATTR2.

           MOVE WS-PROG-ID TO SCA-CURRENT-PROGRAM
                              WS-FOCT-XCTLPGM.
           MOVE 'F' TO WX-PROCESSING-MODE-FLAG.

           PERFORM 5000-BUILD-N-DISPLAY-MAP  THRU 5000-EXIT.

           COPY OPCSTUD.

           IF TFMSACA-OPER-TRMID = 'REV'
              MOVE ATTR-PADX TO FROMTRLA
                                TOTRLRA
                                FROMDCKA
                                TODCKA
                                ALLA
                                XPROA
                                DSTA
                                XDSTA
                                ORGA
                                XORGA
           END-IF.

       2100-EXIT.  EXIT.


       2200-PROCESS-MAP.
      *-----------

           MOVE '2200-PROCESS-MAP' TO WS-MESSAGE.

           PERFORM 5100-SCREEN-INITIALIZATION THRU 5100-EXIT.

           PERFORM 5200-CHECK-FOR-EOF THRU 5200-EXIT.

      ************************************************************
      ***     VALIDATE MAP AND MOVE DATA TO COMMUNICATIONS FIELD
      *************************************************************

           IF LK-FROMTRM > SPACES
              IF LK-TOTRM > SPACES
                 CONTINUE
              ELSE
                  MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                  IF ACA-WSMSG-CODE = SPACES
************** MUST ENTER BOTH TERMINALS FOR TRANSFER
                     MOVE 'OP0610' TO ACA-WSMSG-CODE
                     MOVE -1 TO TOTRML
                  END-IF
                  MOVE ATTR-UABX TO TOTRMA
                  GO TO 2200-EXIT
              END-IF
           ELSE
              IF LK-TOTRM = SPACES
                 CONTINUE
              ELSE
                  MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                  IF ACA-WSMSG-CODE = SPACES
************** MUST ENTER BOTH TERMINALS FOR TRANSFER
                     MOVE 'OP0610' TO ACA-WSMSG-CODE
                     MOVE -1 TO FROMTRML
                  END-IF
                  MOVE ATTR-UABX TO FROMTRMA
                  GO TO 2200-EXIT
              END-IF
           END-IF.

           IF LK-FROMTRM > SPACES
              IF LK-FROMTRLR > SPACES
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************** CANNOT PROCESS A TERMINAL TRANSFER
************** AND TRLR/DOCK AT THE SAME TIME*****************
                    MOVE 'OP0560' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRML
                 END-IF
                 MOVE ATTR-UABX TO FROMTRMA
                 GO TO 2200-EXIT
              ELSE
                 IF LK-FROMDOCK > SPACES
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************** CANNOT PROCESS A TERMINAL TRANSFER
************** AND TRLR/DOCK AT THE SAME TIME*****************
                       MOVE 'OP0560' TO ACA-WSMSG-CODE
                       MOVE -1 TO FROMTRML
                    END-IF
                    MOVE ATTR-UABX TO FROMTRMA
                    GO TO 2200-EXIT
                 END-IF
              END-IF
           ELSE
               IF LK-FROMTRLR > SPACES OR
                  LK-FROMDOCK  > SPACES
                  CONTINUE
               ELSE
                  MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                  IF ACA-WSMSG-CODE = SPACES
 ***********MUST HAVE A FROM/TO COMBINATION *************
                     MOVE 'OP0564' TO ACA-WSMSG-CODE
                     MOVE -1       TO FROMTRLL
                  END-IF
                  MOVE ATTR-UABX TO FROMTRLA
                  GO TO 2200-EXIT
               END-IF
           END-IF.

           IF LK-FROMTRM > SPACES
              IF LK-TOTRLR > SPACES
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************** CANNOT PROCESS A TERMINAL TRANSFER
************** AND TRLR/DOCK AT THE SAME TIME*****************
                    MOVE 'OP0560' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRML
                 END-IF
                 MOVE ATTR-UABX TO FROMTRMA
                 GO TO 2200-EXIT
              ELSE
                 IF LK-TODOCK > SPACES
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************** CANNOT PROCESS A TERMINAL TRANSFER
************** AND TRLR/DOCK AT THE SAME TIME*****************
                       MOVE 'OP0560' TO ACA-WSMSG-CODE
                       MOVE -1 TO FROMTRML
                    END-IF
                    MOVE ATTR-UABX TO FROMTRMA
                    GO TO 2200-EXIT
                 END-IF
              END-IF
           END-IF.

           IF LK-FROMTRM > SPACES
              PERFORM 2300-TERMINAL-TRANS THRU 2300-EXIT
           END-IF.

           IF LK-FROMTRLR > SPACES
              PERFORM 2400-TRLR-TRANS      THRU 2400-EXIT
           END-IF.

           IF LK-FROMDOCK  > SPACES
              PERFORM 2500-DOCK-TRANS      THRU 2500-EXIT
           END-IF.

           IF WS-PRO-ERROR = 'Y'
              MOVE 'E'       TO WX-PROCESSING-MODE-FLAG
              MOVE '2'       TO WS-SEND-SCREEN-FLAG
              IF ACA-WSMSG-CODE = SPACES
************** CORRECT PROS  IN ERROR                ***************
                 MOVE 'OP0561'  TO ACA-WSMSG-CODE
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE NOT = SPACES
              PERFORM 9200-TRANSLATE-MSG-CODE THRU 9200-EXIT
              MOVE ALL '_'   TO NXTSCRNO
              MOVE ATTR-UADM TO NXTSCRNA
           ELSE
              MOVE ALL '_'   TO NXTSCRNO
              MOVE -1        TO NXTSCRNL
              MOVE ATTR-UADM TO NXTSCRNA
           END-IF.

       2200-EXIT.  EXIT.


       2300-TERMINAL-TRANS.
      *-----------------------
      *******************************************************
      ***  THIS PARAGRAPH WILL HANDLE ALL THE PROCESSING  ***
      ***  FOR A TERMINAL TO TERMINAL TRANSFER. THE FIRST ***
      ***  PART WILL DO EDITING THAT IS UNIQUE FOR TERMINAL**
      ***  TRANSFERS.  THEN PROCESSING FOR A TRANSFER FROM **
      ***  A TRAILER OR DOCK WILL EXEC COMMON ROUTINES. ON A*
      ***  TERMINAL TRANSFER THE PROS CAN BE LOCATED ON A  **
      ***  DOCK OR TRAILER.  ONCE THE LOC OF A PRO HAS BEEN**
      ***  DETERMINED THE FROM PROCESS WILL BE PERFORMED.  **
      ***  ALL PROS WILL BE TRANSFERRED TO A DOCK FOR THE  **
      ***  TO TERMINAL.  THIS WILL BE EITHER 'TD' OR 'DD'  **
      ***  OR 'VO' DOCK FOR A 'REV' TERMINIAL              **
      ***  DEPENDING ON THE PRO DESTINATION. IF THE PRO    **
      ***  DESTINATION IS EQUAL TO THE TO TERMINAL THEN    **
      ***  THE PRO IS PLACED ON THE 'DD' DELIVERY DOCK.    **
      ***  IF THE PRO DESTINATION IS NOT EQUAL TO THE      **
      ***  TO TERMINAL THEN THE PRO IS PLACED ON 'TD'      **
      ***  TRANSFER DOCK.
CH0005***  PRINT A NOTICE TO THE 'TO' TERMINAL OF THE PROS
CH0005***  BEING TRANSFERED.
      *******************************************************

           MOVE '2300-TERMINAL-TRANSFER'     TO WS-MESSAGE.

           IF LK-FROMTRM = TFMSACA-OPER-TRMID OR
              LK-TOTRM   = TFMSACA-OPER-TRMID
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ EITHER FROM OR TO TERMINAL*********************
************ MUST EQUAL OPER'S TERMINAL*********************
                    MOVE 'OP0562' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRML
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMTRMA
                 GO TO 2300-EXIT
              END-IF.

           IF LK-FROMTRM = TFMSACA-OPER-TRMID AND
              LK-TOTRM   = TFMSACA-OPER-TRMID
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
************ CANNOT TERMINAL TRANSFER WHEN *****************
************ BOTH TERMINALS EQUAL OPERATOR'S ID*************
                 MOVE 'OP0701' TO ACA-WSMSG-CODE
                 MOVE -1 TO FROMTRML
                 MOVE SPACES TO WS-ERR-MESSAGE
              END-IF
              MOVE ATTR-UABX TO FROMTRMA
              GO TO 2300-EXIT
           END-IF.

************************************************************
**********VALIDATE THAT THE FROM AND TO TERMINALS ARE ******
**********VALID P&D TERMINALS
************************************************************

           IF LK-FROMTRM = 'REV'
              CONTINUE
           ELSE
              MOVE LK-FROMTRM TO TF-TRMID OF WMFMT36A
              PERFORM 6060-SELECT-PD-FLAG THRU 6060-EXIT
           END-IF.

           IF INVLD-PD-TERM
CH0004        PERFORM 6061-SELECT-RELAY-FLAG THRU 6061-EXIT
CH0004        IF INVLD-RL-TERM
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID P&D TERMINAL **********************
************  OR NOT A VALID RELAY POINT *******************
                    MOVE 'OP0563' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRML
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMTRMA
CH0004        END-IF
           END-IF.

           IF LK-TOTRM = 'REV'

CH0006**** REV IS NOW INVALID.  MOVE ERROR MESSAGE TO SCREEN ****
CH0006**** SO USER CAN CHANGE EDIT THE 'TO' FIELD.           ****

CH0006***CH0005        MOVE 'Y' TO WS-REV
CH0006        MOVE 'E' TO WX-PROCESSING-MODE-FLAG
CH0006        IF ACA-WSMSG-CODE = SPACES
CH0006           MOVE 'OP0881' TO ACA-WSMSG-CODE
CH0006           MOVE -1 TO TOTRML
CH0006           MOVE SPACES TO WS-ERR-MESSAGE
CH0006        END-IF
              MOVE ATTR-UABX TO TOTRMA
           ELSE
              MOVE LK-TOTRM TO TF-TRMID OF WMFMT36A
CH0004        MOVE 'N' TO WS-INVLD-PD-TERM
              PERFORM 6060-SELECT-PD-FLAG THRU 6060-EXIT
           END-IF.

           IF INVLD-PD-TERM
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID P&D TERMINAL **********************
                 MOVE 'OP0563' TO ACA-WSMSG-CODE
                 MOVE -1 TO TOTRML
                 MOVE SPACES TO WS-ERR-MESSAGE
              END-IF
              MOVE ATTR-UABX TO TOTRMA
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              CONTINUE
           ELSE
              GO TO 2300-EXIT
           END-IF.

      *******************************************************
      ***  FIRST SELECT THE PRO LOC TABLE TO ESTABLISH PRO
      ***  INFO. (WMOPT77A) A REASON CODE MUST BE ENTERED
      ***  FOR TERMINALTO TERMINAL TRANSFERS.
      ***  THEN DETERMINE THAT THE PRO
      ***  HAS A TERM ID OF THE 'FROM TERMINAL'. THEN
      ***  DETERMINE IF THE PRO IS ON A TRLR OR DOCK.(PRO-LOC-CD)
      ***  IF THE PRO IS ON A TRLR ESTABLISH THAT THE TRLR
      ***  CURR_LOC = 'FROM TERMINAL' (WMOPT66A).
      ***  AND THAT THE UNIT-STATUS IS NOT = MTY,PARK,SOLD, OR OUT.
      ***  IF THE PRO IS ON A DOCK THE 'FROM' TERM ID WAS
      ***  ALREADY DETERMINED TO BE THE 'FROM' TERMINAL
      ***  (WMOPT77A)
      *******************************************************

           MOVE +1 TO WS-SCRN.

           PERFORM VARYING WS-LNK FROM 1 BY 1
              UNTIL WS-LNK > WS-MAX-TABLE-LINES

              IF LK-PRO(WS-LNK) = SPACES
                 CONTINUE
              ELSE
                 ADD 1 TO WS-PRO-COUNT
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO TF-PRO OF WMBIT11A
                 MOVE WS-PRO-SUF       TO TF-SUF OF WMBIT11A
                 PERFORM 6090-SELECT-PRO  THRU 6090-EXIT
                 IF WS-ERR-MESSAGE  > SPACES
********************PRO DOES  NOT EXIST            ***************
                    MOVE WS-ER-INVLD-PRO TO WS-ERR-MESSAGE
                    MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                    MOVE -1              TO PNL-PROL(WS-SCRN)
                    MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                    MOVE 'Y'             TO WS-PRO-ERROR
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO OP77-PRO-NBR
                 MOVE WS-PRO-SUF       TO OP77-PRO-SUF
                 PERFORM 6000-SELECT-PRO-LOC    THRU 6000-EXIT
                 PERFORM 2620-MOVE-PROCESS-PRO  THRU 2620-EXIT
                 IF WS-ERR-MESSAGE  > SPACES
********************PRO NOT FOUND ON PRO LOC TABLE ***************
                    MOVE WS-ER-PRO-LOC   TO WS-ERR-MESSAGE
                    MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                    MOVE -1              TO PNL-PROL(WS-SCRN)
                    MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                    MOVE 'Y'             TO WS-PRO-ERROR
                 END-IF
                 IF LK-REASON(WS-LNK) = SPACES
*****************FOR A TERM TRANS MUST HAVE A REASON *************
                    MOVE WS-ER-REASON    TO WS-ERR-MESSAGE
                    MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                    MOVE -1              TO PNL-REASONL(WS-SCRN)
                    MOVE ATTR-UABX       TO PNL-REASONA(WS-SCRN)
                    MOVE 'Y'             TO WS-PRO-ERROR
CH0003           ELSE
CH0003              MOVE LK-REASON(WS-LNK) TO WS-REASON
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 IF WS-PRO-PRO-LOC-CD = 'D'
                    IF WS-PRO-TRM-ID NOT = LK-FROMTRM
*****************PRO MUST BE IN FROM TERM LOC        *************
                       MOVE WS-PRO-TRM-ID     TO WS-ER-LOC
                       MOVE WS-ER-PRO-LOC     TO WS-ERR-MESSAGE
                       MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                       MOVE -1                TO PNL-PROL(WS-SCRN)
                       MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                       MOVE 'Y'               TO WS-PRO-ERROR
                    END-IF
                 ELSE
                    MOVE WS-PRO-UNIT-NBR TO OP66-UNIT-NBR
                    MOVE WS-PRO-UNIT-NBR TO OP68-UNIT-NBR
                    PERFORM 8000-ENQUEUE-OP66-FROMTRLR THRU 8000-EXIT
                    PERFORM 8005-ENQUEUE-OP68-FROMTRLR THRU 8005-EXIT
                    MOVE 'Y' TO WS-FROMTRLR-ENQUE
                    PERFORM 6010-SELECT-OP66-UNIT THRU 6010-EXIT
                    PERFORM 2600-MOVE-OP66-FROM   THRU 2600-EXIT
                    PERFORM 6015-SELECT-OP68-UNIT THRU 6015-EXIT
                    PERFORM 2605-MOVE-OP68-FROM   THRU 2605-EXIT
                    IF WS-FR-CURR-LOC NOT = LK-FROMTRM
*****************PRO MUST BE IN FROM TERM LOC        *************
                       MOVE OP66-CURR-LOC     TO WS-ER-LOC
                       MOVE WS-ER-PRO-LOC     TO WS-ERR-MESSAGE
                       MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                       MOVE -1                TO PNL-PROL(WS-SCRN)
                       MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                       MOVE 'Y'               TO WS-PRO-ERROR
                    END-IF
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 IF WS-PRO-PRO-LOC-CD = 'T'
                    IF WS-FR-UNIT-STATUS NOT EQUAL 'MTY' OR
                       WS-FR-UNIT-STATUS NOT EQUAL 'PARK' OR
                       WS-FR-UNIT-STATUS NOT EQUAL 'SOLD' OR
                       WS-FR-UNIT-STATUS NOT EQUAL 'OUT'
                       PERFORM 4000-TRANS-FROM-TRLR THRU 4000-EXIT
                       MOVE OP66-UNIT-NBR   TO WS-TRANS-FROM
*****************WHEN TRANSFERRING FROM TERMINAL TO TERMINAL *****
*****************YOU MUST RE-PROCESS THE UNIT AT THE PRO LEVEL****
*****************BECAUSE EACH PRO COULD BE ON A DIFFERENT UNIT****
*****************IF THE FROM TRLR IS IN ANY ONE OF THESE STATUS***
*****************THE TRLR WILL NOT BE REPROCESSED TO UPDATE    ***
*****************THE COUNTS, WEIGHTS OR DATES. THIS WILL BE TAKEN*
*****************CARE OF IN THE NEXT PROCESS *********************
                       IF WS-FR-UNIT-STATUS EQUAL 'LTG' OR
                          WS-FR-UNIT-STATUS EQUAL 'DISP' OR
                          WS-FR-UNIT-STATUS EQUAL 'PIG'
                          CONTINUE
                       ELSE
                          PERFORM 7000-INIT-WORK-UNIT THRU 7000-EXIT
                          MOVE WS-FR-UNIT-NBR TO OP77-UNIT-NBR
                          MOVE WS-FR-UNIT-NBR TO WS-UNIT-NBR
                          MOVE WS-FR-MFST-TYP TO WS-MFST-TYPE
                          MOVE WS-FR-MFST-NBR TO WS-MFST-NBR
                          MOVE WS-DEFAULT-DATE TO WS-OLDEST-BILL-DUE-DT
                          PERFORM 4100-REPROCESS-TRLR THRU 4100-EXIT
                          PERFORM 4430-SET-UP-FROM-WMOPT66A
                                  THRU 4430-EXIT
                          PERFORM 4435-SET-UP-FROM-WMOPT68A
                                  THRU 4435-EXIT
                          PERFORM 6200-UPDATE-WMOPT66A
                                  THRU 6200-EXIT
                          PERFORM 6320-DELETE-WMOPT68A
                                  THRU 6320-EXIT
                          PERFORM 6440-INSERT-WMOPT68A
                                  THRU 6440-EXIT
                       END-IF
                    ELSE
*****************INVALID TRAILER STATUS ERROR ********************
                       MOVE WS-ER-TRLR-ST   TO WS-ERR-MESSAGE
                       MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                       MOVE -1              TO PNL-PROL(WS-SCRN)
                       MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                       MOVE 'Y'             TO WS-PRO-ERROR
                    END-IF
                 ELSE
                    MOVE WS-PRO-DOCK       TO WS-TRANS-FROM(1:2)
                    MOVE LK-FROMTRM        TO WS-TRANS-FROM(3:3)
                    MOVE 'C'               TO WS-TRANS-FROM-TYPE
                 END-IF
              END-IF
***********************************************************************
**************** GET PRO DESTINATION SO TRANSFER TO DOCK CAN
*****************BE DETERMINED.
***********************************************************************

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                  MOVE LK-PRO(WS-LNK)     TO WS-PRO
                  MOVE WS-PRO-NBR         TO TF-PRO OF WMBIT11A
                  MOVE WS-PRO-SUF         TO TF-SUF OF WMBIT11A
                  PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-TOTRM TO WS-PRO-TRM-ID

CH0006**** REV WILL NO LONGER BE A VALID 'TO' DESTINATION SO ****
CH0006**** DISREGARD THIS CODE.                              ****

CH0006***        IF LK-TOTRM = 'REV'
CH0006***           MOVE 'VO' TO WS-PRO-DOCK
CH0006***        ELSE
                    IF TF-LANEB OF WMBIT11A = LK-TOTRM
                       MOVE 'DD' TO WS-PRO-DOCK
                    ELSE
                       MOVE 'TD' TO WS-PRO-DOCK
                    END-IF
CH0006***        END-IF
                 MOVE 'N' TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE  > SPACES
                 CONTINUE
              ELSE
                 PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT
                 PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT
                 PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT
                 PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT
CH0005           IF WS-REV = 'Y'
CH0005              CONTINUE
CH0005           ELSE
CH0005              PERFORM 6500-PRINT-TRANS-REPORT THRU 6500-EXIT
CH0005           END-IF
                 MOVE SPACES TO LK-PRO(WS-LNK)
                 MOVE ATTR-PADX    TO PNL-PROA(WS-SCRN)
                                      PNL-REASONA(WS-SCRN)
              END-IF

              MOVE SPACES       TO WS-ERR-MESSAGE


              ADD 1 TO WS-SCRN

           END-PERFORM.

           IF WS-PRO-COUNT > ZEROS
              IF FROMTRLR-ENQUE
                 MOVE 'WMOPT066A' TO WS-ENQ
                 MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
                 MOVE LK-FROMTRLR   TO WS-ENQ(10:)
                 PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
              END-IF
           END-IF.

           IF WS-PRO-COUNT > ZEROS
              CONTINUE
           ELSE
               MOVE 'E' TO WX-PROCESSING-MODE-FLAG
               IF ACA-WSMSG-CODE = SPACES
 ***********MUST ENTER AT LEAST ONE PRO     *************
                  MOVE 'OP0572' TO ACA-WSMSG-CODE
                  MOVE -1       TO PNL-PROL(1)
                  MOVE 'Y' TO WS-PRO-ERROR
               END-IF
               MOVE ATTR-UABX TO PNL-PROA(1)
           END-IF.

CH0005     IF CMA-OPEN
CH0005        PERFORM 9966-CLOSE-CMA-FILE THRU 9966-EXIT
CH0005     END-IF.

 ***********PROTECT THE TERMINAL ENTRIES ONLY************
 ***********IF ALL PROS PROCESSED CORRECTLY *************
 ***********PROTECT THE FROM/TO TERMINALS ALWAYS*********

           IF PRO-ERROR
              CONTINUE
           ELSE
               PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
           END-IF.

       2300-EXIT.  EXIT.

       2400-TRLR-TRANS.
      *****************************************************************
      ***   VALIDATE THAT THERE IS A FROM/TO COMBINATION.            **
      ***   VALIDATE THAT THE  FROM TRLR IS CURRENTLY AT THE OPERATOR'S
      ***   TERMINAL (WMOPT66A CURR_LOC). DETERMINE THE TRANSFER 'TO'
      ***   AND VALIDATE FOR TRLR OR DOCK. THEN DECIDE WHAT PRO
      ***   OPTION IS TO BE PROCESSED.
      ***************************************************************

           MOVE '2400-TRLR-TRANS'         TO WS-MESSAGE.

           IF LK-FROMTRLR > SPACES
              IF LK-TOTRLR > SPACES OR
                 LK-TODOCK  > SPACES
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ***********MUST HAVE A FROM/TO COMBINATION *************
                    MOVE 'OP0564' TO ACA-WSMSG-CODE
                    MOVE -1       TO TOTRLRL
                 END-IF
                 MOVE ATTR-UABX TO TOTRLRA
              END-IF
           END-IF.

           IF LK-TOTRLR  > SPACES AND
              LK-TODOCK  > SPACES
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
 ***********CANNOT TRANSFER  TO BOTH TRLR AND   ******
 ***********DOCK AT THE SAME TIME               *********
                 MOVE 'OP0565' TO ACA-WSMSG-CODE
                 MOVE -1       TO FROMTRLL
              END-IF
              MOVE ATTR-UABX TO FROMTRLA
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              MOVE LK-FROMTRLR TO OP51-UNIT-NBR

              PERFORM 6070-SELECT-UNIT-EXIST THRU 6070-EXIT

              IF INVLD-TRLR
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID TRAILER OR TRUCK  *****************
                    MOVE 'OP0566' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRLL
                 END-IF
                 MOVE ATTR-UABX TO FROMTRLA
                 MOVE 'N'       TO WS-INVLD-TRLR
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              MOVE LK-FROMTRLR TO OP66-UNIT-NBR

              PERFORM 6071-SELECT-UNIT-TYPE  THRU 6071-EXIT

              IF INVLD-TRLR
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ UNIT TYPE NOT A TRAILER OR TRUCK***************
                    MOVE 'OP0716' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRLL
                 END-IF
                 MOVE ATTR-UABX TO FROMTRLA
                 MOVE 'N'       TO WS-INVLD-TRLR
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              MOVE LK-FROMTRLR TO OP66-UNIT-NBR
              MOVE LK-FROMTRLR TO OP68-UNIT-NBR
              PERFORM 8000-ENQUEUE-OP66-FROMTRLR THRU 8000-EXIT
              PERFORM 8005-ENQUEUE-OP68-FROMTRLR THRU 8005-EXIT
              MOVE 'Y' TO WS-FROMTRLR-ENQUE
              PERFORM 6010-SELECT-OP66-UNIT THRU 6010-EXIT
              PERFORM 2600-MOVE-OP66-FROM   THRU 2600-EXIT
              PERFORM 6015-SELECT-OP68-UNIT THRU 6015-EXIT
              PERFORM 2605-MOVE-OP68-FROM   THRU 2605-EXIT

              IF WS-FR-UNIT-STATUS NOT EQUAL 'MTY' OR
                 WS-FR-UNIT-STATUS NOT EQUAL 'PARK' OR
                 WS-FR-UNIT-STATUS NOT EQUAL 'SOLD' OR
                 WS-FR-UNIT-STATUS NOT EQUAL 'OUT'
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ TRLR HAS INVALID STATUS         ***************
                    MOVE 'OP0567' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRLL
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMTRLA
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF WS-FR-MFST-NBR > SPACES
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ TRLR HAS NO MANIFEST NUMBER     ***************
************ UNIT IS NOT IN A VALID STATUS TO ADD PROS******
                    MOVE 'OP0799' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRLL
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMTRLA
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF WS-FR-CURR-LOC = TFMSACA-OPER-TRMID
                 MOVE LK-FROMTRLR TO WS-TRANS-FROM
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ TRLR NOT LOCATED AT OPER'S TERM ***************
                    MOVE 'OP0568' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMTRLL
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMTRLA
              END-IF
           END-IF.

           IF LK-TOTRLR > SPACES
              MOVE LK-TOTRLR TO OP51-UNIT-NBR
              PERFORM 6070-SELECT-UNIT-EXIST THRU 6070-EXIT
              IF INVLD-TRLR
                  MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                  IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID TRAILER OR TRUCK ******************
                     MOVE 'OP0566' TO ACA-WSMSG-CODE
                     MOVE -1 TO TOTRLRL
                  END-IF
                  MOVE ATTR-UABX TO TOTRLRA
                  MOVE 'N'       TO WS-INVLD-TRLR
              ELSE
                  MOVE LK-TOTRLR TO OP66-UNIT-NBR
                  PERFORM 6071-SELECT-UNIT-TYPE  THRU 6071-EXIT
                  IF INVLD-TRLR
                     MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                     IF ACA-WSMSG-CODE = SPACES
************ UNIT TYPE NOT A TRAILER OR TRUCK***************
                        MOVE 'OP0716' TO ACA-WSMSG-CODE
                        MOVE -1 TO TOTRLRL
                     END-IF
                     MOVE ATTR-UABX TO TOTRLRA
                     MOVE 'N'       TO WS-INVLD-TRLR
                  END-IF
              END-IF

              IF ACA-WSMSG-CODE = SPACES
                 MOVE LK-TOTRLR TO OP66-UNIT-NBR
                 MOVE LK-TOTRLR TO OP68-UNIT-NBR
                 PERFORM 8100-ENQUEUE-OP66-TOTRLR  THRU 8100-EXIT
                 PERFORM 8105-ENQUEUE-OP68-TOTRLR  THRU 8105-EXIT
                 MOVE 'Y' TO WS-TOTRLR-ENQUE
                 PERFORM 6010-SELECT-OP66-UNIT       THRU 6010-EXIT
                 PERFORM 2610-MOVE-OP66-TO           THRU 2610-EXIT
                 PERFORM 6015-SELECT-OP68-UNIT       THRU 6015-EXIT
                 PERFORM 2615-MOVE-OP68-TO           THRU 2615-EXIT
                 IF WS-TO-UNIT-STATUS NOT EQUAL 'MTY' OR
                    WS-TO-UNIT-STATUS NOT EQUAL 'PARK' OR
                    WS-TO-UNIT-STATUS NOT EQUAL 'SOLD' OR
                    WS-TO-UNIT-STATUS NOT EQUAL 'OUT'
                    CONTINUE
                 ELSE
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ TRLR HAS INVALID STATUS         ***************
                       MOVE 'OP0567' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                       MOVE SPACES TO WS-ERR-MESSAGE
                    END-IF
                    MOVE ATTR-UABX TO TOTRLRA
                 END-IF
              END-IF
           ELSE
              IF LK-TODOCK > SPACES
                 MOVE LK-TODOCK           TO WS-DOCK
                                            TF-KEY OF WMFMT27A
                 MOVE TFMSACA-OPER-TRMID TO WS-TERM
                 PERFORM 6080-SELECT-DOCK THRU 6080-EXIT
                 IF INVLD-DOCK
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID DOCK ENTRY   **********************
                       MOVE 'OP0569' TO ACA-WSMSG-CODE
                       MOVE -1 TO TODCKL
                       MOVE SPACES TO WS-ERR-MESSAGE
                    END-IF
                    MOVE ATTR-UABX TO TODCKA
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF LK-TOTRLR > SPACES
                 IF WS-TO-MFST-NBR > SPACES
                    CONTINUE
                 ELSE
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ TRLR HAS NO MANIFEST NUMBER     ***************
************ UNIT IS NOT IN A VALID STATUS TO ADD PROS *****
                       MOVE 'OP0799' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                       MOVE SPACES TO WS-ERR-MESSAGE
                    END-IF
                    MOVE ATTR-UABX TO TOTRLRA
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF LK-TOTRLR > SPACES
                 IF WS-TO-CURR-LOC = TFMSACA-OPER-TRMID
                    CONTINUE
                 ELSE
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ TRLR NOT LOCATED AT OPER'S TERM ***************
                       MOVE 'OP0568' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                       MOVE SPACES TO WS-ERR-MESSAGE
                    END-IF
                    MOVE ATTR-UABX TO TOTRLRA
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              CONTINUE
           ELSE
              IF FROMTRLR-ENQUE
                 MOVE 'WMOPT066A' TO WS-ENQ
                 MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
                 MOVE LK-FROMTRLR   TO WS-ENQ(10:)
                 PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
              ELSE
                 IF TOTRLR-ENQUE
                    MOVE 'WMOPT066A' TO WS-ENQ
                    MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
                    MOVE LK-TOTRLR     TO WS-ENQ(10:)
                    PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
                 END-IF
              END-IF
              GO TO 2400-EXIT
           END-IF.

           MOVE LK-FROMTRLR TO WS-TRANS-FROM.

           IF LK-TOTRLR = SPACES
              MOVE LK-TODOCK TO WS-TRANS-TO(1:2)
              MOVE TFMSACA-OPER-TRMID TO WS-TRANS-TO(3:3)
           ELSE
              MOVE LK-TOTRLR TO WS-TRANS-TO
           END-IF.

************************************************************
********THE FOLLOWING WILL DETERMINE IF ONE OF THE
********OPTIONS HAD BEEN CHOOSEN. EACH OPTION WILL BE
********PROCESSED IN ITS OWN PARAGRAPH.  IF NO OPTIONS
********HAD BEEN CHOOSEN THEN TRANSFER ONLY THE PROS
********ON THE SCREEN.
************************************************************

           IF LK-ALL  = SPACES AND
              LK-XPRO = SPACES AND
              LK-DST  = SPACES AND
              LK-XDST = SPACES AND
              LK-ORG  = SPACES AND
              LK-XORG = SPACES
              PERFORM 2410-PROCESS-SCREEN THRU 2410-EXIT
           ELSE
              IF LK-ALL > SPACES
                 MOVE ATTR-PADX TO ALLA
                 PERFORM 2420-PROCESS-ALL THRU 2420-EXIT
              ELSE
                  IF LK-XPRO > SPACES
                     MOVE ATTR-PADX TO XPROA
                     PERFORM 2430-PROCESS-XPRO THRU 2430-EXIT
                  ELSE
                      IF LK-DST > SPACES
                         MOVE ATTR-PADX TO DSTA
                         PERFORM 2440-PROCESS-DST THRU 2440-EXIT
                      ELSE
                         IF LK-XDST > SPACES
                            MOVE ATTR-PADX TO XDSTA
                            PERFORM 2450-PROCESS-XDST THRU 2450-EXIT
                         ELSE
                            IF LK-ORG > SPACES
                               MOVE ATTR-PADX TO ORGA
                               PERFORM 2460-PROCESS-ORG THRU 2460-EXIT
                            ELSE
                               IF LK-XORG > SPACES
                                  MOVE ATTR-PADX TO XORGA
                                  PERFORM 2470-PROCESS-XORG
                                          THRU 2470-EXIT
                               END-IF
                            END-IF
                         END-IF
                      END-IF
                  END-IF
              END-IF
            END-IF.

************************************************************
********ONCE ALL PROS HAVE BEEN COMPLETED THE UNIT WILL BE
********RE-PROCESSED BY OPENING A CURSOR FOR ALL PROS REMAINING
********ON THAT UNIT AND THE VALUES FOR WGT, NBR-BILLS,OLDEST DATE
********WILL BE ACCUMULATED AND THE UNIT UPDATED.
********THIS WILL AVOID NEGATIVE VALUES AS WHEN ADDING AND SUBTRACTING
********ON THE PRO LEVEL.
********HOWEVER IF THE FROM TRLR OR THE TO TRLR IS IN A 'LTG' OR
********'DISP' OR 'PIG' STATUS THE TRAILER WILL NOT BE REPROCESSED
********AND THE COUNTS, WEIGHTS, AND DATE WILL REMAIN AS THEY ARE
************************************************************

           IF WS-FR-UNIT-STATUS = 'LTG' OR
              WS-FR-UNIT-STATUS = 'DISP' OR
              WS-FR-UNIT-STATUS = 'PIG'
              CONTINUE
           ELSE
              PERFORM 7000-INIT-WORK-UNIT THRU 7000-EXIT
              MOVE WS-FR-UNIT-NBR TO OP77-UNIT-NBR
              MOVE WS-FR-UNIT-NBR TO WS-UNIT-NBR
              MOVE WS-FR-MFST-TYP TO WS-MFST-TYPE
              MOVE WS-FR-MFST-NBR TO WS-MFST-NBR
              MOVE WS-DEFAULT-DATE TO WS-OLDEST-BILL-DUE-DT
              PERFORM 4100-REPROCESS-TRLR THRU 4100-EXIT
              PERFORM 4430-SET-UP-FROM-WMOPT66A THRU 4430-EXIT
              PERFORM 4435-SET-UP-FROM-WMOPT68A THRU 4435-EXIT
              PERFORM 6200-UPDATE-WMOPT66A      THRU 6200-EXIT
              PERFORM 6320-DELETE-WMOPT68A      THRU 6320-EXIT
              PERFORM 6440-INSERT-WMOPT68A      THRU 6440-EXIT

              MOVE 'WMOPT066A' TO WS-ENQ
              MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
              MOVE LK-FROMTRLR   TO WS-ENQ(10:)
              PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
           END-IF.

************************************************************
********THIS SWITCH INDICATES A TRANSFER WAS MADE TO A TRLR.
********ONCE ALL PROS HAVE BEEN COMPLETED THE UNIT WILL BE
********RE-PROCESSED BY OPENING A CURSOR FOR ALL PROS REMAINING
********ON THAT UNIT AND THE VALUES FOR WGT, NBR-BILLS,OLDEST DATE
********WILL BE ACCUMULATED AND THE UNIT UPDATED.
********THIS WILL AVOID NEGATIVE VALUES AS WHEN ADDING AND SUBTRACTING
********ON THE PRO LEVEL.
********HOWEVER IF THE TRAILER IS IN A 'LTG' OR 'DISP' OR 'PIG'
********STATUS THE TRAILER WILL NOT BE REPORCESSED AND THE COUNTS,
********WEIGHTS OR DATES WILL NOT BE UPDATED.
************************************************************

           IF TOTRLR-ENQUE
              IF WS-TO-UNIT-STATUS = 'LTG' OR
                 WS-TO-UNIT-STATUS = 'DISP' OR
                 WS-TO-UNIT-STATUS = 'PIG'
                 CONTINUE
              ELSE
                 PERFORM 7000-INIT-WORK-UNIT     THRU 7000-EXIT
                 MOVE WS-TO-UNIT-NBR TO OP77-UNIT-NBR
                 MOVE WS-TO-UNIT-NBR TO WS-UNIT-NBR
                 MOVE WS-TO-MFST-TYP TO WS-MFST-TYPE
                 MOVE WS-TO-MFST-NBR TO WS-MFST-NBR
                 MOVE WS-DEFAULT-DATE TO WS-OLDEST-BILL-DUE-DT
                 PERFORM 4100-REPROCESS-TRLR     THRU 4100-EXIT
                 PERFORM 4440-SET-UP-TO-WMOPT66A THRU 4440-EXIT
                 PERFORM 4445-SET-UP-TO-WMOPT68A THRU 4445-EXIT
                 PERFORM 6200-UPDATE-WMOPT66A    THRU 6200-EXIT
                 PERFORM 6320-DELETE-WMOPT68A    THRU 6320-EXIT
                 PERFORM 6440-INSERT-WMOPT68A    THRU 6440-EXIT
                 MOVE 'WMOPT066A' TO WS-ENQ
                 MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
                 MOVE LK-TOTRLR     TO WS-ENQ(10:)
                 PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
              END-IF
           END-IF.

       2400-EXIT.  EXIT.

       2410-PROCESS-SCREEN.
************************************************************
      ***  VERIFY THAT PROS ENTERED ON THE SCREEN HAVE
      ***  A PRO-LOC-CD = 'T' AND THAT THE PRO TRM-ID
      ***   IS EQUAL TO THE 'FROM TRAILER' CURR-LOC AND THAT
      ***   THE PRO UNIT-NBR IS EQUAL TO THE 'FROM TRAILER'
      ***   VALIDATE ALL THE PROS  AND PUT ANY ERRORS IN THE
      ***   RESPONSE AREA OF THE SCREEN.  ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2410-PROCESS-SCREEN'     TO WS-MESSAGE.

           MOVE +1 TO WS-SCRN.

           PERFORM VARYING WS-LNK FROM 1 BY 1
              UNTIL WS-LNK > WS-MAX-TABLE-LINES

              IF LK-PRO(WS-LNK) = SPACES
                 CONTINUE
              ELSE
CH0008           ADD 1 TO LK-PRO-COUNT
CH0008**         ADD 1 TO WS-PRO-COUNT
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO TF-PRO OF WMBIT11A
                 MOVE WS-PRO-SUF       TO TF-SUF OF WMBIT11A
                 PERFORM 6090-SELECT-PRO    THRU 6090-EXIT
                 IF WS-ERR-MESSAGE  > SPACES
********************PRO DOES  NOT EXIST            ***************
                    MOVE WS-ER-INVLD-PRO TO WS-ERR-MESSAGE
                    MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                    MOVE -1              TO PNL-PROL(WS-SCRN)
                    MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                    MOVE 'Y'             TO WS-PRO-ERROR
                 END-IF
              END-IF

CH0008        IF LK-PRO(WS-LNK) = SPACES OR
CH0008           WS-ERR-MESSAGE > SPACES
CH0008           CONTINUE
CH0008        ELSE
CH0008           IF LK-TOTRLR > SPACES
CH0008              AND OP66-UNIT-TYP = 'AIR'
CH0008              MOVE WS-PRO-NBR       TO TF-PRO OF WMBIT13A
CH0008              MOVE WS-PRO-SUF       TO TF-SUF OF WMBIT13A
CH0008              PERFORM 2412-CHECK-PRO-USA   THRU 2412-EXIT
CH0008              IF WS-USA-FOUND-SW = 'N'
CH0008**************PRO DOES NOT HAVE USA KEYWORD ***************
CH0008                 MOVE WS-ER-PRO-NOT-USA TO WS-ERR-MESSAGE
CH0008                 MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
CH0008                 MOVE -1                TO PNL-PROL(WS-SCRN)
CH0008                 MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
CH0008                 MOVE 'Y'               TO WS-PRO-ERROR
CH0008              END-IF
CH0008           END-IF
CH0008        END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO OP77-PRO-NBR
                 MOVE WS-PRO-SUF       TO OP77-PRO-SUF
                 PERFORM 6000-SELECT-PRO-LOC   THRU 6000-EXIT
                 PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT
                 IF WS-PRO-PRO-LOC-CD = 'T'
                    IF WS-PRO-UNIT-NBR = LK-FROMTRLR
                       CONTINUE
                    ELSE
********************PRO NOT ON A TRAILER           ***************
                        MOVE WS-ER-PRO-NOT-TLR TO WS-ERR-MESSAGE
                        MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                        MOVE -1                TO PNL-PROL(WS-SCRN)
                        MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                        MOVE 'Y'               TO WS-PRO-ERROR
                    END-IF
                 ELSE
                     MOVE WS-ER-PRO-NOT-TLR TO WS-ERR-MESSAGE
                     MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                     MOVE -1                TO PNL-PROL(WS-SCRN)
                     MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                     MOVE 'Y'               TO WS-PRO-ERROR
                 END-IF
              END-IF


              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
                 IF LK-TOTRLR = SPACES
                    MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                    MOVE LK-TODOCK TO WS-PRO-DOCK
                    MOVE SPACES TO OP77-DOCK-PRINTED
                    PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
                 ELSE
                    MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
                    MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***           PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
                    PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-REASON(WS-LNK)  TO WS-REASON
                 PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT
                 PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT
                 PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT
                 PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT
                 MOVE SPACES TO LK-PRO(WS-LNK)
                 MOVE ATTR-PADX       TO PNL-PROA(WS-SCRN)
                 IF LK-REASON(WS-LNK) = SPACES
                    CONTINUE
                 ELSE
                    MOVE ATTR-PADX       TO PNL-REASONA(WS-SCRN)
                 END-IF
              END-IF

              MOVE SPACES TO WS-ERR-MESSAGE
              ADD 1 TO WS-SCRN

           END-PERFORM.

CH0008     IF LK-PRO-COUNT > ZEROS
CH0008***  IF WS-PRO-COUNT > ZEROS
CH0008        NEXT SENTENCE
           ELSE
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
 ***********MUST ENTER AT LEAST ONE PRO     *************
                 MOVE 'OP0572' TO ACA-WSMSG-CODE
                 MOVE -1       TO PNL-PROL(1)
                 MOVE 'Y'      TO WS-PRO-ERROR
              END-IF
              MOVE ATTR-UABX TO PNL-PROA(1)
           END-IF.

 ***********PROTECT THE TERMINAL ENTRIES ONLY************
 ***********IF ALL PROS PROCESSED CORRECTLY *************

           IF PRO-ERROR
              CONTINUE
           ELSE
              PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
           END-IF.

       2410-EXIT.  EXIT.


CH0008 2412-CHECK-PRO-USA.
      *-------------------
           MOVE '2412-CHECK-PRO-USA' TO WS-MESSAGE.

           MOVE TFMSACA-CMPNY        TO TF-CMPNY OF WMBIT13A.

           EXEC SQL
               SELECT 'PCSX'
                INTO   :WS-DUMMY-HV
                 FROM WMBIT13A
                WHERE TF_CMPNY  = :WMBIT13A.TF-CMPNY
                  AND TF_PRO    = :WMBIT13A.TF-PRO
                  AND TF_SUF    = :WMBIT13A.TF-SUF
                  AND TF_PCSX   = 'USA'
               WITH UR
           END-EXEC.

           IF SQLCODE = +0
              NEXT SENTENCE
           ELSE
              IF SQLCODE = +100
                 MOVE 'N'  TO WS-USA-FOUND-SW
              ELSE
                 PERFORM 9095-SQL-ERROR THRU 9095-SQL-ERROR-EXIT
                 PERFORM 9900-ABORT-TASK
              END-IF
           END-IF.

CH0008 2412-EXIT.   EXIT.



       2420-PROCESS-ALL.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  PROCESS '4000-TRANS-FROM-TRLR'.
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2420-PROCESS-ALL'        TO WS-MESSAGE.

           MOVE LK-FROMTRLR TO OP77-UNIT-NBR.

           PERFORM 6100-OPEN-PRO-ALL     THRU 6100-EXIT.

           PERFORM 2421-PROCESS-FETCH-ALL THRU 2421-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL     THRU 6111-EXIT.

       2420-EXIT.  EXIT.


       2421-PROCESS-FETCH-ALL.

           PERFORM 6110-FETCH-PRO-ALL    THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2421-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO ALLL
                 END-IF
                 MOVE ATTR-UABX TO ALLA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2421-EXIT
           END-IF.

           PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT

           IF LK-TOTRLR = SPACES
              MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
              MOVE LK-TODOCK TO WS-PRO-DOCK
              MOVE SPACES TO OP77-DOCK-PRINTED
              PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
           ELSE
              MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
              MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***     PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
              PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.
           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2421-EXIT.  EXIT.


       2430-PROCESS-XPRO.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  'FROM TRLR' . IF FETCHED PRO EQUALS ANY PRO ENTERED
      ***  ON THE SCREEN BYPASS PRO PROCESSING AND READ THE NEXT.
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2430-PROCESS-XPRO'       TO WS-MESSAGE.

           IF LK-PRO(1) = SPACES AND
              LK-PRO(2) = SPACES AND
              LK-PRO(3) = SPACES AND
              LK-PRO(4) = SPACES AND
              LK-PRO(5) = SPACES AND
              LK-PRO(6) = SPACES AND
              LK-PRO(7) = SPACES AND
              LK-PRO(8) = SPACES AND
              LK-PRO(9) = SPACES
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
************* PROS TO BE EXCLUDED MUST BE ENTERED *****************
                 MOVE 'OP0611' TO ACA-WSMSG-CODE
                 MOVE -1       TO PNL-PROL(1)
              END-IF
              MOVE ATTR-UABX TO PNL-PROA(1)
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              CONTINUE
           ELSE
              GO TO 2430-EXIT
           END-IF.

           MOVE LK-FROMTRLR TO OP77-UNIT-NBR.
           MOVE WS-FR-CURR-LOC TO OP77-TRM-ID.

           PERFORM 6100-OPEN-PRO-ALL       THRU 6100-EXIT.

           PERFORM 2431-PROCESS-FETCH-XPRO THRU 2431-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL      THRU 6111-EXIT.

       2430-EXIT.  EXIT.

       2431-PROCESS-FETCH-XPRO.

           PERFORM 6110-FETCH-PRO-ALL    THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2431-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XPROL
                 END-IF
                 MOVE ATTR-UABX TO XPROA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2431-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO WS-PRO-NBR.
           MOVE WS-PRO-PRO-SUF TO WS-PRO-SUF.

           IF WS-PRO = LK-PRO(1) OR
              WS-PRO = LK-PRO(2) OR
              WS-PRO = LK-PRO(3) OR
              WS-PRO = LK-PRO(4) OR
              WS-PRO = LK-PRO(5) OR
              WS-PRO = LK-PRO(6) OR
              WS-PRO = LK-PRO(7) OR
              WS-PRO = LK-PRO(8) OR
              WS-PRO = LK-PRO(9)
              GO TO 2431-EXIT
           ELSE
              PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
           END-IF.

           IF LK-TOTRLR = SPACES
              MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
              MOVE LK-TODOCK TO WS-PRO-DOCK
              MOVE SPACES TO OP77-DOCK-PRINTED
              PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
           ELSE
              MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
              MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***     PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
              PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2431-EXIT.  EXIT.


       2440-PROCESS-DST.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  'FROM TRLR'.  PROCESS PROS WHERE TF-LANEB = DEST
      ***  ENTERED IN THE SCREEN
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2440-PROCESS-DST'        TO WS-MESSAGE.

           MOVE LK-FROMTRLR       TO OP77-UNIT-NBR.
           MOVE WS-FR-CURR-LOC    TO OP77-TRM-ID.

           PERFORM 6100-OPEN-PRO-ALL       THRU 6100-EXIT.

           PERFORM 2441-PROCESS-FETCH-DC   THRU 2441-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL      THRU 6111-EXIT.

       2440-EXIT.  EXIT.

       2441-PROCESS-FETCH-DC.

           MOVE OP77-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE OP77-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6110-FETCH-PRO-ALL    THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2441-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO DSTL
                 END-IF
                 MOVE ATTR-UABX TO DSTA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2441-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF TF-LANEB OF WMBIT11A  = LK-DST
              PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2441-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2441-EXIT.  EXIT.


       2450-PROCESS-XDST.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  'FROM TRLR'.  IF PRO-DEST NOT EQUAL DEST ENTERED
      ***  PROCSS PROS.(TF-LANEB)
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2450-PROCESS-XDST'        TO WS-MESSAGE.

           MOVE LK-FROMTRLR       TO OP77-UNIT-NBR.
           MOVE WS-FR-CURR-LOC    TO OP77-TRM-ID.

           PERFORM 6100-OPEN-PRO-ALL       THRU 6100-EXIT.

           PERFORM 2451-PROCESS-FETCH-DC   THRU 2451-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL      THRU 6111-EXIT.

       2450-EXIT.  EXIT.

       2451-PROCESS-FETCH-DC.

           PERFORM 6110-FETCH-PRO-ALL    THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2451-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XDSTL
                 END-IF
                 MOVE ATTR-UABX TO XDSTA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2451-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF TF-LANEB OF WMBIT11A  NOT = LK-XDST
              PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2451-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2451-EXIT.  EXIT.


       2460-PROCESS-ORG.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  'FROM TRLR'.  PROCESS PROS WHERE TF-LANEA = ORG
      ***  ENTERED IN THE SCREEN
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2460-PROCESS-ORG'         TO WS-MESSAGE.

           MOVE LK-FROMTRLR       TO OP77-UNIT-NBR.
           MOVE WS-FR-CURR-LOC    TO OP77-TRM-ID.

           PERFORM 6100-OPEN-PRO-ALL       THRU 6100-EXIT.

           PERFORM 2461-PROCESS-FETCH-DC   THRU 2461-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL      THRU 6111-EXIT.

       2460-EXIT.  EXIT.

       2461-PROCESS-FETCH-DC.

           PERFORM 6110-FETCH-PRO-ALL     THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2461-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO  THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO ORGL
                 END-IF
                 MOVE ATTR-UABX TO ORGA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2461-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF WS-PRO-PRO-NBR(1:3) = LK-ORG
              PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2461-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2461-EXIT.  EXIT.


       2470-PROCESS-XORG.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE UNIT IS
      ***  EQUAL TO THE 'FROM TRLR' , THE PRO_LOC_CD = 'T'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  'FROM TRLR'.  IF PRO-ORG  NOT EQUAL ORG  ENTERED
      ***  PROCSS PROS.(TF-LANEB)
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2470-PROCESS-XORG'         TO WS-MESSAGE.

           MOVE LK-FROMTRLR       TO OP77-UNIT-NBR.
           MOVE WS-FR-CURR-LOC    TO OP77-TRM-ID.

           PERFORM 6100-OPEN-PRO-ALL       THRU 6100-EXIT.

           PERFORM 2471-PROCESS-FETCH-DC   THRU 2471-EXIT
              UNTIL EOF-PRO.

           PERFORM 6111-CLOSE-PRO-ALL      THRU 6111-EXIT.

       2470-EXIT.  EXIT.

       2471-PROCESS-FETCH-DC.

           PERFORM 6110-FETCH-PRO-ALL    THRU 6110-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2471-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT.

           IF NOT EOF-PRO
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XORGL
                 END-IF
                 MOVE ATTR-UABX TO XORGA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2471-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF WS-PRO-PRO-NBR(1:3)  NOT = LK-XORG
              PERFORM 4000-TRANS-FROM-TRLR  THRU 4000-EXIT
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2471-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2471-EXIT.  EXIT.


       2500-DOCK-TRANS.
      *****************************************************************
      ***   VALIDATE THAT THERE IS A FROM/TO COMBINATION.            **
      ***   VALIDATE THAT THE  FROM DOCK IS CORRECT
      ***   DETERMINE THE TRANSFER 'TO'
      ***   AND VALIDATE FOR TRLR OR DOCK. THEN DECIDE WHAT PRO
      ***   OPTION IS TO BE PROCESSED.
      ***************************************************************

           MOVE '2500-TRANSFER-DOCK'      TO WS-MESSAGE.

           IF LK-FROMDOCK  > SPACES
              IF LK-TOTRLR > SPACES OR
                 LK-TODOCK  > SPACES
                 CONTINUE
              ELSE
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ***********MUST HAVE A FROM/TO COMBINATION *************
                    MOVE 'OP0564' TO ACA-WSMSG-CODE
                    MOVE -1       TO TOTRLRL
                 END-IF
                 MOVE ATTR-UABX TO TOTRLRA
              END-IF
           END-IF.

           IF LK-TOTRLR  > SPACES AND
              LK-TODOCK  > SPACES
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
 ***********CANNOT TRANSFER  TO BOTH TRLR AND   ******
 ***********DOCK AT THE SAME TIME               *********
                 MOVE 'OP0570' TO ACA-WSMSG-CODE
                 MOVE -1       TO TOTRLRL
              END-IF
              MOVE ATTR-UABX TO TOTRLRA
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              MOVE LK-FROMDOCK         TO WS-DOCK
                                          TF-KEY OF WMFMT27A
              MOVE TFMSACA-OPER-TRMID TO WS-TERM
              PERFORM 6080-SELECT-DOCK THRU 6080-EXIT
              IF INVLD-DOCK
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID DOCK ENTRY   **********************
                    MOVE 'OP0569' TO ACA-WSMSG-CODE
                    MOVE -1 TO FROMDCKL
                    MOVE SPACES TO WS-ERR-MESSAGE
                 END-IF
                 MOVE ATTR-UABX TO FROMDCKA
                 MOVE 'N'       TO WS-INVLD-DOCK
              ELSE
                 MOVE LK-FROMDOCK TO WS-TRANS-FROM
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF LK-TOTRLR > SPACES
                 MOVE LK-TOTRLR TO OP51-UNIT-NBR
                 PERFORM 6070-SELECT-UNIT-EXIST THRU 6070-EXIT
                 IF INVLD-TRLR
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ NOT A VALID TRAILER OR TRUCK ******************
                       MOVE 'OP0566' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                     END-IF
                     MOVE ATTR-UABX TO TOTRLRA
                     MOVE 'N'       TO WS-INVLD-TRLR
                 ELSE
                     MOVE LK-TOTRLR TO OP66-UNIT-NBR
                     PERFORM 6071-SELECT-UNIT-TYPE THRU 6071-EXIT
                     IF INVLD-TRLR
                        MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                        IF ACA-WSMSG-CODE = SPACES
************ UNIT TYPE NOT A TRAILER OR TRUCK***************
                           MOVE 'OP0716' TO ACA-WSMSG-CODE
                           MOVE -1 TO TOTRLRL
                        END-IF
                        MOVE ATTR-UABX TO TOTRLRA
                        MOVE 'N'       TO WS-INVLD-TRLR
                     ELSE
                        MOVE LK-TOTRLR TO OP66-UNIT-NBR
                        MOVE LK-TOTRLR TO OP68-UNIT-NBR
                        PERFORM 8100-ENQUEUE-OP66-TOTRLR THRU 8100-EXIT
                        PERFORM 8105-ENQUEUE-OP68-TOTRLR THRU 8105-EXIT
                        MOVE 'Y' TO WS-TOTRLR-ENQUE
                        PERFORM 6010-SELECT-OP66-UNIT THRU 6010-EXIT
                        PERFORM 2610-MOVE-OP66-TO     THRU 2610-EXIT
                        PERFORM 6015-SELECT-OP68-UNIT THRU 6015-EXIT
                        PERFORM 2615-MOVE-OP68-TO     THRU 2615-EXIT
                        IF WS-TO-UNIT-STATUS NOT EQUAL 'MTY' OR
                           WS-TO-UNIT-STATUS NOT EQUAL 'PARK' OR
                           WS-TO-UNIT-STATUS NOT EQUAL 'SOLD' OR
                           WS-TO-UNIT-STATUS NOT EQUAL 'OUT'
                           CONTINUE
                        ELSE
                           MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                           IF ACA-WSMSG-CODE = SPACES
************ TRLR HAS INVALID STATUS         ***************
                              MOVE 'OP0567' TO ACA-WSMSG-CODE
                              MOVE -1 TO TOTRLRL
                              MOVE SPACES TO WS-ERR-MESSAGE
                           END-IF
                           MOVE ATTR-UABX TO TOTRLRA
                        END-IF
                     END-IF
                 END-IF
              ELSE
                 IF LK-TODOCK > SPACES
                    MOVE LK-TODOCK           TO WS-DOCK
                                               TF-KEY OF WMFMT27A
                    MOVE TFMSACA-OPER-TRMID TO WS-TERM
                    PERFORM 6080-SELECT-DOCK THRU 6080-EXIT
                    IF INVLD-DOCK
                       MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                       IF ACA-WSMSG-CODE = SPACES
*********** NOT A VALID DOCK ENTRY   **********************
                          MOVE 'OP0569' TO ACA-WSMSG-CODE
                          MOVE -1 TO TODCKL
                       END-IF
                          MOVE ATTR-UADX TO TODCKA
                          MOVE 'N'       TO WS-INVLD-DOCK
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF LK-TOTRLR > SPACES
                 IF WS-TO-CURR-LOC = TFMSACA-OPER-TRMID
                    CONTINUE
                 ELSE
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ TRLR NOT IN TERMINAL LOCATION   ***************
                       MOVE 'OP0568' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                       MOVE SPACES TO WS-ERR-MESSAGE
                    END-IF
                    MOVE ATTR-UABX TO TOTRLRA
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              IF LK-TOTRLR > SPACES
                 IF WS-TO-MFST-NBR > SPACES
                    CONTINUE
                 ELSE
                    MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                    IF ACA-WSMSG-CODE = SPACES
************ TRAILER HAS NO MANIFEST NBR  ******************
************ IS NOT IN A VALID STATUS TO ADD PROS **********
                       MOVE 'OP0799' TO ACA-WSMSG-CODE
                       MOVE -1 TO TOTRLRL
                     END-IF
                     MOVE ATTR-UABX TO TOTRLRA
                 END-IF
              END-IF
           END-IF.

           IF ACA-WSMSG-CODE = SPACES
              CONTINUE
           ELSE
              GO TO 2500-EXIT
           END-IF.

           MOVE LK-FROMDOCK        TO WS-TRANS-FROM(1:2).
           MOVE TFMSACA-OPER-TRMID TO WS-TRANS-FROM(3:3).
           MOVE 'C'                TO WS-TRANS-FROM-TYPE.

           IF LK-TOTRLR = SPACES
              MOVE LK-TODOCK       TO WS-TRANS-TO(1:2)
              MOVE LK-TODOCK       TO WS-TRANS-TO(1:2)
           ELSE
              MOVE LK-TOTRLR       TO WS-TRANS-TO
           END-IF.

************************************************************
********THE FOLLOWING WILL DETERMINE IF ONE OF THE
********OPTIONS HAD BEEN CHOOSEN. EACH OPTION WILL BE
********PROCESSED IN ITS OWN PARAGRAPH.  IF NO OPTIONS
********HAD BEEN CHOOSEN THEN TRANSFER ONLY THE PROS
********ON THE SCREEN.
************************************************************

           IF LK-ALL  = SPACES AND
              LK-XPRO = SPACES AND
              LK-DST  = SPACES AND
              LK-XDST = SPACES AND
              LK-ORG  = SPACES AND
              LK-XORG = SPACES
              PERFORM 2510-PROCESS-SCREEN THRU 2510-EXIT
           ELSE
              IF LK-ALL > SPACES
                 MOVE ATTR-PADX TO ALLA
                 PERFORM 2520-PROCESS-ALL THRU 2520-EXIT
              ELSE
                  IF LK-XPRO > SPACES
                     PERFORM 2530-PROCESS-XPRO THRU 2530-EXIT
                  ELSE
                      IF LK-DST > SPACES
                         MOVE ATTR-PADX TO DSTA
                         PERFORM 2540-PROCESS-DST THRU 2540-EXIT
                      ELSE
                         IF LK-XDST > SPACES
                            MOVE ATTR-PADX TO XDSTA
                            PERFORM 2550-PROCESS-XDST THRU 2550-EXIT
                         ELSE
                            IF LK-ORG > SPACES
                               MOVE ATTR-PADX TO ORGA
                               PERFORM 2560-PROCESS-ORG THRU 2560-EXIT
                            ELSE
                               IF LK-XORG > SPACES
                                  MOVE ATTR-PADX TO XORGA
                                  PERFORM 2570-PROCESS-XORG THRU
                                          2570-EXIT
                               END-IF
                            END-IF
                         END-IF
                      END-IF
                  END-IF
              END-IF
            END-IF.

************************************************************
********THIS SWITCH INDICATES A TRANSFER WAS MADE TO A TRLR.
********ONCE ALL PROS HAVE BEEN COMPLETED THE UNIT WILL BE
********RE-PROCESSED BY OPENING A CURSOR FOR ALL PROS REMAINING
********ON THAT UNIT AND THE VALUES FOR WGT, NBR-BILLS,OLDEST DATE
********WILL BE ACCUMULATED AND THE UNIT UPDATED.
********THIS WILL AVOID NEGATIVE VALUES AS WHEN ADDING AND SUBTRACTING
********ON THE PRO LEVEL.
********HOWEVER IF THE TRAILER IS IN A 'LTG' OR 'DISP' OR 'PIG'
********STATUS THE TRAILER WILL NOT BE REPROCESSED FOR COUNTS,
********WEIGHTS OR DATES.  THIS WILL BE TAKEN CARE IN THE NEXT
********STATUS UPDATE.
************************************************************

           IF TOTRLR-ENQUE
              IF WS-TO-UNIT-STATUS IS = 'LTG' OR
                 WS-TO-UNIT-STATUS IS = 'DISP' OR
                 WS-TO-UNIT-STATUS IS = 'PIG'
                 CONTINUE
              ELSE
                 PERFORM 7000-INIT-WORK-UNIT     THRU 7000-EXIT
                 MOVE WS-TO-UNIT-NBR TO OP77-UNIT-NBR
                 MOVE WS-TO-UNIT-NBR TO WS-UNIT-NBR
                 MOVE WS-TO-MFST-TYP TO WS-MFST-TYPE
                 MOVE WS-TO-MFST-NBR TO WS-MFST-NBR
                 MOVE WS-DEFAULT-DATE TO WS-OLDEST-BILL-DUE-DT
                 PERFORM 4100-REPROCESS-TRLR     THRU 4100-EXIT
                 PERFORM 4440-SET-UP-TO-WMOPT66A THRU 4440-EXIT
                 PERFORM 4445-SET-UP-TO-WMOPT68A THRU 4445-EXIT
                 PERFORM 6200-UPDATE-WMOPT66A    THRU 6200-EXIT
                 PERFORM 6320-DELETE-WMOPT68A    THRU 6320-EXIT
                 PERFORM 6440-INSERT-WMOPT68A    THRU 6440-EXIT
                 MOVE 'WMOPT066A' TO WS-ENQ
                 MOVE TFMSACA-CMPNY TO WS-ENQ(9:)
                 MOVE LK-TOTRLR     TO WS-ENQ(10:)
                 PERFORM 8300-DEQUEUE-RESOURCE THRU 8300-EXIT
              END-IF
           END-IF.

       2500-EXIT.  EXIT.

       2510-PROCESS-SCREEN.
************************************************************
      ***  VERIFY THAT PROS ENTERED ON THE SCREEN HAVE
      ***  A PRO-LOC-CD = 'D' AND THAT THE PRO TRM-ID
      ***   IS EQUAL TO THE TFMSACA-OPER-TRMID  AND THAT
      ***   THE PRO DOCK IS EQUAL TO THE 'FROM DOCK'
      ***   VALIDATE ALL THE PROS  AND PUT ANY ERRORS IN THE
      ***   RESPONSE AREA OF THE SCREEN.  ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2510-PROCESS-SCREEN'       TO WS-MESSAGE.

           MOVE +1 TO WS-SCRN.

           PERFORM VARYING WS-LNK FROM 1 BY 1
              UNTIL WS-LNK > WS-MAX-TABLE-LINES

              IF LK-PRO(WS-LNK) = SPACES
                 CONTINUE
              ELSE
CH0008           ADD +1 TO LK-PRO-COUNT
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO TF-PRO OF WMBIT11A
                 MOVE WS-PRO-SUF       TO TF-SUF OF WMBIT11A
                 PERFORM 6090-SELECT-PRO    THRU 6090-EXIT
                 IF WS-ERR-MESSAGE  > SPACES
********************PRO DOES  NOT EXIST            ***************
                    MOVE WS-ER-INVLD-PRO TO WS-ERR-MESSAGE
                    MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                    MOVE -1              TO PNL-PROL(WS-SCRN)
                    MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                    MOVE 'Y'             TO WS-PRO-ERROR
                 END-IF
              END-IF

CH0008        IF LK-PRO(WS-LNK) = SPACES OR
CH0008           WS-ERR-MESSAGE > SPACES
CH0008           CONTINUE
CH0008        ELSE
CH0008           IF LK-TOTRLR > SPACES
CH0008              AND OP66-UNIT-TYP = 'AIR'
CH0008              MOVE WS-PRO-NBR       TO TF-PRO OF WMBIT13A
CH0008              MOVE WS-PRO-SUF       TO TF-SUF OF WMBIT13A
CH0008              PERFORM 2412-CHECK-PRO-USA   THRU 2412-EXIT
CH0008              IF WS-USA-FOUND-SW = 'N'
CH0008**************PRO DOES NOT HAVE USA KEYWORD ***************
CH0008                 MOVE WS-ER-PRO-NOT-USA TO WS-ERR-MESSAGE
CH0008                 MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
CH0008                 MOVE -1                TO PNL-PROL(WS-SCRN)
CH0008                 MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
CH0008                 MOVE 'Y'               TO WS-PRO-ERROR
CH0008              END-IF
CH0008           END-IF
CH0008        END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-PRO(WS-LNK)   TO WS-PRO
                 MOVE WS-PRO-NBR       TO OP77-PRO-NBR
                 MOVE WS-PRO-SUF       TO OP77-PRO-SUF
                 PERFORM 6000-SELECT-PRO-LOC   THRU 6000-EXIT
                 PERFORM 2620-MOVE-PROCESS-PRO THRU 2620-EXIT
                 IF WS-PRO-PRO-LOC-CD = 'D'
                    IF WS-PRO-DOCK = LK-FROMDOCK
                       IF WS-PRO-TRM-ID = TFMSACA-OPER-TRMID
                          CONTINUE
                       ELSE
***************************PRO IS NOT ON THE FROM TRANS DOCK ********
                          MOVE WS-ER-PRO-NOT-DCK TO WS-ERR-MESSAGE
                          MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                          MOVE -1                TO PNL-PROL(WS-SCRN)
                          MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                          MOVE 'Y'               TO WS-PRO-ERROR
                       END-IF
                    ELSE
**************************PRO IS NOT ON THE FROM TRANS DOCK *********
                        MOVE WS-ER-PRO-NOT-DCK TO WS-ERR-MESSAGE
                        MOVE WS-ERR-MESSAGE    TO PNL-ERRORI(WS-SCRN)
                        MOVE -1                TO PNL-PROL(WS-SCRN)
                        MOVE ATTR-UABX         TO PNL-PROA(WS-SCRN)
                        MOVE 'Y'               TO WS-PRO-ERROR
                    END-IF
                 ELSE
**************************PRO IS NOT ON A DOCK   ********************
                     MOVE WS-ER-PRO-NOT-DCK TO WS-ERR-MESSAGE
                     MOVE WS-ERR-MESSAGE  TO PNL-ERRORI(WS-SCRN)
                     MOVE -1              TO PNL-PROL(WS-SCRN)
                     MOVE ATTR-UABX       TO PNL-PROA(WS-SCRN)
                     MOVE 'Y'             TO WS-PRO-ERROR
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 IF LK-TOTRLR = SPACES
                    MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                    MOVE LK-TODOCK TO WS-PRO-DOCK
                    MOVE SPACES TO OP77-DOCK-PRINTED
                    PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
                 ELSE
                    MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
                    MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***           PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
                    PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
                 END-IF
              END-IF

              IF LK-PRO(WS-LNK) = SPACES OR
                 WS-ERR-MESSAGE > SPACES
                 CONTINUE
              ELSE
                 MOVE LK-REASON(WS-LNK) TO WS-REASON
                 PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT
                 PERFORM 6400-INSERT-WMOPT52A THRU 6400-EXIT
                 PERFORM 4470-SET-UP-WMOPT84A THRU 4470-EXIT
                 PERFORM 6430-INSERT-WMOPT84A THRU 6430-EXIT
                 MOVE SPACES TO LK-PRO(WS-LNK)
                 MOVE ATTR-PADX       TO PNL-PROA(WS-SCRN)
                 IF LK-REASON(WS-LNK) = SPACES
                    CONTINUE
                 ELSE
                    MOVE ATTR-PADX       TO PNL-REASONA(WS-SCRN)
                 END-IF
              END-IF

              MOVE SPACES TO WS-ERR-MESSAGE
              ADD 1 TO WS-SCRN

           END-PERFORM.

CH0008     IF LK-PRO-COUNT > ZEROS
              CONTINUE
           ELSE
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
 ***********MUST ENTER AT LEAST ONE PRO     *************
                 MOVE 'OP0572' TO ACA-WSMSG-CODE
                 MOVE -1       TO PNL-PROL(1)
                 MOVE 'Y'      TO WS-PRO-ERROR
              END-IF
              MOVE ATTR-UABX TO PNL-PROA(1)
              GO TO 2510-EXIT
           END-IF.

           IF PRO-ERROR
              CONTINUE
           ELSE
              PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
           END-IF.

       2510-EXIT.  EXIT.


       2520-PROCESS-ALL.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DCK'  , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO THE CURR-LOC OF THE
      ***  TFMSACA-OPER-TRMID. THERE ARE NO DELETES IF PRO IS
      ***  BEING TRANSFERRED FROM A DOCK. THE ONLY FIELD EFFECTED
      ***  DOCK_PRINTED ON THE WMOPT77A TABLE. THIS FIELD WILL BE
      ***  UPDATED TO A 'N' IN TRANSFER TO A DOCK OR SPACES IN
      ***  TRANSFER TO A TRLR.
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2520-PROCESS-ALL'          TO WS-MESSAGE.

           MOVE LK-FROMDOCK    TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO THRU 6120-EXIT.

           PERFORM 2521-PROCESS-FETCH-ALL THRU 2521-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2520-EXIT.  EXIT.


       2521-PROCESS-FETCH-ALL.

           PERFORM 6121-FETCH-ALL-DOCK-PRO  THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2521-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO    THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO ALLL
                 END-IF
                 MOVE ATTR-UABX TO ALLA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2521-EXIT
           END-IF.

           IF LK-TOTRLR = SPACES
              MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
              MOVE LK-TODOCK TO WS-PRO-DOCK
              MOVE SPACES TO OP77-DOCK-PRINTED
              PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
           ELSE
              MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
              MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***     PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
              PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2521-EXIT.  EXIT.


       2530-PROCESS-XPRO.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DOCK' , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO THE TFMSACA-OPER-TRMID.
      ***  IF FETCHED PRO EQUALS ANY PRO ENTERED
      ***  ON THE SCREEN BYPASS PRO PROCESSING AND READ THE NEXT.
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2530-PROCESS-XPRO'         TO WS-MESSAGE.

           IF LK-PRO(1) = SPACES AND
              LK-PRO(2) = SPACES AND
              LK-PRO(3) = SPACES AND
              LK-PRO(4) = SPACES AND
              LK-PRO(5) = SPACES AND
              LK-PRO(6) = SPACES AND
              LK-PRO(7) = SPACES AND
              LK-PRO(8) = SPACES AND
              LK-PRO(9) = SPACES
              MOVE 'E' TO WX-PROCESSING-MODE-FLAG
              IF ACA-WSMSG-CODE = SPACES
************* PROS TO BE EXCLUDED MUST BE ENTERED *****************
                 MOVE 'OP0611' TO ACA-WSMSG-CODE
                 MOVE -1       TO PNL-PROL(1)
              END-IF
              MOVE ATTR-UABX TO PNL-PROA(1)
              GO TO 2530-EXIT
           END-IF.

           MOVE LK-FROMDOCK  TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO  THRU 6120-EXIT.

           PERFORM 2531-PROCESS-FETCH-XPRO THRU 2531-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2530-EXIT.  EXIT.


       2531-PROCESS-FETCH-XPRO.

           PERFORM 6121-FETCH-ALL-DOCK-PRO THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2531-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO   THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XPROL
                 END-IF
                 MOVE ATTR-UABX TO XPROA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2531-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO WS-PRO-NBR.
           MOVE WS-PRO-PRO-SUF TO WS-PRO-SUF.

           IF WS-PRO  = LK-PRO(1) OR
              WS-PRO  = LK-PRO(2) OR
              WS-PRO  = LK-PRO(3) OR
              WS-PRO  = LK-PRO(4) OR
              WS-PRO  = LK-PRO(5) OR
              WS-PRO  = LK-PRO(6) OR
              WS-PRO  = LK-PRO(7) OR
              WS-PRO  = LK-PRO(8) OR
              WS-PRO  = LK-PRO(9)
              GO TO 2531-EXIT
           END-IF.

           IF LK-TOTRLR = SPACES
              MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
              MOVE LK-TODOCK TO WS-PRO-DOCK
              MOVE SPACES TO OP77-DOCK-PRINTED
              PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
           ELSE
              MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A
              MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A
CH0007***     PERFORM 6050-SELECT-ORG-DEST THRU 6050-EXIT
              PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2531-EXIT.  EXIT.


       2540-PROCESS-DST.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DOCK' , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO TFMSACA-OPER-TRMID.
      ***  PROCESS PROS WHERE TF-LANEB = DEST
      ***  ENTERED IN THE SCREEN
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2540-PROCESS-DST'          TO WS-MESSAGE.

           MOVE LK-FROMDOCK         TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID  TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO  THRU 6120-EXIT.

           PERFORM 2541-PROCESS-FETCH-DC   THRU 2541-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2540-EXIT.  EXIT.


       2541-PROCESS-FETCH-DC.

           PERFORM 6121-FETCH-ALL-DOCK-PRO  THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2541-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO    THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO DSTL
                 END-IF
                 MOVE ATTR-UABX TO DSTA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2541-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF TF-LANEB OF WMBIT11A  = LK-DST
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2541-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2541-EXIT.  EXIT.


       2550-PROCESS-XDST.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DOCK' , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO THE TFMSACA-OPER-TRMID
      ***  IF PRO-DEST NOT EQUAL DEST ENTERED
      ***  PROCSS PROS.(TF-LANEB)
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2550-PROCESS-XDST'          TO WS-MESSAGE.

           MOVE LK-FROMDOCK         TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID  TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO  THRU 6120-EXIT.

           PERFORM 2551-PROCESS-FETCH-DC   THRU 2551-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2550-EXIT.  EXIT.


       2551-PROCESS-FETCH-DC.

           PERFORM 6121-FETCH-ALL-DOCK-PRO THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2551-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO   THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XDSTL
                 END-IF
                 MOVE ATTR-UABX TO XDSTA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2551-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF TF-LANEB OF WMBIT11A  NOT = LK-XDST
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2551-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2551-EXIT.  EXIT.


       2560-PROCESS-ORG.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DOCK' , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO THE TFMSACA-OPER-TRMID
      ***   PROCESS PROS WHERE TF-LANEA = ORG
      ***  ENTERED IN THE SCREEN
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2560-PROCESS-ORG'           TO WS-MESSAGE.

           MOVE LK-FROMDOCK         TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID  TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO  THRU 6120-EXIT.

           PERFORM 2561-PROCESS-FETCH-DC   THRU 2561-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2560-EXIT.  EXIT.


       2561-PROCESS-FETCH-DC.

           PERFORM 6121-FETCH-ALL-DOCK-PRO THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2561-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO   THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO ORGL
                 END-IF
                 MOVE ATTR-UABX TO ORGA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2561-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF WS-PRO-PRO-NBR(1:3)  = LK-ORG
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2561-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2561-EXIT.  EXIT.


       2570-PROCESS-XORG.
************************************************************
      ***  OPEN A CURSOR FOR ALL PROS WHERE THE DOCK IS
      ***  EQUAL TO THE 'FROM DOCK' , THE PRO_LOC_CD = 'D'
      ***  AND THE TRM_ID IS EQUAL TO TFMSACA-OPER-TRMID
      ***  IF PRO-ORG  NOT EQUAL ORG  ENTERED
      ***  PROCSS PROS.(TF-LANEB)
      ***  PROCESS '4000-TRANS-FROM-TRLR',
      ***   DETERMINE IF TRANSFER TO IS A TRLR OR DOCK AND
      ***   PROCESS THE CORRECT PARAGRAPH.ONCE ALL OCCURANCES OF THE
      ***   PROS HAVE BEEN PROCESSED, IF ANY RESPONSE MESSAGES
      ***   AN ERROR MESSAGE WILL BE SET TO ACA-WSMSG-CODE
************************************************************

           MOVE '2570-PROCESS-XORG'           TO WS-MESSAGE.

           MOVE LK-FROMDOCK       TO OP77-DOCK.
           MOVE TFMSACA-OPER-TRMID  TO OP77-TRM-ID.

           PERFORM 6120-OPEN-ALL-DOCK-PRO  THRU 6120-EXIT.

           PERFORM 2571-PROCESS-FETCH-DC   THRU 2571-EXIT
              UNTIL EOF-PRO-DOCK.

           PERFORM 6122-CLOSE-ALL-DOCK-PRO THRU 6122-EXIT.

       2570-EXIT.  EXIT.


       2571-PROCESS-FETCH-DC.

           PERFORM 6121-FETCH-ALL-DOCK-PRO  THRU 6121-EXIT.
CH0008     IF WS-USA-FOUND-SW = 'N'
CH0008        MOVE SPACE                 TO WS-USA-FOUND-SW
CH0008        GO TO 2571-EXIT
CH0008     END-IF.

           PERFORM 2620-MOVE-PROCESS-PRO    THRU 2620-EXIT.

           IF NOT EOF-PRO-DOCK
              CONTINUE
           ELSE
              IF WS-PRO-COUNT = ZERO
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 IF ACA-WSMSG-CODE = SPACES
 ****************** NO PROS PROCESSED       *************
                    MOVE 'OP0574' TO ACA-WSMSG-CODE
                    MOVE -1       TO XORGL
                 END-IF
                 MOVE ATTR-UABX TO XORGA
              ELSE
                 PERFORM 7031-PROTECT-ALL THRU 7031-EXIT
              END-IF
              GO TO 2571-EXIT
           END-IF.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6050-SELECT-ORG-DEST  THRU 6050-EXIT.

           IF WS-PRO-PRO-NBR(1:3)  NOT = LK-XORG
              IF LK-TOTRLR = SPACES
                 MOVE TFMSACA-OPER-TRMID TO WS-PRO-TRM-ID
                 MOVE LK-TODOCK TO WS-PRO-DOCK
                 MOVE SPACES TO OP77-DOCK-PRINTED
                 PERFORM 4200-TRANS-TO-DOCK THRU 4200-EXIT
              ELSE
                 PERFORM 4010-TRANS-TO-TRLR THRU 4010-EXIT
              END-IF
           ELSE
              GO TO 2571-EXIT
           END-IF.

           PERFORM 4420-SET-UP-WMOPT52A  THRU 4420-EXIT.
           PERFORM 6400-INSERT-WMOPT52A  THRU 6400-EXIT.

           PERFORM 4470-SET-UP-WMOPT84A  THRU 4470-EXIT.
           PERFORM 6430-INSERT-WMOPT84A  THRU 6430-EXIT.

           ADD +1 TO WS-PRO-TRAN.

       2571-EXIT.  EXIT.


       2600-MOVE-OP66-FROM.
************************************************************
      ***  MOVE THE OP66 ROW TO THE WS-FROM-TRLR AREA. BECAUSE
      ***  YOU MAY HAVE TO READ FURTHER FOR ANOTHER UNIT IF
      ***  TRANSFERRING TO A TRLR THE OP66 AREA WILL GET OVERLAYED.
      ***  THIS AREA WILL HOLD THE INITIAL VALUES FOR THE CALL AND
      ***  WILL BE UPDATED. THE WS AREAS WILL BE MOVED FOR THE
      ***  UPDATE TO WMOPT66A TABLE.
************************************************************

           MOVE '2600-MOVE-OP66-FROM'        TO WS-MESSAGE.

           MOVE OP66-CMPNY          TO WS-FR-CO.
           MOVE OP66-UNIT-NBR       TO WS-FR-UNIT-NBR.
           MOVE OP66-UNIT-STATUS    TO WS-FR-UNIT-STATUS.
           MOVE OP66-UNIT-TYP       TO WS-FR-UNIT-TYP.
           MOVE OP66-CURR-LOC       TO WS-FR-CURR-LOC.
           MOVE OP66-MFST-TYP       TO WS-FR-MFST-TYP.
           MOVE OP66-MFST-NBR       TO WS-FR-MFST-NBR.
           MOVE OP66-NBR-BILLS      TO WS-FR-NBR-BILLS.
           MOVE OP66-LOADED-WT      TO WS-FR-LOADED-WT.
           MOVE OP66-HANDLE-WT      TO WS-FR-HANDLE-WT.
           MOVE OP66-OLDEST-BILL-DUE-DT TO WS-FR-OLDEST-BILL-DUE-DT.
           MOVE OP66-ORIG-TERM      TO WS-FR-ORIG-TERM.
           MOVE OP66-DEST-TERM      TO WS-FR-DEST-TERM.
           MOVE OP66-HEADLOAD       TO WS-FR-HEADLOAD.
           MOVE OP66-MFST-HISTORY   TO WS-FR-MFST-HISTORY.
           MOVE OP66-BIG-BILL-COUNT TO WS-FR-BIG-BILL-COUNT.
           MOVE OP66-CHG-TIMESTAMP  TO WS-FR-CHG-TIMESTAMP.

           MOVE OP66-STATUS-TIMESTAMP TO WS-FR-STATUS-TIMESTAMP.
           MOVE OP66-TRAP-FLAG        TO WS-FR-TRAP-FLAG.
           MOVE OP66-SPEC-INST        TO WS-FR-SPEC-INST.
           MOVE OP66-MFST-PRINTED     TO WS-FR-MFST-PRINTED.
           MOVE OP66-SPEC-FLAG        TO WS-FR-SPEC-FLAG.
           MOVE OP66-TRACTOR-NBR      TO WS-FR-TRACTOR-NBR.
           MOVE OP66-TRIP-ORIG        TO WS-FR-TRIP-ORIG.
           MOVE OP66-TRIP-NBR         TO WS-FR-TRIP-NBR.
           MOVE OP66-CUBE-PCT         TO WS-FR-CUBE-PCT.
           MOVE OP66-TFL-TIMESTAMP    TO WS-FR-TFL-TIMESTAMP.
           MOVE OP66-SEAL-NBR         TO WS-FR-SEAL-NBR.
           MOVE OP66-RAIL-NAME        TO WS-FR-RAIL-NAME.
           MOVE OP66-DP-RECM-DOOR     TO WS-FR-DP-RECM-DOOR.
           MOVE OP66-DP-RECM-TIME     TO WS-FR-DP-RECM-TIME.
           MOVE OP66-DP-LOCK          TO WS-FR-DP-LOCK.
           MOVE OP66-ALT-STATUS       TO WS-FR-ALT-STATUS.
           MOVE OP66-ALT-STATUS-TS    TO WS-FR-ALT-STATUS-TS.
           MOVE OP66-ALT-STATUS-COMM  TO WS-FR-ALT-STATUS-COMM.
           MOVE OP66-TRIP-DEST        TO WS-FR-TRIP-DEST.
           MOVE OP66-RAIL-DEST        TO WS-FR-RAIL-DEST.
           MOVE OP66-MFST-HISTORY     TO WS-FR-MFST-HISTORY.
           MOVE OP66-EXCP-SEAL-NBR    TO WS-FR-EXCP-SEAL-NBR.
           MOVE OP66-EXCP-FLAG        TO WS-FR-EXCP-FLAG.
           MOVE OP66-TSL-TIMESTAMP    TO WS-FR-TSL-TIMESTAMP.

       2600-EXIT.  EXIT.


       2605-MOVE-OP68-FROM.
************************************************************
      ***  MOVE THE OP68 ROW TO THE WS-FROM-TRLR AREA. BECAUSE
      ***  YOU MAY HAVE TO READ FURTHER FOR ANOTHER UNIT IF
      ***  TRANSFERRING TO A TRLR THE OP68 AREA WILL GET OVERLAYED.
      ***  THIS AREA WILL HOLD THE INITIAL VALUES FOR THE CALL AND
      ***  WILL BE UPDATED. THE WS AREAS WILL BE MOVED FOR THE
      ***  UPDATE TO WMOPT68A TABLE.
************************************************************

           MOVE '2605-MOVE-OP68-FROM'        TO WS-MESSAGE.

           MOVE OP68-CMPNY          TO WS-FR-OP68-CO.
           MOVE OP68-UNIT-NBR       TO WS-FR-OP68-UNIT-NBR.
           MOVE OP68-UNIT-STATUS    TO WS-FR-OP68-UNIT-STATUS.
           MOVE OP68-UNIT-TYP       TO WS-FR-OP68-UNIT-TYP.
           MOVE OP68-CURR-LOC       TO WS-FR-OP68-CURR-LOC.
           MOVE OP68-MFST-TYP       TO WS-FR-OP68-MFST-TYP.
           MOVE OP68-MFST-NBR       TO WS-FR-OP68-MFST-NBR.
           MOVE OP68-NBR-BILLS      TO WS-FR-OP68-NBR-BILLS.
           MOVE OP68-LOADED-WT      TO WS-FR-OP68-LOADED-WT.
           MOVE OP68-HANDLE-WT      TO WS-FR-OP68-HANDLE-WT.
           MOVE OP68-OLDEST-BILL-DUE-DT
                                    TO WS-FR-OP68-OLDEST-BILL-DUE-DT.
           MOVE OP68-ORIG-TERM      TO WS-FR-OP68-ORIG-TERM.
           MOVE OP68-DEST-TERM      TO WS-FR-OP68-DEST-TERM.
           MOVE OP68-HEADLOAD       TO WS-FR-OP68-HEADLOAD.
           MOVE OP68-MFST-HISTORY   TO WS-FR-OP68-MFST-HISTORY.
           MOVE OP68-BIG-BILL-COUNT TO WS-FR-OP68-BIG-BILL-COUNT.
           MOVE OP68-CHG-TIMESTAMP  TO WS-FR-OP68-CHG-TIMESTAMP.

           MOVE OP68-STATUS-TIMESTAMP TO WS-FR-OP68-STATUS-TIMESTAMP.
           MOVE OP68-TRAP-FLAG        TO WS-FR-OP68-TRAP-FLAG.
           MOVE OP68-SPEC-INST        TO WS-FR-OP68-SPEC-INST.
           MOVE OP68-MFST-PRINTED     TO WS-FR-OP68-MFST-PRINTED.
           MOVE OP68-SPEC-FLAG        TO WS-FR-OP68-SPEC-FLAG.
           MOVE OP68-TRACTOR-NBR      TO WS-FR-OP68-TRACTOR-NBR.
           MOVE OP68-TRIP-ORIG        TO WS-FR-OP68-TRIP-ORIG.
           MOVE OP68-TRIP-NBR         TO WS-FR-OP68-TRIP-NBR.
           MOVE OP68-CUBE-PCT         TO WS-FR-OP68-CUBE-PCT.
           MOVE OP68-TFL-TIMESTAMP    TO WS-FR-OP68-TFL-TIMESTAMP.
           MOVE OP68-SEAL-NBR         TO WS-FR-OP68-SEAL-NBR.
           MOVE OP68-RAIL-NAME        TO WS-FR-OP68-RAIL-NAME.
           MOVE OP68-DP-RECM-DOOR     TO WS-FR-OP68-DP-RECM-DOOR.
           MOVE OP68-DP-RECM-TIME     TO WS-FR-OP68-DP-RECM-TIME.
           MOVE OP68-DP-LOCK          TO WS-FR-OP68-DP-LOCK.
           MOVE OP68-ALT-STATUS       TO WS-FR-OP68-ALT-STATUS.
           MOVE OP68-ALT-STATUS-TS    TO WS-FR-OP68-ALT-STATUS-TS.
           MOVE OP68-ALT-STATUS-COMM  TO WS-FR-OP68-ALT-STATUS-COMM.
           MOVE OP68-TRIP-DEST        TO WS-FR-OP68-TRIP-DEST.
           MOVE OP68-RAIL-DEST        TO WS-FR-OP68-RAIL-DEST.
           MOVE OP68-MFST-HISTORY     TO WS-FR-OP68-MFST-HISTORY.
           MOVE OP68-EXCP-SEAL-NBR    TO WS-FR-OP68-EXCP-SEAL-NBR.
           MOVE OP68-EXCP-FLAG        TO WS-FR-OP68-EXCP-FLAG.
           MOVE OP68-TSL-TIMESTAMP    TO WS-FR-OP68-TSL-TIMESTAMP.

       2605-EXIT.  EXIT.


       2610-MOVE-OP66-TO.
************************************************************
      ***  MOVE THE OP66 ROW TO THE WS-TO-TRLR AREA. USE THIS
      ***  AREA AS A HOLD AREA.  IT WILL BE UPDATED. MOVE THIS
      ***  AREA TO THE OP66 AREA WHEN READY TO DO THE UPDATE.
************************************************************

           MOVE '2610-MOVE-OP66-TO'          TO WS-MESSAGE.

           MOVE OP66-CMPNY            TO WS-TO-CO.
           MOVE OP66-UNIT-NBR         TO WS-TO-UNIT-NBR.
           MOVE OP66-UNIT-STATUS      TO WS-TO-UNIT-STATUS.
           MOVE OP66-UNIT-TYP         TO WS-TO-UNIT-TYP.
           MOVE OP66-CURR-LOC         TO WS-TO-CURR-LOC.
           MOVE OP66-MFST-TYP         TO WS-TO-MFST-TYP.
           MOVE OP66-MFST-NBR         TO WS-TO-MFST-NBR.
           MOVE OP66-NBR-BILLS        TO WS-TO-NBR-BILLS.
           MOVE OP66-LOADED-WT        TO WS-TO-LOADED-WT.
           MOVE OP66-HANDLE-WT        TO WS-TO-HANDLE-WT.
           MOVE OP66-OLDEST-BILL-DUE-DT TO WS-TO-OLDEST-BILL-DUE-DT.
           MOVE OP66-ORIG-TERM        TO WS-TO-ORIG-TERM.
           MOVE OP66-DEST-TERM        TO WS-TO-DEST-TERM.
           MOVE OP66-HEADLOAD         TO WS-TO-HEADLOAD.
           MOVE OP66-MFST-HISTORY     TO WS-TO-MFST-HISTORY.
           MOVE OP66-BIG-BILL-COUNT   TO WS-TO-BIG-BILL-COUNT.
           MOVE OP66-CHG-TIMESTAMP    TO WS-TO-CHG-TIMESTAMP.

           MOVE OP66-STATUS-TIMESTAMP TO WS-TO-STATUS-TIMESTAMP.
           MOVE OP66-TRAP-FLAG        TO WS-TO-TRAP-FLAG.
           MOVE OP66-SPEC-INST        TO WS-TO-SPEC-INST.
           MOVE OP66-MFST-PRINTED     TO WS-TO-MFST-PRINTED.
           MOVE OP66-SPEC-FLAG        TO WS-TO-SPEC-FLAG.
           MOVE OP66-TRACTOR-NBR      TO WS-TO-TRACTOR-NBR.
           MOVE OP66-TRIP-ORIG        TO WS-TO-TRIP-ORIG.
           MOVE OP66-TRIP-NBR         TO WS-TO-TRIP-NBR.
           MOVE OP66-CUBE-PCT         TO WS-TO-CUBE-PCT.
           MOVE OP66-TFL-TIMESTAMP    TO WS-TO-TFL-TIMESTAMP.
           MOVE OP66-SEAL-NBR         TO WS-TO-SEAL-NBR.
           MOVE OP66-RAIL-NAME        TO WS-TO-RAIL-NAME.
           MOVE OP66-DP-RECM-DOOR     TO WS-TO-DP-RECM-DOOR.
           MOVE OP66-DP-RECM-TIME     TO WS-TO-DP-RECM-TIME.
           MOVE OP66-DP-LOCK          TO WS-TO-DP-LOCK.
           MOVE OP66-ALT-STATUS       TO WS-TO-ALT-STATUS.
           MOVE OP66-ALT-STATUS-TS    TO WS-TO-ALT-STATUS-TS.
           MOVE OP66-ALT-STATUS-COMM  TO WS-TO-ALT-STATUS-COMM.
           MOVE OP66-TRIP-DEST        TO WS-TO-TRIP-DEST.
           MOVE OP66-RAIL-DEST        TO WS-TO-RAIL-DEST.
           MOVE OP66-MFST-HISTORY     TO WS-TO-MFST-HISTORY.
           MOVE OP66-EXCP-SEAL-NBR    TO WS-TO-EXCP-SEAL-NBR.
           MOVE OP66-EXCP-FLAG        TO WS-TO-EXCP-FLAG.
           MOVE OP66-TSL-TIMESTAMP    TO WS-TO-TSL-TIMESTAMP.
       2610-EXIT.  EXIT.


       2615-MOVE-OP68-TO.
************************************************************
      ***  MOVE THE OP68 ROW TO THE WS-TO-TRLR AREA. USE THIS
      ***  AREA AS A HOLD AREA.  IT WILL BE UPDATED. MOVE THIS
      ***  AREA TO THE OP68 AREA WHEN READY TO DO THE UPDATE.
************************************************************

           MOVE '2615-MOVE-OP68-TO'          TO WS-MESSAGE.

           MOVE OP68-CMPNY            TO WS-TO-OP68-CO.
           MOVE OP68-UNIT-NBR         TO WS-TO-OP68-UNIT-NBR.
           MOVE OP68-UNIT-STATUS      TO WS-TO-OP68-UNIT-STATUS.
           MOVE OP68-UNIT-TYP         TO WS-TO-OP68-UNIT-TYP.
           MOVE OP68-CURR-LOC         TO WS-TO-OP68-CURR-LOC.
           MOVE OP68-MFST-TYP         TO WS-TO-OP68-MFST-TYP.
           MOVE OP68-MFST-NBR         TO WS-TO-OP68-MFST-NBR.
           MOVE OP68-NBR-BILLS        TO WS-TO-OP68-NBR-BILLS.
           MOVE OP68-LOADED-WT        TO WS-TO-OP68-LOADED-WT.
           MOVE OP68-HANDLE-WT        TO WS-TO-OP68-HANDLE-WT.
           MOVE OP68-OLDEST-BILL-DUE-DT
                                      TO WS-TO-OP68-OLDEST-BILL-DUE-DT.
           MOVE OP68-ORIG-TERM        TO WS-TO-OP68-ORIG-TERM.
           MOVE OP68-DEST-TERM        TO WS-TO-OP68-DEST-TERM.
           MOVE OP68-HEADLOAD         TO WS-TO-OP68-HEADLOAD.
           MOVE OP68-MFST-HISTORY     TO WS-TO-OP68-MFST-HISTORY.
           MOVE OP68-BIG-BILL-COUNT   TO WS-TO-OP68-BIG-BILL-COUNT.
           MOVE OP68-CHG-TIMESTAMP    TO WS-TO-OP68-CHG-TIMESTAMP.

           MOVE OP68-STATUS-TIMESTAMP TO WS-TO-OP68-STATUS-TIMESTAMP.
           MOVE OP68-TRAP-FLAG        TO WS-TO-OP68-TRAP-FLAG.
           MOVE OP68-SPEC-INST        TO WS-TO-OP68-SPEC-INST.
           MOVE OP68-MFST-PRINTED     TO WS-TO-OP68-MFST-PRINTED.
           MOVE OP68-SPEC-FLAG        TO WS-TO-OP68-SPEC-FLAG.
           MOVE OP68-TRACTOR-NBR      TO WS-TO-OP68-TRACTOR-NBR.
           MOVE OP68-TRIP-ORIG        TO WS-TO-OP68-TRIP-ORIG.
           MOVE OP68-TRIP-NBR         TO WS-TO-OP68-TRIP-NBR.
           MOVE OP68-CUBE-PCT         TO WS-TO-OP68-CUBE-PCT.
           MOVE OP68-TFL-TIMESTAMP    TO WS-TO-OP68-TFL-TIMESTAMP.
           MOVE OP68-SEAL-NBR         TO WS-TO-OP68-SEAL-NBR.
           MOVE OP68-RAIL-NAME        TO WS-TO-OP68-RAIL-NAME.
           MOVE OP68-DP-RECM-DOOR     TO WS-TO-OP68-DP-RECM-DOOR.
           MOVE OP68-DP-RECM-TIME     TO WS-TO-OP68-DP-RECM-TIME.
           MOVE OP68-DP-LOCK          TO WS-TO-OP68-DP-LOCK.
           MOVE OP68-ALT-STATUS       TO WS-TO-OP68-ALT-STATUS.
           MOVE OP68-ALT-STATUS-TS    TO WS-TO-OP68-ALT-STATUS-TS.
           MOVE OP68-ALT-STATUS-COMM  TO WS-TO-OP68-ALT-STATUS-COMM.
           MOVE OP68-TRIP-DEST        TO WS-TO-OP68-TRIP-DEST.
           MOVE OP68-RAIL-DEST        TO WS-TO-OP68-RAIL-DEST.
           MOVE OP68-MFST-HISTORY     TO WS-TO-OP68-MFST-HISTORY.
           MOVE OP68-EXCP-SEAL-NBR    TO WS-TO-OP68-EXCP-SEAL-NBR.
           MOVE OP68-EXCP-FLAG        TO WS-TO-OP68-EXCP-FLAG.
           MOVE OP68-TSL-TIMESTAMP    TO WS-TO-OP68-TSL-TIMESTAMP.
       2615-EXIT.  EXIT.


       2620-MOVE-PROCESS-PRO.
************************************************************
      ***  MOVE THE OP77 ROW TO THE WS-PROC-PRO AREA. USE THIS
      ***  AREA AS A HOLD AREA.  IT WILL BE UPDATED. MOVE THIS
      ***  AREA TO THE OP77 AREA WHEN READY TO DO THE UPDATE.
************************************************************

           MOVE '2620-MOVE-PROC-PRO'    TO WS-MESSAGE.

           MOVE OP77-CMPNY        TO WS-PRO-CO.
           MOVE OP77-PRO-NBR      TO WS-PRO-PRO-NBR.
           MOVE OP77-PRO-SUF      TO WS-PRO-PRO-SUF.
           MOVE OP77-PRO-LOC-CD   TO WS-PRO-PRO-LOC-CD.
           MOVE OP77-UNIT-NBR     TO WS-PRO-UNIT-NBR.
           MOVE OP77-DOCK         TO WS-PRO-DOCK.
           MOVE OP77-TRM-ID       TO WS-PRO-TRM-ID.

       2620-EXIT.  EXIT.

            EXEC SQL INCLUDE PDSQLFLW END-EXEC.

       3000-TERMINATE.

           COPY FMCENV.

           COPY OPCEND01.

       3000-EXIT.  EXIT.

       3300-TRANSFER-CONTROL.

           COPY CICSXCTL.

       3300-EXIT.  EXIT.

       3400-RETURN-WITH-TRANSID.

           COPY CICSRET.

       3400-EXIT.  EXIT.


       3500-CHECK-FASTPATH.

           PERFORM 9100-CHECK-FASTPATH THRU 9100-EXIT.

           IF WS-HIT-ON-FPTH-TABLE-SW = HIGH-VALUES
              PERFORM 3700-CALL-SEC-XCTL THRU 3700-EXIT
              IF ACA-WSMSG-CODE = SPACES
                 IF SCA-SEC-NXTACCI = 'Y'
                    PERFORM 9000-CICSXCTL THRU 9000-EXIT
                 ELSE
                    MOVE -1 TO NXTSCRNL
                    MOVE 'OP0259' TO ACA-WSMSG-CODE
                    MOVE WS-PROG-ID TO SCA-CURRENT-PROGRAM
                    MOVE 'E'        TO WX-PROCESSING-MODE-FLAG
                    MOVE '2'        TO WS-SEND-SCREEN-FLAG
                 END-IF
              ELSE
                 MOVE WS-PROG-ID TO SCA-CURRENT-PROGRAM
                 MOVE 'E'        TO WX-PROCESSING-MODE-FLAG
                 MOVE '2'        TO WS-SEND-SCREEN-FLAG
              END-IF
           ELSE
              IF WS-FPTH-TABLE-IS-ATEND-SW = HIGH-VALUES
                 MOVE 'E' TO WX-PROCESSING-MODE-FLAG
                 MOVE '2' TO WS-SEND-SCREEN-FLAG
              END-IF
           END-IF.

       3500-EXIT.  EXIT.

       3700-CALL-SEC-XCTL.

           EXEC SQL INCLUDE PDXCTLSC END-EXEC.

       3700-EXIT. EXIT.

      *3700-CALL-SEC-LINK.
      *
      *    EXEC SQL INCLUDE PDLINKSC END-EXEC.
      *
      *3700-LK-EXIT.  EXIT.

       4000-TRANS-FROM-TRLR.
      ************************************************************
      ***  THIS ROUTINE WILL PROCESSING DELETEING A PRO FROM
      ***  A TRLR.
      ***  FROM THE PROPER MANIFEST TABLE.
      ************************************************************

           MOVE '4000-TRANS-FROM-TRLR'  TO WS-MESSAGE.

      ************************************************************
      *****IF THE PRO IS ON THE LOADING MFST TABLE AND THE MFST
      ***  HISTORY IS EQUAL TO A 'Y' THE PRO CANNOT BE DELETED
      ***  FROM THE MFST TABLE AS THE STATUS HAS GONE TO 'TBU'
      ************************************************************

           IF WS-FR-MFST-TYP = 'C'
              IF WS-FR-MFST-HISTORY = 'Y'
                 CONTINUE
              ELSE
                 MOVE WS-PRO-PRO-NBR   TO OP12-PRO-NBR
                 MOVE WS-PRO-PRO-SUF   TO OP12-PRO-SUF
                 MOVE WS-FR-MFST-NBR   TO OP12-MFST-NBR
                 PERFORM 6300-DELETE-LOAD-MFST THRU 6300-EXIT
              END-IF
           ELSE
               IF WS-FR-MFST-TYP = 'D'
                  IF WS-FR-MFST-HISTORY = 'Y'
                     CONTINUE
                  ELSE
                     MOVE WS-PRO-PRO-NBR   TO OP14-PRO-NBR
                     MOVE WS-PRO-PRO-SUF   TO OP14-PRO-SUF
                     MOVE WS-FR-MFST-NBR   TO OP14-MFST-NBR
                     PERFORM 6310-DELETE-DELV-MFST THRU 6310-EXIT
                  END-IF
               END-IF
           END-IF.

           IF WS-FR-UNIT-TYP = 'TLR'
              MOVE 'A'  TO WS-TRANS-FROM-TYPE
           ELSE
              MOVE 'B'  TO WS-TRANS-FROM-TYPE
           END-IF.

       4000-EXIT.  EXIT.


       4010-TRANS-TO-TRLR.
      ************************************************************
      ***  THIS ROUTINE WILL PROCESS UPDATE OF THE 'TO TRLR'
      ***  DATABASE.
      ***  UPDATE WMOPT77A FOR THE NEW PRO-LOC AND INSERT
      ***  A PRO EVENT ROW ON WMOPT52A FOR THE PRO BEING TRANSFERRED.
      ***  FROM THE PROPER MANIFEST TABLE.
      ************************************************************

           MOVE '4010-TRANS-TO-TRLR'  TO WS-MESSAGE.

           MOVE WS-PRO-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE WS-PRO-PRO-SUF TO TF-SUF OF WMBIT11A.
           PERFORM 6040-SELECT-PRO-WT-DUE THRU 6040-EXIT.

      ************************************************************
      ***  CHECK FOR A MISLOAD FOR THE 'TO' TRAILER
      ***  IF THE PRO DEST AND THE UNIT DEST IS NOT EQUAL THEN
      ***  MOVE THE CURR LOC OF THE UNIT TO THE LOAD PLAN ORIG
      ***  AND THE PRO DEST TO THE LOADPLAN DEST. THE 1000-FIND
      ***  LOADPLAN WILL CHOOSE THE OPTIONS FOR DEST BETWEEN THE
      ***  ORIG AND DEST PROVIDED.  COMPARE THE DEST OF OPTIONS
      ***  WITH THE UNIT DEST. IF NONE ARE EQUAL THEN THE PRO
      ***  IS A MISLOAD.
      ************************************************************

           MOVE 'N' TO WS-MISLOAD.

           INITIALIZE WS-LDP-ORIG
                      WS-LDP-DEST
                      WS-LDP-OPTION1
                      WS-LDP-OPTION2
                      WS-LDP-OPTION3.

           IF WS-TO-DEST-TERM = TF-LANEB OF WMBIT11A
              CONTINUE
           ELSE
              IF WS-TO-MFST-TYP  = 'D'
                 IF WS-TO-CURR-LOC  = TF-LANEB OF WMBIT11A
                    CONTINUE
                 ELSE
                    MOVE 'Y' TO WS-MISLOAD
                 END-IF
              ELSE
                 PERFORM 4011-CHECK-FOR-MISLOAD THRU 4011-EXIT
              END-IF
           END-IF.

           IF WS-TO-MFST-TYP = 'C'
              PERFORM 4400-SET-UP-WMOPT12A  THRU 4400-EXIT
              PERFORM 6410-INSERT-LOAD-MFST THRU 6410-EXIT
           ELSE
              IF WS-TO-MFST-TYP = 'D'
                 PERFORM 4410-SET-UP-WMOPT14A  THRU 4410-EXIT
                 PERFORM 6420-INSERT-DELV-MFST THRU 6420-EXIT
              END-IF
           END-IF.

           PERFORM 4450-SET-UP-TRLR-WMOPT77A THRU 4450-EXIT.
           PERFORM 6210-UPDATE-WMOPT77A      THRU 6210-EXIT.

           MOVE LK-TOTRLR TO WS-TRANS-TO.
           IF WS-TO-UNIT-TYP = 'TLR'
              MOVE 'A'       TO WS-TRANS-TO-TYPE
           ELSE
              MOVE 'B'       TO WS-TRANS-TO-TYPE
           END-IF.

       4010-EXIT.  EXIT.


       4011-CHECK-FOR-MISLOAD.
      ************************************************************
      ***  THIS ROUTINE WILL PERFORM THE LOAD PLAN COPYBOOK
      ************************************************************

           MOVE '4011-CHECK-FOR-MISLOAD'   TO WS-MESSAGE.

           MOVE WS-TO-CURR-LOC       TO WS-LDP-ORIG.
           MOVE TF-LANEB OF WMBIT11A TO WS-LDP-DEST.
           MOVE SCA-CURRENT-DATE     TO WS-LDP-CURR-DATE.
           MOVE SCA-CURRENT-TIME     TO WS-LDP-CURR-TIME.

           PERFORM 10000-FIND-LOADPLAN THRU 10000-FIND-LOADPLAN-EXIT.

           IF PLAN-FOUND
              IF WS-TO-DEST-TERM = WS-LDP-OPTION1 OR
                 WS-TO-DEST-TERM = WS-LDP-OPTION2 OR
                 WS-TO-DEST-TERM = WS-LDP-OPTION3
                 CONTINUE
              ELSE
                 MOVE 'Y' TO WS-MISLOAD
              END-IF
           END-IF.

       4011-EXIT.  EXIT.


       4100-REPROCESS-TRLR.
      ************************************************************
      ***  THIS ROUTINE WILL BE USED TO SET THE VALUES FOR A TRLR
      ***  TRANSFER TO OR FROM.  ALL PROS THAT ARE ASSOCIATED WITH
      ***  A TRLR WILL BE FOUND THEN FROM THE WMBIT11A TABLE A TOTAL
      ***  OF WGHT WILL BE DETERMINED, NBR-OF-BILLS, BIG-BILL-COUNT,
      ***  OLDEST BILL DUE DATE. THE VALUES WILL BE ACCUMALATED AND,
      ***  THE UNIT UPDATED.  BY UPDATING TRLRS IN THIS MANNER WE
      ***  WILL AVOID AND NEGATIVES VALUES FOR WGHT AND COUNT. WE
      ************************************************************

           MOVE '4100-REPROCESS-TRLR  '    TO WS-MESSAGE.

           IF WS-MFST-TYPE = 'C'
              MOVE WS-UNIT-NBR TO OP12-UNIT-NBR
              MOVE WS-MFST-NBR TO OP12-MFST-NBR
              PERFORM 6130-OPEN-LD-MFST-UNIT   THRU 6130-EXIT
              PERFORM 4110-PROCESS-UNIT        THRU 4110-EXIT
                  UNTIL EOF-MFST
              PERFORM 6132-CLOSE-LD-MFST-UNIT   THRU 6132-EXIT
           ELSE
              IF WS-MFST-TYPE = 'D'
                 MOVE WS-UNIT-NBR TO OP14-UNIT-NBR
                 MOVE WS-MFST-NBR TO OP14-MFST-NBR
                 PERFORM 6140-OPEN-DLV-MFST-UNIT  THRU 6140-EXIT
                 PERFORM 4110-PROCESS-UNIT        THRU 4110-EXIT
                     UNTIL EOF-MFST
                 PERFORM 6142-CLOSE-DLV-MFST-UNIT THRU 6142-EXIT
              END-IF
           END-IF.

       4100-EXIT.  EXIT.


       4110-PROCESS-UNIT.
      ************************************************************
      ***  THIS ROUTINE WILL FETCH EACH PRO THAT IS ON THE UNIT
      ***  AND ACCUMULATE THE VALUES FOR THE UNIT UPDATE.
      ************************************************************

           MOVE '4110-PROCESS-UNIT'        TO WS-MESSAGE.

           IF WS-MFST-TYPE = 'C'
              PERFORM 6131-FETCH-LD-MFST-UNIT THRU 6131-EXIT
           ELSE
              IF WS-MFST-TYPE = 'D'
                 PERFORM 6141-FETCH-DLV-MFST-UNIT THRU 6141-EXIT
              END-IF
           END-IF.

           IF NOT EOF-MFST
              CONTINUE
           ELSE
              IF WS-NBR-BILLS = ZERO
                 MOVE WS-DEFAULT-DATE TO WS-OLDEST-BILL-DUE-DT
                 MOVE ZERO            TO WS-CUBE-PCT
              END-IF
              GO TO 4110-EXIT
           END-IF.

           MOVE OP77-PRO-NBR TO TF-PRO OF WMBIT11A.
           MOVE OP77-PRO-SUF TO TF-SUF OF WMBIT11A.

           PERFORM 6040-SELECT-PRO-WT-DUE THRU 6040-EXIT.

CH0007***  IF WS-BILL-DUE-DT > WS-DEFAULT-DATE
CH0007***     IF WS-OLDEST-BILL-DUE-DT > WS-DEFAULT-DATE
CH0007***        MOVE WS-BILL-DUE-DT TO WS-OLDEST-BILL-DUE-DT
CH0007***     ELSE
CH0007***        IF WS-BILL-DUE-DT < WS-OLDEST-BILL-DUE-DT
CH0007***           MOVE WS-BILL-DUE-DT TO WS-OLDEST-BILL-DUE-DT
CH0007***        END-IF
CH0007***     END-IF
CH0007***  END-IF.

CH0007     IF WS-BILL-DUE-DT > WS-DEFAULT-DATE
CH0007        IF WS-OLDEST-BILL-DUE-DT > WS-DEFAULT-DATE
CH0007           IF WS-BILL-DUE-DT < WS-OLDEST-BILL-DUE-DT
CH0007              MOVE WS-BILL-DUE-DT     TO WS-OLDEST-BILL-DUE-DT
CH0007           END-IF
CH0007        ELSE
CH0007           MOVE WS-BILL-DUE-DT        TO WS-OLDEST-BILL-DUE-DT
CH0007        END-IF
CH0007     END-IF.

           IF OP12-HL-FLAG = 'Y'
              MOVE 'Y' TO WS-HEADLOAD
           ELSE
              ADD TF-WT OF WMBIT11A TO WS-HANDLE-WT
           END-IF.

           ADD TF-WT OF WMBIT11A TO WS-LOADED-WT.
           ADD +1                TO WS-NBR-BILLS.

           IF TF-WT OF WMBIT11A > 1000
              ADD +1 TO WS-BIG-BILL-COUNT
           END-IF.

       4110-EXIT.  EXIT.


       4200-TRANS-TO-DOCK.
      ************************************************************
      ***  THIS ROUTINE WILL PROCESS UPDATE OF THE 'TO DOCK' FOR
      ***  DATABASE.
      ***  UPDATE WMOPT77A FOR THE NEW PRO-LOC_CD AND INSERT
      ***  A PRO EVENT ROW ON WMOPT52A FOR THE PRO BEING TRANSFERRED.
      ************************************************************

           MOVE '4200-TRANSFER-TO-DOCK'    TO WS-MESSAGE.

           MOVE WS-PRO-DOCK   TO WS-TRANS-TO(1:2).
           MOVE WS-PRO-TRM-ID TO WS-TRANS-TO(3:3).
           MOVE 'C'           TO WS-TRANS-TO-TYPE.

           PERFORM 4460-SET-UP-DOCK-WMOPT77A THRU 4460-EXIT.
           PERFORM 6210-UPDATE-WMOPT77A      THRU 6210-EXIT.

       4200-EXIT.  EXIT.


       4400-SET-UP-WMOPT12A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN INSERT ON
      ***  THE LOADING MANIFEST TABLE. THIS WILL BE USED WHEN A
      ***  TRANSFER TO A TRLR IS DONE AND THE MANIFEST TYPE FROM
      ***  WMOPT66A IS 'C'.
      ************************************************************

           MOVE '4400-SET-UP-WMOPT12A'  TO WS-MESSAGE.

           MOVE WS-TO-MFST-NBR    TO OP12-MFST-NBR.
           MOVE LK-TOTRLR         TO OP12-UNIT-NBR.
           MOVE WS-PRO-PRO-NBR    TO OP12-PRO-NBR.
           MOVE WS-PRO-PRO-SUF    TO OP12-PRO-SUF.
           MOVE WS-TO-ORIG-TERM   TO OP12-ORIG-TERM.
           MOVE SPACES            TO OP12-HL-FLAG.
           MOVE SCA-PASSWORD      TO OP12-USERID.

           IF MISLOAD
              MOVE 'Y'    TO OP12-MISLOAD-ERROR
           ELSE
              MOVE SPACES TO OP12-MISLOAD-ERROR
           END-IF.

           IF TF-LANEB OF WMBIT11A = TFMSACA-OPER-TRMID
              MOVE 'N'    TO OP12-DELV-PRINTED
              MOVE SPACES TO OP12-TRFR-PRINTED
           ELSE
              MOVE 'N'    TO OP12-TRFR-PRINTED
              MOVE SPACES TO OP12-DELV-PRINTED
           END-IF.

           EXEC SQL
               SET :OP12-MFST-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           EXEC SQL
               SET :OP12-CHG-TIMESTAMP  = CURRENT TIMESTAMP
           END-EXEC.

       4400-EXIT. EXIT.

       4410-SET-UP-WMOPT14A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN INSERT ON
      ***  THE DELIVERY MANIFEST TABLE. THIS WILL BE USED WHEN A
      ***  TRANSFER TO A TRLR IS DONE AND THE MANIFEST TYPE FROM
      ***  WMOPT66A IS 'D'.
      ************************************************************

           MOVE '4410-SET-UP-WMOPT14A'  TO WS-MESSAGE.

           MOVE WS-TO-MFST-NBR        TO OP14-MFST-NBR.
           MOVE LK-TOTRLR             TO OP14-UNIT-NBR.
           MOVE WS-PRO-PRO-NBR        TO OP14-PRO-NBR.
           MOVE WS-PRO-PRO-SUF        TO OP14-PRO-SUF.
           MOVE TFMSACA-OPER-TRMID    TO OP14-TERM-ID.
           MOVE 'N'                   TO OP14-DMAN-PRINTED.
           MOVE SCA-PASSWORD          TO OP14-USERID.

           IF MISLOAD
              MOVE 'Y'    TO OP14-MISLOAD-ERROR
           ELSE
              MOVE SPACES TO OP14-MISLOAD-ERROR
           END-IF.

           IF TF-LANEB OF WMBIT11A = TFMSACA-OPER-TRMID
              MOVE 'N'    TO OP14-DELV-PRINTED
              MOVE SPACES TO OP14-TRFR-PRINTED
           ELSE
              MOVE 'N'  TO OP14-TRFR-PRINTED
              MOVE SPACES TO OP14-DELV-PRINTED
           END-IF.

           EXEC SQL
                SET :OP14-MFST-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           EXEC SQL
                SET :OP14-CHG-TIMESTAMP  = CURRENT TIMESTAMP
           END-EXEC.

           MOVE '0001-01-01'  TO OP14-FAD-DATE
                                 OP14-DLVD-DT.

       4410-EXIT. EXIT.

       4420-SET-UP-WMOPT52A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN INSERT ON
      ***  THE PRO EVENT TABLE.  THIS WILL BE DONE FOR ALL TRANSFERS
      ************************************************************

           MOVE '4420-SET-UP-WMOPT52A'  TO WS-MESSAGE.

           INITIALIZE OP52-WMOPT52A.

           MOVE TFMSACA-CMPNY      TO OP52-CMPNY.
           MOVE WS-PRO-PRO-NBR     TO OP52-PRO-NBR.
           MOVE WS-PRO-PRO-SUF     TO OP52-PRO-SUF.
           MOVE 'TRAN'             TO OP52-EVENT-TYP.
           MOVE SCA-PASSWORD       TO OP52-USERID.

           STRING 'F='   WS-TRANS-FROM
                  ' T='  WS-TRANS-TO
                  ' '    WS-REASON
           DELIMITED BY SIZE INTO OP52-EVENT-DESC.

           EXEC SQL
                SET :OP52-EVENT-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

       4420-EXIT. EXIT.

       4430-SET-UP-FROM-WMOPT66A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN UPDATE TO
      ***  THE WMOPT66A TABLE WHEN A TRANSFER FROM A TRLR IS DONE.
      ************************************************************

           MOVE '4430-SET-UP-FROM-WMOPT66A'  TO WS-MESSAGE.

           MOVE WS-FR-UNIT-NBR         TO OP66-UNIT-NBR.
           MOVE WS-NBR-BILLS           TO OP66-NBR-BILLS.
           MOVE WS-LOADED-WT           TO OP66-LOADED-WT.
           MOVE WS-HANDLE-WT           TO OP66-HANDLE-WT.
           MOVE WS-HEADLOAD            TO OP66-HEADLOAD.
           MOVE WS-BIG-BILL-COUNT      TO OP66-BIG-BILL-COUNT.
           MOVE SCA-PASSWORD           TO OP66-USERID.

      ***  THE OLDEST BILL DUE DT CAN BE SPACES IF THERE ARE NO
      ***  MORE PROS ON THE FROM-TRLR.  NO MORE PROS ON THE FROM
      ***  TRLR CAN HAPPEN IF THE PROS FROM THE SCREEN OPTION ARE
      ***  THE LAST ON THE TRLR OR IF THE 'ALL' OPTION IS CHOOSEN.
      ***  SPACES IN THE OLDEST DUE DT FIELD CAN CAUSE A -108 ERROR
      ***  FOR INVALID STRING REPRESENTATION OF A DATE FIELD WHEN
      ***  UPDATING THE WMOPT66A TABLE

           IF WS-OLDEST-BILL-DUE-DT = SPACES
              MOVE WS-FR-OLDEST-BILL-DUE-DT TO OP66-OLDEST-BILL-DUE-DT
           ELSE
              MOVE WS-OLDEST-BILL-DUE-DT    TO OP66-OLDEST-BILL-DUE-DT
           END-IF.

           IF WS-CUBE-PCT = ZEROS
              MOVE WS-CUBE-PCT       TO OP66-CUBE-PCT
           ELSE
              MOVE WS-FR-CUBE-PCT    TO OP66-CUBE-PCT
           END-IF.

           EXEC SQL
                SET :OP66-CHG-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           MOVE WS-FR-CHG-TIMESTAMP    TO WS-CHG-TIMESTAMP.

       4430-EXIT. EXIT.

       4435-SET-UP-FROM-WMOPT68A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN INSERT TO
      ***  THE WMOPT68A TABLE WHEN A TRANSFER FROM A TRLR IS DONE.
      ************************************************************

           MOVE '4435-SET-UP-FROM-WMOPT68A'  TO WS-MESSAGE.

           MOVE WS-FR-OP68-UNIT-NBR         TO OP68-UNIT-NBR.
           MOVE WS-FR-OP68-UNIT-STATUS      TO OP68-UNIT-STATUS.
           MOVE WS-NBR-BILLS                TO OP68-NBR-BILLS.
           MOVE WS-LOADED-WT                TO OP68-LOADED-WT.
           MOVE WS-HANDLE-WT                TO OP68-HANDLE-WT.
           MOVE OP66-OLDEST-BILL-DUE-DT     TO OP68-OLDEST-BILL-DUE-DT.
           MOVE WS-HEADLOAD                 TO OP68-HEADLOAD.
           MOVE WS-BIG-BILL-COUNT           TO OP68-BIG-BILL-COUNT.
           MOVE OP66-CHG-TIMESTAMP          TO OP68-CHG-TIMESTAMP.
           MOVE SCA-PASSWORD                TO OP68-USERID.

           MOVE WS-FR-OP68-STATUS-TIMESTAMP TO OP68-STATUS-TIMESTAMP.
           MOVE WS-FR-OP68-UNIT-TYP         TO OP68-UNIT-TYP.
           MOVE WS-FR-OP68-CURR-LOC         TO OP68-CURR-LOC.
           MOVE WS-FR-OP68-TRAP-FLAG        TO OP68-TRAP-FLAG.
           MOVE WS-FR-OP68-SPEC-INST        TO OP68-SPEC-INST.
           MOVE WS-FR-OP68-MFST-NBR         TO OP68-MFST-NBR.
           MOVE WS-FR-OP68-MFST-TYP         TO OP68-MFST-TYP.
           MOVE WS-FR-OP68-MFST-PRINTED     TO OP68-MFST-PRINTED.
           MOVE WS-FR-OP68-SPEC-FLAG        TO OP68-SPEC-FLAG.
           MOVE WS-FR-OP68-TRACTOR-NBR      TO OP68-TRACTOR-NBR.
           MOVE WS-FR-OP68-TRIP-ORIG        TO OP68-TRIP-ORIG.
           MOVE WS-FR-OP68-TRIP-NBR         TO OP68-TRIP-NBR.
           MOVE WS-FR-OP68-CUBE-PCT         TO OP68-CUBE-PCT.
           MOVE WS-FR-OP68-ORIG-TERM        TO OP68-ORIG-TERM.
           MOVE WS-FR-OP68-DEST-TERM        TO OP68-DEST-TERM.
           MOVE WS-FR-OP68-TFL-TIMESTAMP    TO OP68-TFL-TIMESTAMP.
           MOVE WS-FR-OP68-SEAL-NBR         TO OP68-SEAL-NBR.
           MOVE WS-FR-OP68-RAIL-NAME        TO OP68-RAIL-NAME.
           MOVE WS-FR-OP68-DP-RECM-DOOR     TO OP68-DP-RECM-DOOR.
           MOVE WS-FR-OP68-DP-RECM-TIME     TO OP68-DP-RECM-TIME.
           MOVE WS-FR-OP68-DP-LOCK          TO OP68-DP-LOCK.
           MOVE WS-FR-OP68-ALT-STATUS       TO OP68-ALT-STATUS.
           MOVE WS-FR-OP68-ALT-STATUS-TS    TO OP68-ALT-STATUS-TS.
           MOVE WS-FR-OP68-ALT-STATUS-COMM  TO OP68-ALT-STATUS-COMM.
           MOVE WS-FR-OP68-TRIP-DEST        TO OP68-TRIP-DEST.
           MOVE WS-FR-OP68-RAIL-DEST        TO OP68-RAIL-DEST.
           MOVE WS-FR-OP68-MFST-HISTORY     TO OP68-MFST-HISTORY.
           MOVE WS-FR-OP68-EXCP-SEAL-NBR    TO OP68-EXCP-SEAL-NBR.
           MOVE WS-FR-OP68-EXCP-FLAG        TO OP68-EXCP-FLAG.
           MOVE WS-FR-OP68-TSL-TIMESTAMP    TO OP68-TSL-TIMESTAMP.

       4435-EXIT. EXIT.

       4440-SET-UP-TO-WMOPT66A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN UPDATE TO
      ***  THE WMOPT66A TABLE WHEN A TRANSFER TO   A TRLR IS DONE.
      ************************************************************

           MOVE '4440-SET-UP-TO-WMOPT66A'  TO WS-MESSAGE.

           MOVE WS-TO-UNIT-NBR         TO OP66-UNIT-NBR.
           MOVE WS-NBR-BILLS           TO OP66-NBR-BILLS.
           MOVE WS-LOADED-WT           TO OP66-LOADED-WT.
           MOVE WS-HANDLE-WT           TO OP66-HANDLE-WT.
           MOVE WS-OLDEST-BILL-DUE-DT  TO OP66-OLDEST-BILL-DUE-DT.
           MOVE WS-HEADLOAD            TO OP66-HEADLOAD.
           MOVE WS-BIG-BILL-COUNT      TO OP66-BIG-BILL-COUNT.
           MOVE SCA-PASSWORD           TO OP66-USERID.

           EXEC SQL
                SET :OP66-CHG-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           MOVE WS-TO-CHG-TIMESTAMP    TO WS-CHG-TIMESTAMP.

       4440-EXIT. EXIT.

       4445-SET-UP-TO-WMOPT68A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN INSERT TO
      ***  THE WMOPT68A TABLE WHEN A TRANSFER TO   A TRLR IS DONE.
      ************************************************************

           MOVE '4445-SET-UP-TO-WMOPT68A'  TO WS-MESSAGE.

           MOVE WS-TO-OP68-UNIT-NBR         TO OP68-UNIT-NBR.
           MOVE WS-TO-OP68-UNIT-STATUS      TO OP68-UNIT-STATUS.
           MOVE WS-NBR-BILLS                TO OP68-NBR-BILLS.
           MOVE WS-LOADED-WT                TO OP68-LOADED-WT.
           MOVE WS-HANDLE-WT                TO OP68-HANDLE-WT.
           MOVE WS-OLDEST-BILL-DUE-DT       TO OP68-OLDEST-BILL-DUE-DT.
           MOVE WS-HEADLOAD                 TO OP68-HEADLOAD.
           MOVE WS-BIG-BILL-COUNT           TO OP68-BIG-BILL-COUNT.
           MOVE OP66-CHG-TIMESTAMP          TO OP68-CHG-TIMESTAMP.
           MOVE SCA-PASSWORD                TO OP68-USERID.

           MOVE WS-TO-OP68-STATUS-TIMESTAMP TO OP68-STATUS-TIMESTAMP.
           MOVE WS-TO-OP68-UNIT-TYP         TO OP68-UNIT-TYP.
           MOVE WS-TO-OP68-CURR-LOC         TO OP68-CURR-LOC.
           MOVE WS-TO-OP68-TRAP-FLAG        TO OP68-TRAP-FLAG.
           MOVE WS-TO-OP68-SPEC-INST        TO OP68-SPEC-INST.
           MOVE WS-TO-OP68-MFST-NBR         TO OP68-MFST-NBR.
           MOVE WS-TO-OP68-MFST-TYP         TO OP68-MFST-TYP.
           MOVE WS-TO-OP68-MFST-PRINTED     TO OP68-MFST-PRINTED.
           MOVE WS-TO-OP68-SPEC-FLAG        TO OP68-SPEC-FLAG.
           MOVE WS-TO-OP68-TRACTOR-NBR      TO OP68-TRACTOR-NBR.
           MOVE WS-TO-OP68-TRIP-ORIG        TO OP68-TRIP-ORIG.
           MOVE WS-TO-OP68-TRIP-NBR         TO OP68-TRIP-NBR.
           MOVE WS-TO-OP68-CUBE-PCT         TO OP68-CUBE-PCT.
           MOVE WS-TO-OP68-ORIG-TERM        TO OP68-ORIG-TERM.
           MOVE WS-TO-OP68-DEST-TERM        TO OP68-DEST-TERM.
           MOVE WS-TO-OP68-TFL-TIMESTAMP    TO OP68-TFL-TIMESTAMP.
           MOVE WS-TO-OP68-SEAL-NBR         TO OP68-SEAL-NBR.
           MOVE WS-TO-OP68-RAIL-NAME        TO OP68-RAIL-NAME.
           MOVE WS-TO-OP68-DP-RECM-DOOR     TO OP68-DP-RECM-DOOR.
           MOVE WS-TO-OP68-DP-RECM-TIME     TO OP68-DP-RECM-TIME.
           MOVE WS-TO-OP68-DP-LOCK          TO OP68-DP-LOCK.
           MOVE WS-TO-OP68-ALT-STATUS       TO OP68-ALT-STATUS.
           MOVE WS-TO-OP68-ALT-STATUS-TS    TO OP68-ALT-STATUS-TS.
           MOVE WS-TO-OP68-ALT-STATUS-COMM  TO OP68-ALT-STATUS-COMM.
           MOVE WS-TO-OP68-TRIP-DEST        TO OP68-TRIP-DEST.
           MOVE WS-TO-OP68-RAIL-DEST        TO OP68-RAIL-DEST.
           MOVE WS-TO-OP68-MFST-HISTORY     TO OP68-MFST-HISTORY.
           MOVE WS-TO-OP68-EXCP-SEAL-NBR    TO OP68-EXCP-SEAL-NBR.
           MOVE WS-TO-OP68-EXCP-FLAG        TO OP68-EXCP-FLAG.
           MOVE WS-TO-OP68-TSL-TIMESTAMP    TO OP68-TSL-TIMESTAMP.

       4445-EXIT. EXIT.

       4450-SET-UP-TRLR-WMOPT77A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN UPDATE TO
      ***  THE WMOPT77A TABLE WHEN A TRANSFER TO A TRLR IS DONE.
      ************************************************************

           MOVE '4450-SET-UP-TRLR-WMOPT77A'  TO WS-MESSAGE.

           MOVE 'T'                TO OP77-PRO-LOC-CD.
           MOVE LK-TOTRLR          TO OP77-UNIT-NBR.
           MOVE SPACES             TO OP77-DOCK.
           MOVE SPACES             TO OP77-TRM-ID.
           MOVE SPACES             TO OP77-DOCK-PRINTED.
           MOVE SCA-PASSWORD       TO OP77-USERID.

           EXEC SQL
                SET :OP77-CHG-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           MOVE WS-PRO-PRO-NBR     TO OP77-PRO-NBR.
           MOVE WS-PRO-PRO-SUF     TO OP77-PRO-SUF.

       4450-EXIT. EXIT.

       4460-SET-UP-DOCK-WMOPT77A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE THE VALUES FOR AN UPDATE TO
      ***  THE WMOPT77A TABLE WHEN A TRANSFER TO A DOCK IS DONE.
      ************************************************************

           MOVE '4460-SET-UP-TRLR-WMOPT77A'  TO WS-MESSAGE.

           MOVE 'D'                TO OP77-PRO-LOC-CD.
           MOVE WS-PRO-DOCK        TO OP77-DOCK.
           MOVE SPACES             TO OP77-UNIT-NBR
           MOVE WS-PRO-TRM-ID      TO OP77-TRM-ID.
           MOVE SCA-PASSWORD       TO OP77-USERID.

           EXEC SQL
                SET :OP77-CHG-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           MOVE WS-PRO-PRO-NBR     TO OP77-PRO-NBR.
           MOVE WS-PRO-PRO-SUF     TO OP77-PRO-SUF.

       4460-EXIT. EXIT.

       4470-SET-UP-WMOPT84A.
      ************************************************************
      ***  THIS ROUTINE WILL SET THE VALUES FOR AN INSERT TO
      ***  THE WMOPT84A TABLE TO CREATE AN 'UP' EXTRACT RECORD.
      ***  'UP' EXTRACTS ARE CREATED FOR ALL TRANSFERS FROM/TO.
      ***  DOCKS AND TRAILERS.
      ************************************************************

           MOVE '4470-SET-UP-WMOPT84A'  TO WS-MESSAGE.

           MOVE WS-PRO-PRO-NBR       TO OP84-PRO-NBR.
           MOVE WS-PRO-PRO-SUF       TO OP84-PRO-SUF.
           MOVE WS-TRANS-FROM        TO OP84-UNIT-NBR-FROM.
           MOVE WS-TRANS-TO          TO OP84-UNIT-NBR-TO.
           MOVE TF-LANEB OF WMBIT11A TO OP84-DEST-TERM.
           MOVE TFMSACA-OPER-TRMID   TO OP84-TRAN-TERM.
           MOVE WS-TRANS-FROM-TYPE   TO OP84-UNIT-TYP-FROM.
           MOVE WS-TRANS-TO-TYPE     TO OP84-UNIT-TYP-TO.
           MOVE WS-TO-CURR-LOC       TO OP84-TO-DISP-LOC.
           MOVE SCA-PASSWORD         TO OP84-USERID.

           EXEC SQL
                SET :WS-CURRENT-TIMESTAMP = CURRENT TIMESTAMP
           END-EXEC.

           MOVE WS-CURRENT-TIMESTAMP       TO OP84-EXTRACT-TS.

           MOVE WS-CURRENT-TIMESTAMP(1:10) TO OP84-ENTER-DATE
                                              OP84-TRAN-DATE.

           MOVE WS-CURRENT-TIMESTAMP(12:8) TO OP84-ENTER-TIME
                                              OP84-TRAN-TIME.

       4470-EXIT. EXIT.

       5000-BUILD-N-DISPLAY-MAP.
      *-----------------------
      ************************************************************
      ***  MOVE DATA FROM COMMON AREA TO MAP
      ***  FOR FIRST TIME PROCESSING AND CLEAR
      ************************************************************

           MOVE '5000-BUILD-N-DISPLAY-MAP' TO WS-MESSAGE.

           PERFORM 5100-SCREEN-INITIALIZATION THRU 5100-EXIT.

           MOVE -1 TO FROMTRML.
           MOVE ATTR-UADX TO FROMTRMA.
           MOVE ALL '_'   TO NXTSCRNO
                             FROMTRMO
                             TOTRMO
                             FROMTRLO
                             FROMDCKO
                             TOTRLRO
                             TODCKO
                             ALLO
                             XPROO
                             DSTO
                             XDSTO
                             ORGO
                             XORGO.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
              UNTIL WS-SCRN > WS-MAX-SCRN-LINES
                  MOVE ALL '_'   TO PNL-PROO(WS-SCRN)
                                    PNL-REASONO(WS-SCRN)
                  MOVE ALL SPACES TO PNL-ERRORO(WS-SCRN)
           END-PERFORM.

       5000-EXIT.  EXIT.

       5010-SET-ATTR-FOR-CLEAR.
      *-----------------------
      ************************************************************
      ***  MOVE ATTR-UADX TO ALL FIELDS ON A PF12 CLEAR
      ************************************************************

           MOVE '5010-SET-ATTR-FOR-CLEAR'  TO WS-MESSAGE.

           MOVE ATTR-UADM TO NXTSCRNA.

           MOVE ATTR-UADX TO FROMTRMA
                             TOTRMA
                             FROMTRLA
                             FROMDCKA
                             TOTRLRA
                             TODCKA
                             ALLA
                             XPROA
                             DSTA
                             XDSTA
                             ORGA
                             XORGA.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
              UNTIL WS-SCRN > WS-MAX-SCRN-LINES
                  MOVE ATTR-UADX TO PNL-PROA(WS-SCRN)
                                    PNL-REASONA(WS-SCRN)
                  MOVE ATTR-PADX TO PNL-ERRORA(WS-SCRN)
           END-PERFORM.

       5010-EXIT.  EXIT.

       5100-SCREEN-INITIALIZATION.
      *-----------------------
      ***
      ***  FILL IN DATE & TIME, CLEAR MESSAGE LINE
      ***  AND SET DEFAULT ATTRIBUTES
      ***

           MOVE '5100-SCREEN-INITIALIZATION' TO WS-MESSAGE.

           MOVE SCA-CURRENT-DATE-DISP   TO MSKDATEO.
           MOVE SCA-CURRENT-TIME        TO MSKTIMEO.
           MOVE SPACE                   TO ERRLINEO.

           IF TFMSACA-CMPNY NOT = SPACES
              MOVE TFMSACA-CMPNY        TO CMPNYO
           END-IF.

           IF TFMSACA-OPER-TRMID NOT = SPACES
              MOVE TFMSACA-OPER-TRMID   TO TERMIDO
           ELSE
              MOVE SCA-OPERATOR-TERMLOC TO TFMSACA-OPER-TRMID
                                           TERMIDO
           END-IF.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
              UNTIL WS-SCRN > WS-MAX-SCRN-LINES
                  MOVE SPACES    TO PNL-ERRORO(WS-SCRN)
                  MOVE ATTR-PADX TO PNL-ERRORA(WS-SCRN)
           END-PERFORM.

       5100-EXIT.  EXIT.

       5200-CHECK-FOR-EOF.
      *-----------------------
      ***
      ***  WHEN RETURNING FROM SCREEN CHECK FOR INPUT
      ***  ENTRIES.
      ************************************************************

           MOVE '5200-CHECK-FOR-EOF     '    TO WS-MESSAGE.

           IF FROMTRML > ZERO
              MOVE FROMTRMI  TO LK-FROMTRM
              MOVE ATTR-UADX TO FROMTRMA
              IF FROMTRMI NOT > SPACES
                 MOVE ALL '_' TO FROMTRMO
              END-IF
           ELSE
              IF FROMTRMA = DFHBMEOF
                 MOVE ALL ' '   TO LK-FROMTRM
                 MOVE ATTR-UADX TO FROMTRMA
                 MOVE ALL '_'   TO FROMTRMO
              END-IF
           END-IF.

           IF TOTRML > ZERO
              MOVE TOTRMI  TO LK-TOTRM
              MOVE ATTR-UADX TO TOTRMA
              IF TOTRMI NOT > SPACES
                 MOVE ALL '_' TO TOTRMO
              END-IF
           ELSE
              IF TOTRMA = DFHBMEOF
                 MOVE ALL ' '   TO LK-TOTRM
                 MOVE ATTR-UADX TO TOTRMA
                 MOVE ALL '_'   TO TOTRMO
              END-IF
           END-IF.

           IF FROMTRLL > ZERO
              MOVE FROMTRLI  TO LK-FROMTRLR
              MOVE ATTR-UADX TO FROMTRLA
              IF FROMTRLI NOT > SPACES
                 MOVE ALL '_' TO FROMTRLO
              END-IF
           ELSE
              IF FROMTRLA = DFHBMEOF
                 MOVE ALL ' '   TO LK-FROMTRLR
                 MOVE ATTR-UADX TO FROMTRLA
                 MOVE ALL '_'   TO FROMTRLO
              END-IF
           END-IF.

           IF TOTRLRL > ZERO
              MOVE TOTRLRI  TO LK-TOTRLR
              MOVE ATTR-UADX TO TOTRLRA
              IF TOTRLRI NOT > SPACES
                 MOVE ALL '_' TO TOTRLRO
              END-IF
           ELSE
              IF TOTRLRA = DFHBMEOF
                 MOVE ALL ' '   TO LK-TOTRLR
                 MOVE ATTR-UADX TO TOTRLRA
                 MOVE ALL '_'   TO TOTRLRO
              END-IF
           END-IF.

           IF FROMDCKL > ZERO
              MOVE FROMDCKI TO LK-FROMDOCK
              MOVE ATTR-UADX TO FROMDCKA
              IF FROMDCKI NOT > SPACES
                 MOVE ALL '_' TO FROMDCKO
              END-IF
           ELSE
              IF FROMDCKA = DFHBMEOF
                 MOVE ALL ' '   TO LK-FROMDOCK
                 MOVE ATTR-UADX TO FROMDCKA
                 MOVE ALL '_'   TO FROMDCKO
              END-IF
           END-IF.

           IF TODCKL > ZERO
              MOVE TODCKI TO LK-TODOCK
              MOVE ATTR-UADX TO TODCKA
              IF TODCKI NOT > SPACES
                 MOVE ALL '_' TO TODCKO
              END-IF
           ELSE
              IF TODCKA = DFHBMEOF
                 MOVE ALL ' '   TO LK-TODOCK
                 MOVE ATTR-UADX TO TODCKA
                 MOVE ALL '_'   TO TODCKO
              END-IF
           END-IF.

           IF ALLL > ZERO
              MOVE ALLI TO LK-ALL
              MOVE ATTR-UADX TO ALLA
              IF ALLI NOT > SPACES
                 MOVE ALL '_' TO ALLO
              END-IF
           ELSE
              IF ALLA = DFHBMEOF
                 MOVE ALL ' '   TO LK-ALL
                 MOVE ATTR-UADX TO ALLA
                 MOVE ALL '_'   TO ALLO
              END-IF
           END-IF.

           IF XPROL > ZERO
              MOVE XPROI TO LK-XPRO
              MOVE ATTR-UADX TO XPROA
              IF XPROI NOT > SPACES
                 MOVE ALL '_' TO XPROO
              END-IF
           ELSE
              IF XPROA = DFHBMEOF
                 MOVE ALL ' '   TO LK-XPRO
                 MOVE ATTR-UADX TO XPROA
                 MOVE ALL '_'   TO XPROO
              END-IF
           END-IF.

           IF DSTL > ZERO
              MOVE DSTI TO LK-DST
              MOVE ATTR-UADX TO DSTA
              IF DSTI NOT > SPACES
                 MOVE ALL '_' TO DSTO
              END-IF
           ELSE
              IF DSTA = DFHBMEOF
                 MOVE ALL ' '   TO LK-DST
                 MOVE ATTR-UADX TO DSTA
                 MOVE ALL '_'   TO DSTO
              END-IF
           END-IF.

           IF XDSTL > ZERO
              MOVE XDSTI TO LK-XDST
              MOVE ATTR-UADX TO XDSTA
              IF XDSTI NOT > SPACES
                 MOVE ALL '_' TO XDSTO
              END-IF
           ELSE
              IF XDSTA = DFHBMEOF
                 MOVE ALL ' '   TO LK-XDST
                 MOVE ATTR-UADX TO XDSTA
                 MOVE ALL '_'   TO XDSTO
              END-IF
           END-IF.

           IF ORGL > ZERO
              MOVE ORGI TO LK-ORG
              MOVE ATTR-UADX TO ORGA
              IF ORGI NOT > SPACES
                 MOVE ALL '_' TO ORGO
              END-IF
           ELSE
              IF ORGA = DFHBMEOF
                 MOVE ALL ' '   TO LK-ORG
                 MOVE ATTR-UADX TO ORGA
                 MOVE ALL '_'   TO ORGO
              END-IF
           END-IF.

           IF XORGL > ZERO
              MOVE XORGI TO LK-XORG
              MOVE ATTR-UADX TO XORGA
              IF XORGI NOT > SPACES
                 MOVE ALL '_' TO XORGO
              END-IF
           ELSE
              IF XORGA = DFHBMEOF
                 MOVE ALL ' '   TO LK-XORG
                 MOVE ATTR-UADX TO XORGA
                 MOVE ALL '_'   TO XORGO
              END-IF
           END-IF.

           MOVE +1 TO WS-SCRN.
           MOVE +1 TO WS-LNK.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
               UNTIL WS-SCRN > WS-MAX-SCRN-LINES

                   IF PNL-PROL(WS-SCRN) > ZERO
                      MOVE PNL-PROI(WS-SCRN) TO LK-PRO(WS-LNK)
                      PERFORM 5210-FORMAT-PRO THRU 5210-EXIT
                      IF PNL-PROI(WS-SCRN) NOT > SPACES
                         MOVE ATTR-UADX   TO PNL-PROA(WS-SCRN)
                         MOVE ALL '_'     TO PNL-PROO(WS-SCRN)
                      END-IF
                   ELSE
                      IF PNL-PROA(WS-SCRN) = DFHBMEOF
                         MOVE ALL SPACES  TO LK-PRO(WS-LNK)
                         MOVE ATTR-UADX   TO PNL-PROA(WS-SCRN)
                         MOVE ALL '_'     TO PNL-PROO(WS-SCRN)
                      END-IF
                   END-IF

                   IF PNL-REASONL(WS-SCRN) > ZERO
                      MOVE PNL-REASONI(WS-SCRN) TO LK-REASON(WS-LNK)
                      IF PNL-REASONI(WS-SCRN) NOT > SPACES
                         MOVE ATTR-UADX   TO PNL-REASONA(WS-SCRN)
                         MOVE ALL '_'     TO PNL-REASONO(WS-SCRN)
                      END-IF
                   ELSE
                      IF PNL-REASONA(WS-SCRN) = DFHBMEOF
                         MOVE ALL SPACES  TO LK-REASON(WS-LNK)
                         MOVE ATTR-UADX   TO PNL-REASONA(WS-SCRN)
                         MOVE ALL '_'     TO PNL-REASONO(WS-SCRN)
                      END-IF
                   END-IF

                   ADD 1 TO WS-LNK

            END-PERFORM.

       5200-EXIT.  EXIT.

      *****************************************************************
      *THIS PARAGRAPH WILL CHECK THE PRO ENTRIES AND FORMAT THE
      *PRO AS FOLLOWS: ATL-853810-SA IF THE FULL PRO WAS ENTERED
      *                ATL-853810-A  IF THE FULL PRO AND ONE SUFFIX
      *                ATL-853810    IF A PRO HAS NO SUFFIX
      ***************************************************************

       5210-FORMAT-PRO.
      *--------------------------

           MOVE '5210-FORMAT-PRO'    TO WS-MESSAGE.

           MOVE SPACES         TO WS-WORK-PRO
           MOVE SPACES         TO WS-SHIFT-FIELDS
           MOVE LK-PRO(WS-LNK) TO WS-WORK-PRO.
           MOVE ZEROS TO WS-COUNTER.
           INSPECT LK-PRO(WS-LNK) TALLYING WS-COUNTER
              FOR ALL '-'.

           IF WS-COUNTER = 2
      *****EX. PRO ATL-853810-A OR ATL-853810-SA               ********
              MOVE SPACES TO WS-WORK-PRO
              GO TO 5210-EXIT
           END-IF.

           IF WS-COUNTER = 0
      *****EX. PRO ATL853810A  OR ATL853810SA  OR ATL853810   ********
              MOVE WS-WORK-PRO(1:3)     TO WS-SHIFT-FIELDS(1:3)
              MOVE '-'                  TO WS-SHIFT-FIELDS(4:1)
              MOVE WS-WORK-PRO(4:6)     TO WS-SHIFT-FIELDS(5:6)
              IF WS-WORK-PRO(10:1) > SPACES
                 MOVE '-'                  TO WS-SHIFT-FIELDS(11:1)
                 MOVE WS-WORK-PRO(10:2)    TO WS-SHIFT-FIELDS(12:2)
              END-IF
              MOVE WS-SHIFT-FIELDS      TO LK-PRO(WS-LNK)
           END-IF.

           IF WS-COUNTER = 1
      *****EX. PRO ATL-853810A OR ATL-853810SA OR ATL-853810  ********
      ******** OR ATL853810-A OR ATL853810-AB                 ********
              MOVE WS-WORK-PRO(1:3)     TO WS-SHIFT-FIELDS(1:3)
              MOVE '-'                  TO WS-SHIFT-FIELDS(4:1)
              IF WS-WORK-PRO(4:1) = '-'
                 MOVE WS-WORK-PRO(5:6)  TO WS-SHIFT-FIELDS(5:6)
              ELSE
                 MOVE WS-WORK-PRO(4:6)  TO WS-SHIFT-FIELDS(5:6)
              END-IF
              IF WS-WORK-PRO(10:1) = '-'
                 MOVE '-'               TO WS-SHIFT-FIELDS(11:1)
                 MOVE WS-WORK-PRO(11:2) TO WS-SHIFT-FIELDS(12:2)
              ELSE
                 IF WS-WORK-PRO(10:1) NUMERIC
                    IF WS-WORK-PRO(11:1) > SPACES
                    MOVE '-'               TO WS-SHIFT-FIELDS(11:1)
                    MOVE WS-WORK-PRO(11:2) TO WS-SHIFT-FIELDS(12:2)
              END-IF
              MOVE WS-SHIFT-FIELDS      TO LK-PRO(WS-LNK)
           END-IF.

       5210-EXIT.  EXIT.


      *****************************************************************
      *THIS WILL EXEC THE SELECT FOR THE WMOPT077 PRO LOC TABLE
      ***************************************************************

       6000-SELECT-PRO-LOC.
      *--------------------------

           MOVE '6000-SELEC-PRO-LOC' TO WS-MESSAGE.

           EXEC SQL
                SELECT PRO_LOC_CD,
                       UNIT_NBR,
                       DOCK,
                       TRM_ID
                  INTO :OP77-PRO-LOC-CD,
                       :OP77-UNIT-NBR,
                       :OP77-DOCK,
                       :OP77-TRM-ID
                FROM WMOPT77A
               WHERE CMPNY   = :OP77-CMPNY
                 AND PRO_NBR = :OP77-PRO-NBR
                 AND PRO_SUF = :OP77-PRO-SUF
               WITH UR
           END-EXEC.

           IF SQLCODE = +0 OR
              SQLCODE = +100
              CONTINUE
           ELSE
              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT
           END-IF.

           IF SQLCODE = +100
              MOVE WS-ER-INVLD-PRO TO WS-ERR-MESSAGE
           END-IF.

       6000-EXIT.  EXIT.

      *****************************************************************
      *THIS WILL EXEC THE SELECT FOR THE WMOPT066 CURRENT EQUIP ROW
      ***************************************************************

       6010-SELECT-OP66-UNIT.
      *--------------------------

           MOVE '6010-SELEC-TRLR-INFO' TO WS-MESSAGE.

           EXEC SQL
                SELECT UNIT_STATUS,
                       UNIT_TYP,
                       CURR_LOC,
                       MFST_TYP,
                       MFST_NBR,
                       NBR_BILLS,
                       LOADED_WT,
                       HANDLE_WT,
                       OLDEST_BILL_DUE_DT,
                       ORIG_TERM,
                       DEST_TERM,
                       HEADLOAD,
                       MFST_HISTORY,
                       CHG_TIMESTAMP,
                       STATUS_TIMESTAMP,
                       TRAP_FLAG,
                       SPEC_INST,
                       MFST_PRINTED,
                       SPEC_FLAG,
                       TRACTOR_NBR,
                       TRIP_ORIG,
                       TRIP_NBR,
                       CUBE_PCT,
                       TFL_TIMESTAMP,
                       SEAL_NBR,
                       RAIL_NAME,
                       DP_RECM_DOOR,
                       DP_RECM_TIME,
                       DP_LOCK,
                       ALT_STATUS,
                       ALT_STATUS_TS,
                       ALT_STATUS_COMM,
                       TRIP_DEST,
                       RAIL_DEST,
                       MFST_HISTORY,
                       EXCP_SEAL_NBR,
                       EXCP_FLAG,
                       BIG_BILL_COUNT,
                       TSL_TIMESTAMP
                  INTO :OP66-UNIT-STATUS,
                       :OP66-UNIT-TYP,
                       :OP66-CURR-LOC,
                       :OP66-MFST-TYP,
                       :OP66-MFST-NBR,
                       :OP66-NBR-BILLS,
                       :OP66-LOADED-WT,
                       :OP66-HANDLE-WT,
                       :OP66-OLDEST-BILL-DUE-DT,
                       :OP66-ORIG-TERM,
                       :OP66-DEST-TERM,
                       :OP66-HEADLOAD,
                       :OP66-MFST-HISTORY,
                       :OP66-CHG-TIMESTAMP,
                       :OP66-STATUS-TIMESTAMP,
                       :OP66-TRAP-FLAG,
                       :OP66-SPEC-INST,
                       :OP66-MFST-PRINTED,
                       :OP66-SPEC-FLAG,
                       :OP66-TRACTOR-NBR,
                       :OP66-TRIP-ORIG,
                       :OP66-TRIP-NBR,
                       :OP66-CUBE-PCT,
                       :OP66-TFL-TIMESTAMP,
                       :OP66-SEAL-NBR,
                       :OP66-RAIL-NAME,
                       :OP66-DP-RECM-DOOR,
                       :OP66-DP-RECM-TIME,
                       :OP66-DP-LOCK,
                       :OP66-ALT-STATUS,
                       :OP66-ALT-STATUS-TS,
                       :OP66-ALT-STATUS-COMM,
                       :OP66-TRIP-DEST,
                       :OP66-RAIL-DEST,
                       :OP66-MFST-HISTORY,
                       :OP66-EXCP-SEAL-NBR,
                       :OP66-EXCP-FLAG,
                       :OP66-BIG-BILL-COUNT,
                       :OP66-TSL-TIMESTAMP
                FROM WMOPT66A
               WHERE CMPNY    = :OP66-CMPNY
                 AND UNIT_NBR = :OP66-UNIT-NBR
               WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6010-EXIT.  EXIT.


      *****************************************************************
      *THIS WILL EXEC THE SELECT FOR THE WMOPT068 EQUIPMENT HISTORY
      ***************************************************************
       6015-SELECT-OP68-UNIT.
      *--------------------------

           MOVE '6015-SELECT-OP68-UNIT' TO WS-MESSAGE.

           MOVE OP66-CHG-TIMESTAMP TO OP68-CHG-TIMESTAMP.

           EXEC SQL
                SELECT *
                  INTO :OP68-WMOPT68A
                  FROM WMOPT68A
               WHERE CMPNY    = :OP68-CMPNY
                 AND UNIT_NBR = :OP68-UNIT-NBR
                 AND CHG_TIMESTAMP = :OP68-CHG-TIMESTAMP
               WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6015-EXIT.  EXIT.

      *****************************************************************
      *THIS WILL EXEC THE SELECT FOR THE HEAD LOAD FLAG FROM THE
      *WMOPT12A LOADING MANIFEST TABLE
      ***************************************************************

       6020-SELECT-PRO-HEADLOAD-FL.
      *--------------------------

           MOVE '6020-SELECT-HEAD-FLAG' TO WS-MESSAGE.

           EXEC SQL
                SELECT HL_FLAG
                  INTO :OP12-HL-FLAG
                FROM WMOPT12A
               WHERE CMPNY    = :OP12-CMPNY
                 AND MFST_NBR = :OP12-MFST-NBR
                 AND PRO_NBR  = :OP12-PRO-NBR
                 AND PRO_SUF  = :OP12-PRO-SUF
               WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6020-EXIT.  EXIT.

      *****************************************************************
      *THIS WILL EXEC THE SELECT TO SEE IF A HEAD LOAD FLAG EXIST FOR
      *UNIT ON THE WMOPT12 LOADING TABLE
      ***************************************************************

       6030-SELECT-REMAIN-HL.
      *--------------------------
      *****************************************************************
      *THIS WILL EXEC THE SELECT TO SEE ANY REMAINING PROS ON THE
      *UNIT ARE HEADLOAD PROS.
      ***************************************************************

           MOVE '6030-SELECT-REMAIN-HL'       TO WS-MESSAGE.

           EXEC SQL
                SELECT 'HL-FLAG'
                  INTO :WS-DUMMY-HV
                FROM WMOPT77A A, WMOPT12A B
               WHERE A.CMPNY    = :OP77-CMPNY
                 AND B.CMPNY    = A.CMPNY
                 AND B.MFST_NBR = :OP12-MFST-NBR
                 AND A.UNIT_NBR = :OP77-UNIT-NBR
                 AND B.UNIT_NBR = A.UNIT_NBR
                 AND HL_FLAG  = 'Y'
                 WITH UR
           END-EXEC.

           IF SQLCODE = +0 OR
              SQLCODE = +100 OR
              SQLCODE = -811
              CONTINUE
           ELSE
              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT
           END-IF.

           IF SQLCODE = +0 OR
              SQLCODE = -811
              CONTINUE
           ELSE
              MOVE 'Y' TO WS-LAST-HL
           END-IF.

       6030-EXIT.  EXIT.


      *****************************************************************
      *THIS WILL EXEC THE SELECT THE WT AND DUE DATE FROM THE WMBIT11A
      *TABLE FOR EACH PRO BEING PROCESSED
      ***************************************************************

       6040-SELECT-PRO-WT-DUE.
      *--------------------------

           MOVE '6040-SELECT-PRO-WT-DUE'      TO WS-MESSAGE.

           EXEC SQL
                SELECT TF_LANEA
                     , TF_LANEB
                     , TF_WT
                     , TF_DELDT
                  INTO :WMBIT11A.TF-LANEA
                     , :WMBIT11A.TF-LANEB
                     , :WMBIT11A.TF-WT
                     , :WMBIT11A.TF-DELDT
                FROM WMBIT11A
               WHERE TF_CMPNY   = :WMBIT11A.TF-CMPNY
                 AND TF_PRO     = :WMBIT11A.TF-PRO
                 AND TF_SUF     = :WMBIT11A.TF-SUF
               WITH UR
           END-EXEC.

CH0007     PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +0
CH0007***     MOVE TF-WT OF WMBIT11A TO WS-BILL-DUE-DT
CH0007        MOVE TF-DELDT OF WMBIT11A TO WS-BILL-DUE-DT
           ELSE
              IF SQLCODE = +100
                 MOVE 'Y' TO WS-PRO-DATA-NOTFND
              END-IF
           END-IF.

       6040-EXIT.  EXIT.

      *****************************************************************
      *THIS WILL EXEC THE SELECT THE PRO ORIG AND DEST FROM THE
      *WMBIT11A TABLE
      ***************************************************************

       6050-SELECT-ORG-DEST.
      *--------------------------

           MOVE '6050-SELECT-ORIG-DEST'       TO WS-MESSAGE.

           EXEC SQL
                SELECT TF_LANEA,
                       TF_LANEB
                  INTO :WMBIT11A.TF-LANEA,
                       :WMBIT11A.TF-LANEB
                FROM WMBIT11A
               WHERE TF_CMPNY   = :WMBIT11A.TF-CMPNY
                 AND TF_PRO     = :WMBIT11A.TF-PRO
                 AND TF_SUF     = :WMBIT11A.TF-SUF
               WITH UR
           END-EXEC.

CH0007     PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6050-EXIT.  EXIT.

       6060-SELECT-PD-FLAG.
      *****************************************************
      *** SELECTS FROM THE WMFMT36A TABLE FOR P&D FLAG
      *** WHEN THE TF-PDFG IS EQUAL 'Y'  THEN THE
      *** TERMINAL IS A VALID P&D TERMINAL
      ******************************************************

           MOVE '6060-SELECT-PD-FLAG      ' TO WS-MESSAGE.

           MOVE TFMSACA-CMPNY   TO TF-CMPNY OF WMFMT36A.

           EXEC SQL
                SELECT 'PDTERM'
                INTO   :WS-DUMMY-HV
                FROM    WMFMT36A
                WHERE TF_CMPNY  = :WMFMT36A.TF-CMPNY
                  AND TF_TRMID  = :WMFMT36A.TF-TRMID
                  AND TF_PDFG   = 'Y'
CH0005            AND TF_OWNER  = 'C'
                WITH UR
           END-EXEC.

            PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

            IF SQLCODE = 0
               CONTINUE
            ELSE
               MOVE 'Y' TO WS-INVLD-PD-TERM
            END-IF.

       6060-EXIT.  EXIT.

CH0004 6061-SELECT-RELAY-FLAG.
CH0004*****************************************************
CH0004*** SELECTS FROM THE WMFMT36A TABLE FOR  RELAY FLAG
CH0004*** WHEN THE TF-RELFG IS EQUAL 'Y'   THEN THE
CH0004*** TERMINAL IS A VALID  RELAY POINT.
CH0004******************************************************

CH0004     MOVE '6061-SELECT-RELAY-FLAG      ' TO WS-MESSAGE.

CH0004     MOVE TFMSACA-CMPNY   TO TF-CMPNY OF WMFMT36A.

CH0004     EXEC SQL
CH0004          SELECT 'PDTERM'
CH0004          INTO   :WS-DUMMY-HV
CH0004          FROM    WMFMT36A
CH0004          WHERE TF_CMPNY  = :WMFMT36A.TF-CMPNY
CH0004            AND TF_TRMID  = :WMFMT36A.TF-TRMID
CH0004            AND TF_RELFG   = 'Y'
                WITH UR
CH0004     END-EXEC.


CH0007      PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

CH0004      IF SQLCODE = 0
CH0004         CONTINUE
CH0004      ELSE
CH0004         MOVE 'Y' TO WS-INVLD-RL-TERM
CH0004      END-IF.

CH0004 6061-EXIT.  EXIT.

       6070-SELECT-UNIT-EXIST.
      *****************************************************
      *** SELECTS FROM THE WMOPT51A TABLE FOR A VALID
      *** TRLR.
      ******************************************************

           MOVE '6070-SELECT-UNIT-EXIST'    TO WS-MESSAGE.

           EXEC SQL
                SELECT 'UNIT'
                INTO   :WS-DUMMY-HV
                FROM    WMOPT51A
                WHERE CMPNY    = :OP51-CMPNY
                  AND UNIT_NBR = :OP51-UNIT-NBR
                WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +100
              MOVE 'Y' TO WS-INVLD-TRLR
           END-IF.

       6070-EXIT.  EXIT.


       6071-SELECT-UNIT-TYPE.
      *****************************************************
      *** SELECTS FROM THE WMOPT66A TABLE FOR A UNIT TYPE
      *** (UNIT TYPE TLR OR TRK)
      ******************************************************

           MOVE '6071-SELECT-UNIT-TYPE'     TO WS-MESSAGE.

           EXEC SQL
                SELECT UNIT_TYP
                INTO   :OP66-UNIT-TYP
                FROM    WMOPT66A
                WHERE CMPNY    = :OP66-CMPNY
                  AND UNIT_NBR = :OP66-UNIT-NBR
                WITH UR
           END-EXEC.

CH0007     PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +0
              IF OP66-UNIT-TYP = 'TLR' OR
                 OP66-UNIT-TYP = 'TRK' OR
                 OP66-UNIT-TYP = 'AIR'
                 CONTINUE
              ELSE
                 MOVE 'Y' TO WS-INVLD-TRLR
              END-IF
           END-IF.

           IF SQLCODE = +100
              MOVE 'Y' TO WS-INVLD-TRLR
           END-IF.

       6071-EXIT.  EXIT.

       6080-SELECT-DOCK.
      *****************************************************
      *** SELECTS FROM THE WMFMT27A TABLE FOR DOCKS. THIS
      *** WILL FIRST DETERMINE IF THE DOCK IS A PHYSICAL
      *** DOCK. IF A SQLCODE OF +100 IS RETURNED THEN THIS
      *** ROUTINE WILL CHECK TO SEE IF THE DOCK IS A SPECIAL
      *** DOCK.  IF A SQLCODE OF +100 IS RETURNED FROM THIS
      *** THEN AN INVALID DOCK WAS ENTERED.
      ******************************************************

           MOVE '6080-SELECT-DOCK'          TO WS-MESSAGE.


           EXEC SQL
                SELECT 'DOCK'
                INTO   :WS-DUMMY-HV
                FROM    WMFMT27A
                WHERE TF_CMPNY  = :WMFMT27A.TF-CMPNY
                  AND TF_CTLTYP = 'D'
                  AND TF_RECID  = 'DOCK'
                  AND TF_KEY    = :WMFMT27A.TF-KEY
                WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

            IF SQLCODE = +100
               MOVE WS-DOCK-ID TO TF-KEY OF WMFMT27A
               EXEC SQL
                    SELECT 'DOCK'
                    INTO :WS-DUMMY-HV
                    FROM WMFMT27A
                    WHERE TF_CMPNY   = :WMFMT27A.TF-CMPNY
                      AND TF_CTLTYP  = 'D'
                      AND TF_RECID   = 'SPECDOCK'
                      AND TF_KEY     = :WMFMT27A.TF-KEY
                    WITH UR
               END-EXEC

               PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT

               IF SQLCODE = +100
                  MOVE 'Y' TO WS-INVLD-DOCK
               END-IF
            END-IF.

       6080-EXIT.  EXIT.

       6090-SELECT-PRO.
      *****************************************************
      *** SELECTS FROM THE WMBIT11A TABLE FOR A VALID PRO.
      *** IF THE PRO DOES NOT EXIST ON THE WMBIT11A TABLE
      *** THEN AN INVALID MESSAGE WILL BE DISPLAYED.
      ******************************************************

           MOVE '6090-SELECT-PRO'           TO WS-MESSAGE.

           EXEC SQL
                SELECT 'PRO'
                INTO   :WS-DUMMY-HV
                FROM    WMBIT11A
                WHERE TF_CMPNY  = :WMBIT11A.TF-CMPNY
                  AND TF_PRO    = :WMBIT11A.TF-PRO
                  AND TF_SUF    = :WMBIT11A.TF-SUF
                WITH UR
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +100
              MOVE WS-ER-INVLD-PRO TO WS-ERR-MESSAGE
           END-IF.

       6090-EXIT.  EXIT.

       6100-OPEN-PRO-ALL.
      *****************************************************
      *** OPENS A CURSOR FOR ALL PROS ON A UNIT BY READING
      *** THE WMOPT77A TABLE FOR PRO-LOC-CD OF 'T'
      *** UNIT NBR = LK-FROMTRLR
      ******************************************************

           MOVE '6100-OPEN-PRO-ALL'         TO WS-MESSAGE.

           EXEC SQL
                DECLARE  PRO-ALL  CURSOR FOR
                 SELECT PRO_NBR,
                        PRO_SUF
                FROM    WMOPT77A
                WHERE CMPNY      = :OP77-CMPNY
                  AND PRO_LOC_CD = 'T'
                  AND UNIT_NBR   = :OP77-UNIT-NBR
                FOR FETCH ONLY WITH UR
           END-EXEC.

           EXEC SQL
               OPEN PRO-ALL
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6100-EXIT.  EXIT.

       6110-FETCH-PRO-ALL.
      *****************************************************
      *** FETCHES THE PROS FOR THE FROM UNIT
      ******************************************************

           MOVE '6110-FETCH-PRO-ALL'        TO WS-MESSAGE.

           EXEC SQL
                FETCH PRO-ALL
                INTO   :OP77-PRO-NBR,
                       :OP77-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

            IF SQLCODE = +0
CH0008         IF LK-TOTRLR > SPACES
CH0008           AND OP66-UNIT-TYP = 'AIR'
CH0008            MOVE OP77-PRO-NBR            TO TF-PRO OF WMBIT13A
CH0008            MOVE OP77-PRO-SUF            TO TF-SUF OF WMBIT13A
CH0008            PERFORM 2412-CHECK-PRO-USA   THRU 2412-EXIT
CH0008            IF WS-USA-FOUND-SW = 'N'
CH0008               GO TO 6110-EXIT
CH0008            END-IF
CH0008         END-IF

               ADD +1 TO WS-PRO-COUNT
            END-IF.

            IF SQLCODE = +100
               MOVE 'Y' TO WS-EOF-PRO
            END-IF.

       6110-EXIT.  EXIT.

       6111-CLOSE-PRO-ALL.
      *--------------------------

           MOVE '6111-CLOSE-PRO-ALL'      TO WS-MESSAGE.

           EXEC SQL
                 CLOSE PRO-ALL
           END-EXEC.

       6111-EXIT.  EXIT.

       6120-OPEN-ALL-DOCK-PRO.
      *****************************************************
      *** SELECTS ALL PROS FOR A DOCK FROM THE WMOPT77A TABLE
      ******************************************************

           MOVE '6120-SELECT-ALL-DOCK-PROS' TO WS-MESSAGE.

           EXEC SQL
                DECLARE PRO-DCK     CURSOR FOR
                 SELECT PRO_NBR,
                        PRO_SUF
                FROM    WMOPT77A
                WHERE CMPNY      = :OP77-CMPNY
                  AND PRO_LOC_CD = 'D'
                  AND DOCK       = :OP77-DOCK
                  AND TRM_ID     = :OP77-TRM-ID
                FOR FETCH ONLY WITH UR
           END-EXEC.

           EXEC SQL
               OPEN PRO-DCK
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6120-EXIT.  EXIT.

       6121-FETCH-ALL-DOCK-PRO.
      *****************************************************
      *** FETCHES THE PROS FOR THE FOR THE DOCK
      ******************************************************

           MOVE '6121-FETCH-PRO-DCK-CUR'    TO WS-MESSAGE.

           EXEC SQL
                FETCH PRO-DCK
                INTO   :OP77-PRO-NBR,
                       :OP77-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

            IF SQLCODE = +0
CH0008         IF LK-TOTRLR > SPACES
CH0008           AND OP66-UNIT-TYP = 'AIR'
CH0008            MOVE OP77-PRO-NBR            TO TF-PRO OF WMBIT13A
CH0008            MOVE OP77-PRO-SUF            TO TF-SUF OF WMBIT13A
CH0008            PERFORM 2412-CHECK-PRO-USA   THRU 2412-EXIT
CH0008            IF WS-USA-FOUND-SW = 'N'
CH0008               GO TO 6121-EXIT
CH0008            END-IF
CH0008         END-IF

               ADD +1 TO WS-PRO-COUNT
            END-IF.

            IF SQLCODE = +100
               MOVE 'Y' TO WS-EOF-PRO-DOCK
            END-IF.

       6121-EXIT.  EXIT.

       6122-CLOSE-ALL-DOCK-PRO.
      *--------------------------

           MOVE '6122-CLOSE-DOCK-ALL'         TO WS-MESSAGE.

           EXEC SQL
                 CLOSE PRO-DCK
           END-EXEC.

       6122-EXIT.  EXIT.

       6130-OPEN-LD-MFST-UNIT.
      *****************************************************
      *** SELECTS ALL PROS FOR THE LOADING MFST, AND UNIT NBR
      *** CURSOR WILL BE USED TO REPROCESS UNIT VALUES.
      ******************************************************

           MOVE '6130-SELECT-LD-MFST-UNIT'  TO WS-MESSAGE.

           MOVE TFMSACA-CMPNY TO OP77-CMPNY
                                 OP12-CMPNY.

           EXEC SQL
                DECLARE  LD-MFST-UNIT CURSOR FOR
                 SELECT A.PRO_NBR,
                        A.PRO_SUF,
                        B.HL_FLAG
                FROM  WMOPT77A A, WMOPT12A B
                WHERE A.CMPNY      = :OP77-CMPNY
                  AND B.CMPNY      = A.CMPNY
                  AND A.UNIT_NBR   = :OP77-UNIT-NBR
                  AND B.UNIT_NBR   = A.UNIT_NBR
                  AND A.PRO_LOC_CD = 'T'
                  AND B.MFST_NBR   = :OP12-MFST-NBR
                  AND B.PRO_NBR    = A.PRO_NBR
                  AND B.PRO_SUF    = A.PRO_SUF
                FOR FETCH ONLY WITH UR
           END-EXEC.

           EXEC SQL
               OPEN LD-MFST-UNIT
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6130-EXIT.  EXIT.

       6131-FETCH-LD-MFST-UNIT.
      *****************************************************
      *** FETCHES THE PROS FOR A LOADING MFST AND UNIT
      ******************************************************

           MOVE '6131-FETCH-LD-MFST-UNIT'   TO WS-MESSAGE.

           EXEC SQL
                FETCH LD-MFST-UNIT
                INTO   :OP77-PRO-NBR,
                       :OP77-PRO-SUF,
                       :OP12-HL-FLAG
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +100
              MOVE 'Y' TO WS-EOF-MFST
           END-IF.

       6131-EXIT.  EXIT.

       6132-CLOSE-LD-MFST-UNIT.
      *--------------------------

           MOVE '6132-LD-MFST-UNIT'           TO WS-MESSAGE.

           EXEC SQL
                 CLOSE LD-MFST-UNIT
           END-EXEC.

       6132-EXIT.  EXIT.

       6140-OPEN-DLV-MFST-UNIT.
      *****************************************************
      *** SELECTS ALL PROS FOR DLVY MFST AND UNIT TO BE
      *** USED IN REPROCESS UNIT VALUES
      ******************************************************

           MOVE '6140-SELECT-DLV-MFST-UNIT'   TO WS-MESSAGE.

           MOVE TFMSACA-CMPNY TO OP77-CMPNY
                                 OP14-CMPNY.

           EXEC SQL
                DECLARE  DLV-MFST-UNIT CURSOR FOR
                 SELECT A.PRO_NBR,
                        A.PRO_SUF
                FROM  WMOPT77A A, WMOPT14A B
                WHERE A.CMPNY      = :OP77-CMPNY
                  AND B.CMPNY      = A.CMPNY
                  AND A.UNIT_NBR   = :OP77-UNIT-NBR
                  AND B.UNIT_NBR   = :OP14-UNIT-NBR
                  AND B.UNIT_NBR   = A.UNIT_NBR
                  AND A.PRO_LOC_CD = 'T'
                  AND B.MFST_NBR   = :OP14-MFST-NBR
                  AND B.PRO_NBR    = A.PRO_NBR
                  AND B.PRO_SUF    = A.PRO_SUF
                FOR FETCH ONLY WITH UR
           END-EXEC.

           EXEC SQL
               OPEN DLV-MFST-UNIT
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6140-EXIT.  EXIT.

       6141-FETCH-DLV-MFST-UNIT.
      *****************************************************
      *** FETCHES THE MFST-UNIT CURSOR
      ******************************************************

           MOVE '6141-FETCH-OLD-DT-CUR-OP14'    TO WS-MESSAGE.

           EXEC SQL
                FETCH DLV-MFST-UNIT
                INTO   :OP77-PRO-NBR,
                       :OP77-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

           IF SQLCODE = +100
              MOVE 'Y' TO WS-EOF-MFST
           END-IF.

       6141-EXIT.  EXIT.

       6142-CLOSE-DLV-MFST-UNIT.
      *--------------------------

           MOVE '6142-DLV-MFST-UNIT'               TO WS-MESSAGE.

           EXEC SQL
                 CLOSE DLV-MFST-UNIT
           END-EXEC.

       6142-EXIT.  EXIT.

       6200-UPDATE-WMOPT66A.
      *****************************************************
      *** UPDATE THE EQUIPMENT TABLE
      ******************************************************

           MOVE '6200-UPDATE-WMOPT66A'      TO WS-MESSAGE.

           EXEC SQL
                UPDATE WMOPT66A
                   SET UNIT_NBR    = :OP66-UNIT-NBR
                     , NBR_BILLS   = :OP66-NBR-BILLS
                     , LOADED_WT   = :OP66-LOADED-WT
                     , HANDLE_WT   = :OP66-HANDLE-WT
                     , OLDEST_BILL_DUE_DT = :OP66-OLDEST-BILL-DUE-DT
                     , CHG_TIMESTAMP      = :OP66-CHG-TIMESTAMP
                     , USERID             = :OP66-USERID
                     , BIG_BILL_COUNT     = :OP66-BIG-BILL-COUNT
                WHERE CMPNY         = :OP66-CMPNY
                  AND UNIT_NBR      = :OP66-UNIT-NBR
                  AND CHG_TIMESTAMP = :WS-CHG-TIMESTAMP
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6200-EXIT.  EXIT.

       6210-UPDATE-WMOPT77A.
      *****************************************************
      *** UPDATE THE PRO-LOCATION TABLE
      ******************************************************

           MOVE '6210-UPDATE-WMOPT77A'      TO WS-MESSAGE.

           EXEC SQL
                UPDATE WMOPT77A
                   SET PRO_LOC_CD    = :OP77-PRO-LOC-CD,
                       UNIT_NBR      = :OP77-UNIT-NBR,
                       DOCK          = :OP77-DOCK,
                       TRM_ID        = :OP77-TRM-ID,
                       CHG_TIMESTAMP = :OP77-CHG-TIMESTAMP,
                       USERID        = :OP77-USERID,
                       DOCK_PRINTED  = :OP77-DOCK-PRINTED
                WHERE CMPNY   = :OP77-CMPNY
                  AND PRO_NBR = :OP77-PRO-NBR
                  AND PRO_SUF = :OP77-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6210-EXIT.  EXIT.

       6300-DELETE-LOAD-MFST.
      *****************************************************
      *** DELETES A MANIFEST ROW
      ******************************************************

           MOVE '6300-DELETE-LOAD-MFST'     TO WS-MESSAGE.

           EXEC SQL
                DELETE FROM WMOPT12A
                WHERE CMPNY    = :OP12-CMPNY
                  AND MFST_NBR = :OP12-MFST-NBR
                  AND PRO_NBR  = :OP12-PRO-NBR
                  AND PRO_SUF  = :OP12-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6300-EXIT.  EXIT.

       6310-DELETE-DELV-MFST.
      *****************************************************
      *** DELETES A MANIFEST ROW
      ******************************************************

           MOVE '6310-DELETE-DELV-MFST'     TO WS-MESSAGE.

           EXEC SQL
                DELETE FROM WMOPT14A
                WHERE CMPNY    = :OP14-CMPNY
                  AND MFST_NBR = :OP14-MFST-NBR
                  AND PRO_NBR  = :OP14-PRO-NBR
                  AND PRO_SUF  = :OP14-PRO-SUF
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6310-EXIT.  EXIT.

       6320-DELETE-WMOPT68A.
      *****************************************************
      *** DELETES A MANIFEST ROW
      ******************************************************

           MOVE '6320-DELETE-WMOPT68A'      TO WS-MESSAGE.

           EXEC SQL
                DELETE FROM WMOPT68A
                WHERE CMPNY         = :OP68-CMPNY
                  AND UNIT_NBR      = :OP68-UNIT-NBR
                  AND CHG_TIMESTAMP = :WS-CHG-TIMESTAMP
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6320-EXIT.  EXIT.

       6400-INSERT-WMOPT52A.
      *****************************************************
      *** INSERTS A ROW FOR THE PRO EVENT HISTORY
      ******************************************************

           MOVE '6400-INSERT-WMOPT52A'      TO WS-MESSAGE.

           EXEC SQL
                INSERT INTO WMOPT52A
                       (CMPNY,
                        PRO_NBR,
                        PRO_SUF,
                        EVENT_TIMESTAMP,
                        EVENT_TYP,
                        EVENT_DESC,
                        USERID)
                VALUES (:OP52-CMPNY,
                        :OP52-PRO-NBR,
                        :OP52-PRO-SUF,
                        :OP52-EVENT-TIMESTAMP,
                        :OP52-EVENT-TYP,
                        :OP52-EVENT-DESC,
                        :OP52-USERID)
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6400-EXIT.  EXIT.

       6410-INSERT-LOAD-MFST.
      *****************************************************
      *** INSERTS A ROW FOR THE MANIFEST TABLE
      ******************************************************

           MOVE '6410-INSERT-LOAD-MFST'     TO WS-MESSAGE.

           EXEC SQL
                INSERT INTO WMOPT12A
                       (CMPNY,
                        MFST_NBR,
                        MFST_TIMESTAMP,
                        UNIT_NBR,
                        PRO_NBR,
                        PRO_SUF,
                        ORIG_TERM,
                        HL_FLAG,
                        CHG_TIMESTAMP,
                        USERID,
                        DELV_PRINTED,
                        TRFR_PRINTED,
                        MISLOAD_ERROR)
                VALUES (:OP12-CMPNY,
                        :OP12-MFST-NBR,
                        :OP12-MFST-TIMESTAMP,
                        :OP12-UNIT-NBR,
                        :OP12-PRO-NBR,
                        :OP12-PRO-SUF,
                        :OP12-ORIG-TERM,
                        :OP12-HL-FLAG,
                        :OP12-CHG-TIMESTAMP,
                        :OP12-USERID,
                        :OP12-DELV-PRINTED,
                        :OP12-TRFR-PRINTED,
                        :OP12-MISLOAD-ERROR)
           END-EXEC.

           IF SQLCODE = +0 OR
              SQLCODE = +100 OR
              SQLCODE = -803
              CONTINUE
           ELSE
              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT
           END-IF.

           IF SQLCODE = -803

               EXEC SQL
                    UPDATE WMOPT12A
                       SET HL_FLAG          = :OP12-HL-FLAG,
                           CHG_TIMESTAMP    = :OP12-CHG-TIMESTAMP,
                           USERID           = :OP12-USERID,
                           DELV_PRINTED     = :OP12-DELV-PRINTED,
                           TRFR_PRINTED     = :OP12-TRFR-PRINTED,
                           MISLOAD_ERROR = :OP12-MISLOAD-ERROR
                    WHERE CMPNY    = :OP12-CMPNY
                      AND MFST_NBR = :OP12-MFST-NBR
                      AND UNIT_NBR = :OP12-UNIT-NBR
                      AND PRO_NBR  = :OP12-PRO-NBR
                      AND PRO_SUF  = :OP12-PRO-SUF
               END-EXEC

              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT

           END-IF.

       6410-EXIT.  EXIT.

       6420-INSERT-DELV-MFST.
      *****************************************************
      *** INSERTS A ROW FOR THE MANIFEST TABLE
      ******************************************************

           MOVE '6420-INSERT-WMOPT14A'      TO WS-MESSAGE.

           EXEC SQL
                INSERT INTO WMOPT14A
                       (CMPNY,
                        MFST_NBR,
                        MFST_TIMESTAMP,
                        UNIT_NBR,
                        PRO_NBR,
                        PRO_SUF,
                        FAD_DATE,
                        DELV_PRINTED,
                        TRFR_PRINTED,
                        DLVD_DT,
                        CHG_TIMESTAMP,
                        USERID,
                        TERM_ID,
                        DMAN_PRINTED,
                        MISLOAD_ERROR)
                VALUES (:OP14-CMPNY,
                        :OP14-MFST-NBR,
                        :OP14-MFST-TIMESTAMP,
                        :OP14-UNIT-NBR,
                        :OP14-PRO-NBR,
                        :OP14-PRO-SUF,
                        :OP14-FAD-DATE,
                        :OP14-DELV-PRINTED,
                        :OP14-TRFR-PRINTED,
                        :OP14-DLVD-DT,
                        :OP14-CHG-TIMESTAMP,
                        :OP14-USERID,
                        :OP14-TERM-ID,
                        :OP14-DMAN-PRINTED,
                        :OP14-MISLOAD-ERROR)
           END-EXEC.

           IF SQLCODE = +0 OR
              SQLCODE = +100 OR
              SQLCODE = -803
              CONTINUE
           ELSE
              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT
           END-IF.

           IF SQLCODE = -803

               EXEC SQL
                    UPDATE WMOPT14A
                       SET CHG_TIMESTAMP   = :OP14-CHG-TIMESTAMP,
                           USERID          = :OP14-USERID,
                           DELV_PRINTED    = :OP14-DELV-PRINTED,
                           TRFR_PRINTED    = :OP14-TRFR-PRINTED,
                           MISLOAD_ERROR   = :OP14-MISLOAD-ERROR,
                           DMAN_PRINTED    = :OP14-DMAN-PRINTED
                    WHERE CMPNY    = :OP14-CMPNY
                      AND MFST_NBR = :OP14-MFST-NBR
                      AND UNIT_NBR = :OP14-UNIT-NBR
                      AND PRO_NBR  = :OP14-PRO-NBR
                      AND PRO_SUF  = :OP14-PRO-SUF
               END-EXEC

              PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT

           END-IF.

       6420-EXIT.  EXIT.

       6430-INSERT-WMOPT84A.
      *****************************************************
      *** INSERTS A ROW FOR THE 'UP' EXTRACT
      ******************************************************

           MOVE '6430-INSERT-WMOPT84A'      TO WS-MESSAGE.

           EXEC SQL
                INSERT INTO WMOPT84A
                       (CMPNY,
                        EXTRACT_TS,
                        PRO_NBR,
                        PRO_SUF,
                        UNIT_NBR_FROM,
                        UNIT_NBR_TO,
                        DEST_TERM,
                        TRAN_TERM,
                        TRAN_DATE,
                        TRAN_TIME,
                        ENTER_DATE,
                        ENTER_TIME,
                        UNIT_TYP_FROM,
                        UNIT_TYP_TO,
                        TO_DISP_LOC,
                        USERID)
                VALUES (:OP84-CMPNY,
                        :OP84-EXTRACT-TS,
                        :OP84-PRO-NBR,
                        :OP84-PRO-SUF,
                        :OP84-UNIT-NBR-FROM,
                        :OP84-UNIT-NBR-TO,
                        :OP84-DEST-TERM,
                        :OP84-TRAN-TERM,
                        :OP84-TRAN-DATE,
                        :OP84-TRAN-TIME,
                        :OP84-ENTER-DATE,
                        :OP84-ENTER-TIME,
                        :OP84-UNIT-TYP-FROM,
                        :OP84-UNIT-TYP-TO,
                        :OP84-TO-DISP-LOC,
                        :OP84-USERID)
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6430-EXIT.  EXIT.

       6440-INSERT-WMOPT68A.
      *****************************************************
      *** UPDATE THE EQUIPMENT TABLE
      ******************************************************

           MOVE '6440-INSERT-WMOPT68A'      TO WS-MESSAGE.

           EXEC SQL
                INSERT INTO WMOPT68A
                VALUES(:OP68-WMOPT68A)
           END-EXEC.

           PERFORM 9091-SQL-RET-CODE THRU 9091-EXIT.

       6440-EXIT.  EXIT.

CH0005 6500-PRINT-TRANS-REPORT.
CH0005*****************************************************
CH0005*** THIS REPORT WILL BE PRINTED TO THE 'TO' TERMINAL
CH0005*** WHENEVER A TERMINAL TO TERMINAL TRANSFER IS DONE.
CH0005*** THIS NOTICE WILL CONTAIN THE PROS BEING TRANSFER,
CH0005*** THE REASON, AND WHAT 'DOCK' THEY WERE TRANSFERRED
CH0005*** TO, EITHER 'TD' OR 'DD'.
CH005 ******************************************************

CH0005     MOVE '6500-PRINT-TRANS-REPORT'   TO WS-MESSAGE.

CH0005     IF WS-CMA-OPEN = 'N'
CH0005        MOVE SCA-PRINTER-QUEUE TO WS-DEFAULT-QUEUE

CH0005        MOVE '2' TO SCA-PRINTER-QUEUE

CH0005********MOVE 'TO' TERMINAL TO OPEN-DEST FOR
CH0005********TRANSFER REPORT TO PRINT

CH0005        MOVE LK-TOTRM TO OPEN-DEST

CH0005        PERFORM 9962-OPEN-CMA-FILE THRU 9962-EXIT
CH0005        MOVE 'Y'   TO WS-CMA-OPEN
CH0005     END-IF.

CH0005     IF WS-LINE-CT > WS-MAX-LINES-PER-PAGE
CH0005        PERFORM 6520-PRINT-HEADINGS THRU 6520-EXIT
CH0005     END-IF.

CH0005     PERFORM 6510-PRINT-DETAIL THRU 6510-EXIT.

CH0005     MOVE SPACES TO WS-DETAIL-LINE-1.

       6500-EXIT.  EXIT.

CH0005 6510-PRINT-DETAIL.

CH0005     MOVE '6510-PRINT-DETAIL'         TO WS-MESSAGE.

CH0005     MOVE LK-PRO(WS-LNK)       TO WS-DL1-PRO-NBR.
CH0005     MOVE LK-REASON(WS-LNK)    TO WS-DL1-REASON.
CH0005     MOVE WS-PRO-DOCK          TO WS-DL1-DOCK.

CH0005     SET ADVANCE-1-LINE        TO TRUE.

CH0005     MOVE WS-DETAIL-LINE-1     TO WRITE-LINE-D90.

CH0005     PERFORM 9964-WRITE-CMA-REC THRU 9964-EXIT.

CH0005     ADD +1                    TO WS-LINE-CT.

       6510-EXIT.  EXIT.

CH0005 6520-PRINT-HEADINGS.

CH0005     MOVE '6520-PRINT-HEADINGS'       TO WS-MESSAGE.

CH0005     MOVE +0                    TO WS-LINE-CT.
CH0005     ADD +1                     TO WS-PAGE-NO.
CH0005     MOVE WS-PAGE-NO            TO WS-HL1-PAGE-NO.
CH0005     MOVE SCA-CURRENT-DATE-DISP TO WS-HL1-DATE.
CH0005     SET ADVANCE-PAGE           TO TRUE.

CH0005     MOVE WS-HEADING-LINE-1      TO WRITE-LINE-D90.
CH0005     PERFORM 9964-WRITE-CMA-REC THRU 9964-EXIT.
CH0005     ADD +1                      TO WS-LINE-CT.

CH0005     MOVE TFMSACA-CMPNY         TO WS-HL2-CMPNY.
CH0005     MOVE TFMSACA-OPER-TRMID    TO WS-HL2-TERM.
CH0005     MOVE SCA-CURRENT-TIME      TO WS-HL2-TIME.
CH0005     SET ADVANCE-1-LINE         TO TRUE.

CH0005     MOVE WS-HEADING-LINE-2      TO WRITE-LINE-D90.
CH0005     PERFORM 9964-WRITE-CMA-REC THRU 9964-EXIT.
CH0005     ADD +1                      TO WS-LINE-CT.

CH0005     MOVE LK-FROMTRM            TO WS-HL3-FROM-TERM.
CH0005     MOVE LK-TOTRM              TO WS-HL3-TO-TERM.
CH0005     SET ADVANCE-2-LINES        TO TRUE.

CH0005     MOVE WS-HEADING-LINE-3      TO WRITE-LINE-D90.
CH0005     PERFORM 9964-WRITE-CMA-REC THRU 9964-EXIT.
CH0005     ADD +2                      TO WS-LINE-CT.

CH0005     MOVE WS-HEADING-LINE-4      TO WRITE-LINE-D90.
CH0005     PERFORM 9964-WRITE-CMA-REC THRU 9964-EXIT.
CH0005     ADD +2                      TO WS-LINE-CT.

       6520-EXIT.  EXIT.

       7000-INIT-WORK-UNIT.
      *****************************************************
      *** INITIALIZE FIELDS BEFORE RE-PROCESS UNIT
      ******************************************************

           MOVE '7000-INIT-WORK-UNIT'       TO WS-MESSAGE.

           INITIALIZE    OP77-WMOPT77A
                         OP12-WMOPT12A
                         OP14-WMOPT14A
                         OP66-WMOPT66A
                         OP68-WMOPT68A
                         WMRTT05A.

           MOVE TFMSACA-CMPNY TO  OP77-CMPNY
                                  OP12-CMPNY
                                  OP14-CMPNY
                                  OP66-CMPNY
                                  OP68-CMPNY
                                  TF-CMPNY OF WMRTT05A.

           INITIALIZE    WS-NBR-BILLS
                         WS-LOADED-WT
                         WS-HANDLE-WT
                         WS-OLDEST-BILL-DUE-DT
                         WS-HEADLOAD
                         WS-BIG-BILL-COUNT
                         WS-CHG-TIMESTAMP.

           MOVE 'N' TO WS-EOF-MFST.

       7000-EXIT.  EXIT.

       7030-MOVE-ATTRIBUTES.
      *****************************************************
      *** SET ATTRIBUTE BYTES
      ******************************************************

           MOVE '7030-SET-STTRIBUTES'       TO WS-MESSAGE.

           MOVE WX-ATTR1 TO FROMTRMA
                            TOTRMA
                            FROMTRLA
                            TOTRLRA
                            FROMDCKA
                            TODCKA
                            ALLA
                            XPROA
                            DSTA
                            XDSTA
                            ORGA
                            XORGA.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
              UNTIL WS-SCRN > WS-MAX-SCRN-LINES

               MOVE WX-ATTR1 TO PNL-PROA(WS-SCRN)
                                PNL-REASONA(WS-SCRN)
                                PNL-ERRORA(WS-SCRN)
           END-PERFORM.

       7030-EXIT.  EXIT.

       7031-PROTECT-ALL.
      *****************************************************
      *** PROTECT ALL FIELDS WHEN PROCESS COMPLETED
      ******************************************************

           MOVE '7031-PROTECT-ALL'          TO WS-MESSAGE.

           MOVE ATTR-PADX TO FROMTRMA
                             TOTRMA
                             FROMTRLA
                             TOTRLRA
                             FROMDCKA
                             TODCKA
                             ALLA
                             XPROA
                             DSTA
                             XDSTA
                             ORGA
                             XORGA.

           PERFORM VARYING WS-SCRN FROM 1 BY 1
              UNTIL WS-SCRN > WS-MAX-SCRN-LINES

               MOVE ATTR-PADX TO PNL-PROA(WS-SCRN)
                                 PNL-REASONA(WS-SCRN)
                                 PNL-ERRORA(WS-SCRN)
           END-PERFORM.

       7031-EXIT.  EXIT.

       COPY CICSRMAP.

       COPY CICSSMAP.

       8000-ENQUEUE-OP66-FROMTRLR.
      *****************************************************
      *** ENQUEUES THE FROM UNIT FOR UPDATES
      ******************************************************

           MOVE '8000-ENQUEUE-FROM-UNIT'    TO WS-MESSAGE.

           MOVE 'WMOPT066A' TO WS-ENQ.
           MOVE TFMSACA-CMPNY TO WS-ENQ(9:).
           MOVE LK-FROMTRLR   TO WS-ENQ(10:).

           EXEC CICS ENQ
                RESOURCE (WS-ENQ)
                LENGTH   (LENGTH OF WS-ENQ)
                RESP     (WS-RESP-CODE)
           END-EXEC.

           IF WS-RESP-CODE NOT EQUAL DFHRESP(NORMAL)
              MOVE 'ENQ' TO WS-ABCODE
              PERFORM 9900-ABORT-TASK
           END-IF.

       8000-EXIT. EXIT.

       8005-ENQUEUE-OP68-FROMTRLR.
      *****************************************************
      *** ENQUEUES THE FROM UNIT FOR UPDATES
      ******************************************************

           MOVE '8005-ENQUEUE-OP68-FROM-UNIT'    TO WS-MESSAGE.

           MOVE 'WMOPT068A' TO WS-ENQ.
           MOVE TFMSACA-CMPNY TO WS-ENQ(9:).
           MOVE LK-FROMTRLR   TO WS-ENQ(10:).

           EXEC CICS ENQ
                RESOURCE (WS-ENQ)
                LENGTH   (LENGTH OF WS-ENQ)
                RESP     (WS-RESP-CODE)
           END-EXEC.

           IF WS-RESP-CODE NOT EQUAL DFHRESP(NORMAL)
              MOVE 'ENQ' TO WS-ABCODE
              PERFORM 9900-ABORT-TASK
           END-IF.

       8005-EXIT. EXIT.

       8100-ENQUEUE-OP66-TOTRLR.
      *****************************************************
      *** ENQUEUES THE FROM UNIT FOR UPDATES
      ******************************************************

           MOVE '8100-ENQUEUE-OP66-TOTRLR' TO WS-MESSAGE.

           MOVE 'WMOPT066A'   TO WS-ENQ.
           MOVE TFMSACA-CMPNY TO WS-ENQ(9:).
           MOVE LK-TOTRLR     TO WS-ENQ(10:).

           EXEC CICS ENQ
                RESOURCE (WS-ENQ)
                LENGTH   (LENGTH OF WS-ENQ)
                RESP     (WS-RESP-CODE)
           END-EXEC.

           IF WS-RESP-CODE NOT EQUAL DFHRESP(NORMAL)
              MOVE 'ENQ' TO WS-ABCODE
              PERFORM 9900-ABORT-TASK
           END-IF.

       8100-EXIT. EXIT.

       8105-ENQUEUE-OP68-TOTRLR.
      *****************************************************
      *** ENQUEUES THE FROM UNIT FOR UPDATES
      ******************************************************

           MOVE '8105-ENQUEUE-OP68-TOTRLR' TO WS-MESSAGE.

           MOVE 'WMOPT068A'   TO WS-ENQ.
           MOVE TFMSACA-CMPNY TO WS-ENQ(9:).
           MOVE LK-TOTRLR     TO WS-ENQ(10:).

           EXEC CICS ENQ
                RESOURCE (WS-ENQ)
                LENGTH   (LENGTH OF WS-ENQ)
                RESP     (WS-RESP-CODE)
           END-EXEC.

           IF WS-RESP-CODE NOT EQUAL DFHRESP(NORMAL)
              MOVE 'ENQ' TO WS-ABCODE
              PERFORM 9900-ABORT-TASK
           END-IF.

       8105-EXIT. EXIT.

       8300-DEQUEUE-RESOURCE.
      *****************************************************
      *** DEQUEUES THE UNIT AFTER ALL PRO PROCESSING IS DONE
      ******************************************************

           MOVE '8300-DEQUEUE-RESOURCE'   TO WS-MESSAGE.

           EXEC CICS DEQ
                RESOURCE (WS-ENQ)
                LENGTH   (LENGTH OF WS-ENQ)
                RESP     (WS-RESP-CODE)
           END-EXEC.

           IF WS-RESP-CODE NOT EQUAL DFHRESP(NORMAL)
              MOVE 'DEQ' TO WS-ABCODE
              PERFORM 9900-ABORT-TASK
           END-IF.

       8300-EXIT. EXIT.

*******8990-DETERMINE-SECURITY*********
            EXEC SQL INCLUDE PDSECLKP END-EXEC.

       9000-CICSXCTL.
            EXEC SQL INCLUDE CICSXCTL END-EXEC.
       9000-EXIT. EXIT.

       COPY PDDB2A.

            EXEC SQL INCLUDE PDSQLPTH END-EXEC.

            EXEC SQL INCLUDE PDERRMSG END-EXEC.

CH0005      EXEC SQL INCLUDE CMAPOPEN END-EXEC.

CH0005      EXEC SQL INCLUDE CMAPWRIT END-EXEC.

CH0005      EXEC SQL INCLUDE CMAPCLOS END-EXEC.

CH0005      EXEC SQL INCLUDE CMAPSTAT END-EXEC.

       COPY CICSABT.

            EXEC SQL INCLUDE OPCLDPLP END-EXEC.

       COPY PDENDPGM.

